
DIO_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000023dc  00002450  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000017d0  00000000  00000000  00002458  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000087f  00000000  00000000  00003c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  000044a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000045e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004757  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  000063a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000728b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008038  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008198  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008425  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008bf3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ed       	ldi	r30, 0xDC	; 220
      68:	f3 e2       	ldi	r31, 0x23	; 35
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 ec 11 	jmp	0x23d8	; 0x23d8 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b5 11 	jmp	0x236a	; 0x236a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d1 11 	jmp	0x23a2	; 0x23a2 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b5 11 	jmp	0x236a	; 0x236a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d1 11 	jmp	0x23a2	; 0x23a2 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c1 11 	jmp	0x2382	; 0x2382 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c5 11 	jmp	0x238a	; 0x238a <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 e1 11 	jmp	0x23c2	; 0x23c2 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:
#include "init.h"
#include <util/delay.h>


int main(void)
{
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c8 5a       	subi	r28, 0xA8	; 168
     b44:	d0 40       	sbci	r29, 0x00	; 0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61

    DIO_init();
     b50:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <DIO_init>

    while(1)
   {

    	Setpin_value(DIO_u8PORTA, DIO_u8PIN0 , DIO_U8LOW );
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	60 e0       	ldi	r22, 0x00	; 0
     b58:	40 e0       	ldi	r20, 0x00	; 0
     b5a:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN0 ,DIO_U8HIGH);
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	60 e0       	ldi	r22, 0x00	; 0
     b62:	41 e0       	ldi	r20, 0x01	; 1
     b64:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
     b68:	fe 01       	movw	r30, r28
     b6a:	eb 55       	subi	r30, 0x5B	; 91
     b6c:	ff 4f       	sbci	r31, 0xFF	; 255
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	a6 e1       	ldi	r26, 0x16	; 22
     b74:	b3 e4       	ldi	r27, 0x43	; 67
     b76:	80 83       	st	Z, r24
     b78:	91 83       	std	Z+1, r25	; 0x01
     b7a:	a2 83       	std	Z+2, r26	; 0x02
     b7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b7e:	8e 01       	movw	r16, r28
     b80:	0f 55       	subi	r16, 0x5F	; 95
     b82:	1f 4f       	sbci	r17, 0xFF	; 255
     b84:	fe 01       	movw	r30, r28
     b86:	eb 55       	subi	r30, 0x5B	; 91
     b88:	ff 4f       	sbci	r31, 0xFF	; 255
     b8a:	60 81       	ld	r22, Z
     b8c:	71 81       	ldd	r23, Z+1	; 0x01
     b8e:	82 81       	ldd	r24, Z+2	; 0x02
     b90:	93 81       	ldd	r25, Z+3	; 0x03
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	4a e7       	ldi	r20, 0x7A	; 122
     b98:	53 e4       	ldi	r21, 0x43	; 67
     b9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b9e:	dc 01       	movw	r26, r24
     ba0:	cb 01       	movw	r24, r22
     ba2:	f8 01       	movw	r30, r16
     ba4:	80 83       	st	Z, r24
     ba6:	91 83       	std	Z+1, r25	; 0x01
     ba8:	a2 83       	std	Z+2, r26	; 0x02
     baa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bac:	fe 01       	movw	r30, r28
     bae:	ef 55       	subi	r30, 0x5F	; 95
     bb0:	ff 4f       	sbci	r31, 0xFF	; 255
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e8       	ldi	r20, 0x80	; 128
     bc0:	5f e3       	ldi	r21, 0x3F	; 63
     bc2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bc6:	88 23       	and	r24, r24
     bc8:	44 f4       	brge	.+16     	; 0xbda <main+0xa4>
		__ticks = 1;
     bca:	fe 01       	movw	r30, r28
     bcc:	e1 56       	subi	r30, 0x61	; 97
     bce:	ff 4f       	sbci	r31, 0xFF	; 255
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
     bd8:	64 c0       	rjmp	.+200    	; 0xca2 <main+0x16c>
	else if (__tmp > 65535)
     bda:	fe 01       	movw	r30, r28
     bdc:	ef 55       	subi	r30, 0x5F	; 95
     bde:	ff 4f       	sbci	r31, 0xFF	; 255
     be0:	60 81       	ld	r22, Z
     be2:	71 81       	ldd	r23, Z+1	; 0x01
     be4:	82 81       	ldd	r24, Z+2	; 0x02
     be6:	93 81       	ldd	r25, Z+3	; 0x03
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	3f ef       	ldi	r19, 0xFF	; 255
     bec:	4f e7       	ldi	r20, 0x7F	; 127
     bee:	57 e4       	ldi	r21, 0x47	; 71
     bf0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bf4:	18 16       	cp	r1, r24
     bf6:	0c f0       	brlt	.+2      	; 0xbfa <main+0xc4>
     bf8:	43 c0       	rjmp	.+134    	; 0xc80 <main+0x14a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bfa:	fe 01       	movw	r30, r28
     bfc:	eb 55       	subi	r30, 0x5B	; 91
     bfe:	ff 4f       	sbci	r31, 0xFF	; 255
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	82 81       	ldd	r24, Z+2	; 0x02
     c06:	93 81       	ldd	r25, Z+3	; 0x03
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	40 e2       	ldi	r20, 0x20	; 32
     c0e:	51 e4       	ldi	r21, 0x41	; 65
     c10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c14:	dc 01       	movw	r26, r24
     c16:	cb 01       	movw	r24, r22
     c18:	8e 01       	movw	r16, r28
     c1a:	01 56       	subi	r16, 0x61	; 97
     c1c:	1f 4f       	sbci	r17, 0xFF	; 255
     c1e:	bc 01       	movw	r22, r24
     c20:	cd 01       	movw	r24, r26
     c22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c26:	dc 01       	movw	r26, r24
     c28:	cb 01       	movw	r24, r22
     c2a:	f8 01       	movw	r30, r16
     c2c:	91 83       	std	Z+1, r25	; 0x01
     c2e:	80 83       	st	Z, r24
     c30:	1f c0       	rjmp	.+62     	; 0xc70 <main+0x13a>
     c32:	fe 01       	movw	r30, r28
     c34:	e3 56       	subi	r30, 0x63	; 99
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	89 e1       	ldi	r24, 0x19	; 25
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	91 83       	std	Z+1, r25	; 0x01
     c3e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c40:	fe 01       	movw	r30, r28
     c42:	e3 56       	subi	r30, 0x63	; 99
     c44:	ff 4f       	sbci	r31, 0xFF	; 255
     c46:	80 81       	ld	r24, Z
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	f1 f7       	brne	.-4      	; 0xc4a <main+0x114>
     c4e:	fe 01       	movw	r30, r28
     c50:	e3 56       	subi	r30, 0x63	; 99
     c52:	ff 4f       	sbci	r31, 0xFF	; 255
     c54:	91 83       	std	Z+1, r25	; 0x01
     c56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c58:	de 01       	movw	r26, r28
     c5a:	a1 56       	subi	r26, 0x61	; 97
     c5c:	bf 4f       	sbci	r27, 0xFF	; 255
     c5e:	fe 01       	movw	r30, r28
     c60:	e1 56       	subi	r30, 0x61	; 97
     c62:	ff 4f       	sbci	r31, 0xFF	; 255
     c64:	80 81       	ld	r24, Z
     c66:	91 81       	ldd	r25, Z+1	; 0x01
     c68:	01 97       	sbiw	r24, 0x01	; 1
     c6a:	11 96       	adiw	r26, 0x01	; 1
     c6c:	9c 93       	st	X, r25
     c6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c70:	fe 01       	movw	r30, r28
     c72:	e1 56       	subi	r30, 0x61	; 97
     c74:	ff 4f       	sbci	r31, 0xFF	; 255
     c76:	80 81       	ld	r24, Z
     c78:	91 81       	ldd	r25, Z+1	; 0x01
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	d1 f6       	brne	.-76     	; 0xc32 <main+0xfc>
     c7e:	27 c0       	rjmp	.+78     	; 0xcce <main+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c80:	8e 01       	movw	r16, r28
     c82:	01 56       	subi	r16, 0x61	; 97
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	fe 01       	movw	r30, r28
     c88:	ef 55       	subi	r30, 0x5F	; 95
     c8a:	ff 4f       	sbci	r31, 0xFF	; 255
     c8c:	60 81       	ld	r22, Z
     c8e:	71 81       	ldd	r23, Z+1	; 0x01
     c90:	82 81       	ldd	r24, Z+2	; 0x02
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c98:	dc 01       	movw	r26, r24
     c9a:	cb 01       	movw	r24, r22
     c9c:	f8 01       	movw	r30, r16
     c9e:	91 83       	std	Z+1, r25	; 0x01
     ca0:	80 83       	st	Z, r24
     ca2:	de 01       	movw	r26, r28
     ca4:	a5 56       	subi	r26, 0x65	; 101
     ca6:	bf 4f       	sbci	r27, 0xFF	; 255
     ca8:	fe 01       	movw	r30, r28
     caa:	e1 56       	subi	r30, 0x61	; 97
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	80 81       	ld	r24, Z
     cb0:	91 81       	ldd	r25, Z+1	; 0x01
     cb2:	8d 93       	st	X+, r24
     cb4:	9c 93       	st	X, r25
     cb6:	fe 01       	movw	r30, r28
     cb8:	e5 56       	subi	r30, 0x65	; 101
     cba:	ff 4f       	sbci	r31, 0xFF	; 255
     cbc:	80 81       	ld	r24, Z
     cbe:	91 81       	ldd	r25, Z+1	; 0x01
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <main+0x18a>
     cc4:	fe 01       	movw	r30, r28
     cc6:	e5 56       	subi	r30, 0x65	; 101
     cc8:	ff 4f       	sbci	r31, 0xFF	; 255
     cca:	91 83       	std	Z+1, r25	; 0x01
     ccc:	80 83       	st	Z, r24
    	    	 _delay_ms(150);
    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN1 ,DIO_U8HIGH);
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	41 e0       	ldi	r20, 0x01	; 1
     cd4:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
     cd8:	fe 01       	movw	r30, r28
     cda:	e9 56       	subi	r30, 0x69	; 105
     cdc:	ff 4f       	sbci	r31, 0xFF	; 255
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	a6 e1       	ldi	r26, 0x16	; 22
     ce4:	b3 e4       	ldi	r27, 0x43	; 67
     ce6:	80 83       	st	Z, r24
     ce8:	91 83       	std	Z+1, r25	; 0x01
     cea:	a2 83       	std	Z+2, r26	; 0x02
     cec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cee:	8e 01       	movw	r16, r28
     cf0:	0d 56       	subi	r16, 0x6D	; 109
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	fe 01       	movw	r30, r28
     cf6:	e9 56       	subi	r30, 0x69	; 105
     cf8:	ff 4f       	sbci	r31, 0xFF	; 255
     cfa:	60 81       	ld	r22, Z
     cfc:	71 81       	ldd	r23, Z+1	; 0x01
     cfe:	82 81       	ldd	r24, Z+2	; 0x02
     d00:	93 81       	ldd	r25, Z+3	; 0x03
     d02:	20 e0       	ldi	r18, 0x00	; 0
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	4a e7       	ldi	r20, 0x7A	; 122
     d08:	53 e4       	ldi	r21, 0x43	; 67
     d0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d0e:	dc 01       	movw	r26, r24
     d10:	cb 01       	movw	r24, r22
     d12:	f8 01       	movw	r30, r16
     d14:	80 83       	st	Z, r24
     d16:	91 83       	std	Z+1, r25	; 0x01
     d18:	a2 83       	std	Z+2, r26	; 0x02
     d1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d1c:	fe 01       	movw	r30, r28
     d1e:	ed 56       	subi	r30, 0x6D	; 109
     d20:	ff 4f       	sbci	r31, 0xFF	; 255
     d22:	60 81       	ld	r22, Z
     d24:	71 81       	ldd	r23, Z+1	; 0x01
     d26:	82 81       	ldd	r24, Z+2	; 0x02
     d28:	93 81       	ldd	r25, Z+3	; 0x03
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	40 e8       	ldi	r20, 0x80	; 128
     d30:	5f e3       	ldi	r21, 0x3F	; 63
     d32:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d36:	88 23       	and	r24, r24
     d38:	44 f4       	brge	.+16     	; 0xd4a <main+0x214>
		__ticks = 1;
     d3a:	fe 01       	movw	r30, r28
     d3c:	ef 56       	subi	r30, 0x6F	; 111
     d3e:	ff 4f       	sbci	r31, 0xFF	; 255
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	91 83       	std	Z+1, r25	; 0x01
     d46:	80 83       	st	Z, r24
     d48:	64 c0       	rjmp	.+200    	; 0xe12 <main+0x2dc>
	else if (__tmp > 65535)
     d4a:	fe 01       	movw	r30, r28
     d4c:	ed 56       	subi	r30, 0x6D	; 109
     d4e:	ff 4f       	sbci	r31, 0xFF	; 255
     d50:	60 81       	ld	r22, Z
     d52:	71 81       	ldd	r23, Z+1	; 0x01
     d54:	82 81       	ldd	r24, Z+2	; 0x02
     d56:	93 81       	ldd	r25, Z+3	; 0x03
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	3f ef       	ldi	r19, 0xFF	; 255
     d5c:	4f e7       	ldi	r20, 0x7F	; 127
     d5e:	57 e4       	ldi	r21, 0x47	; 71
     d60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d64:	18 16       	cp	r1, r24
     d66:	0c f0       	brlt	.+2      	; 0xd6a <main+0x234>
     d68:	43 c0       	rjmp	.+134    	; 0xdf0 <main+0x2ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d6a:	fe 01       	movw	r30, r28
     d6c:	e9 56       	subi	r30, 0x69	; 105
     d6e:	ff 4f       	sbci	r31, 0xFF	; 255
     d70:	60 81       	ld	r22, Z
     d72:	71 81       	ldd	r23, Z+1	; 0x01
     d74:	82 81       	ldd	r24, Z+2	; 0x02
     d76:	93 81       	ldd	r25, Z+3	; 0x03
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	40 e2       	ldi	r20, 0x20	; 32
     d7e:	51 e4       	ldi	r21, 0x41	; 65
     d80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d84:	dc 01       	movw	r26, r24
     d86:	cb 01       	movw	r24, r22
     d88:	8e 01       	movw	r16, r28
     d8a:	0f 56       	subi	r16, 0x6F	; 111
     d8c:	1f 4f       	sbci	r17, 0xFF	; 255
     d8e:	bc 01       	movw	r22, r24
     d90:	cd 01       	movw	r24, r26
     d92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d96:	dc 01       	movw	r26, r24
     d98:	cb 01       	movw	r24, r22
     d9a:	f8 01       	movw	r30, r16
     d9c:	91 83       	std	Z+1, r25	; 0x01
     d9e:	80 83       	st	Z, r24
     da0:	1f c0       	rjmp	.+62     	; 0xde0 <main+0x2aa>
     da2:	fe 01       	movw	r30, r28
     da4:	e1 57       	subi	r30, 0x71	; 113
     da6:	ff 4f       	sbci	r31, 0xFF	; 255
     da8:	89 e1       	ldi	r24, 0x19	; 25
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	80 83       	st	Z, r24
     db0:	fe 01       	movw	r30, r28
     db2:	e1 57       	subi	r30, 0x71	; 113
     db4:	ff 4f       	sbci	r31, 0xFF	; 255
     db6:	80 81       	ld	r24, Z
     db8:	91 81       	ldd	r25, Z+1	; 0x01
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	f1 f7       	brne	.-4      	; 0xdba <main+0x284>
     dbe:	fe 01       	movw	r30, r28
     dc0:	e1 57       	subi	r30, 0x71	; 113
     dc2:	ff 4f       	sbci	r31, 0xFF	; 255
     dc4:	91 83       	std	Z+1, r25	; 0x01
     dc6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dc8:	de 01       	movw	r26, r28
     dca:	af 56       	subi	r26, 0x6F	; 111
     dcc:	bf 4f       	sbci	r27, 0xFF	; 255
     dce:	fe 01       	movw	r30, r28
     dd0:	ef 56       	subi	r30, 0x6F	; 111
     dd2:	ff 4f       	sbci	r31, 0xFF	; 255
     dd4:	80 81       	ld	r24, Z
     dd6:	91 81       	ldd	r25, Z+1	; 0x01
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	11 96       	adiw	r26, 0x01	; 1
     ddc:	9c 93       	st	X, r25
     dde:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de0:	fe 01       	movw	r30, r28
     de2:	ef 56       	subi	r30, 0x6F	; 111
     de4:	ff 4f       	sbci	r31, 0xFF	; 255
     de6:	80 81       	ld	r24, Z
     de8:	91 81       	ldd	r25, Z+1	; 0x01
     dea:	00 97       	sbiw	r24, 0x00	; 0
     dec:	d1 f6       	brne	.-76     	; 0xda2 <main+0x26c>
     dee:	27 c0       	rjmp	.+78     	; 0xe3e <main+0x308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df0:	8e 01       	movw	r16, r28
     df2:	0f 56       	subi	r16, 0x6F	; 111
     df4:	1f 4f       	sbci	r17, 0xFF	; 255
     df6:	fe 01       	movw	r30, r28
     df8:	ed 56       	subi	r30, 0x6D	; 109
     dfa:	ff 4f       	sbci	r31, 0xFF	; 255
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	82 81       	ldd	r24, Z+2	; 0x02
     e02:	93 81       	ldd	r25, Z+3	; 0x03
     e04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e08:	dc 01       	movw	r26, r24
     e0a:	cb 01       	movw	r24, r22
     e0c:	f8 01       	movw	r30, r16
     e0e:	91 83       	std	Z+1, r25	; 0x01
     e10:	80 83       	st	Z, r24
     e12:	de 01       	movw	r26, r28
     e14:	a3 57       	subi	r26, 0x73	; 115
     e16:	bf 4f       	sbci	r27, 0xFF	; 255
     e18:	fe 01       	movw	r30, r28
     e1a:	ef 56       	subi	r30, 0x6F	; 111
     e1c:	ff 4f       	sbci	r31, 0xFF	; 255
     e1e:	80 81       	ld	r24, Z
     e20:	91 81       	ldd	r25, Z+1	; 0x01
     e22:	8d 93       	st	X+, r24
     e24:	9c 93       	st	X, r25
     e26:	fe 01       	movw	r30, r28
     e28:	e3 57       	subi	r30, 0x73	; 115
     e2a:	ff 4f       	sbci	r31, 0xFF	; 255
     e2c:	80 81       	ld	r24, Z
     e2e:	91 81       	ldd	r25, Z+1	; 0x01
     e30:	01 97       	sbiw	r24, 0x01	; 1
     e32:	f1 f7       	brne	.-4      	; 0xe30 <main+0x2fa>
     e34:	fe 01       	movw	r30, r28
     e36:	e3 57       	subi	r30, 0x73	; 115
     e38:	ff 4f       	sbci	r31, 0xFF	; 255
     e3a:	91 83       	std	Z+1, r25	; 0x01
     e3c:	80 83       	st	Z, r24
    	    	 _delay_ms(150);

    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN2 ,DIO_U8HIGH);
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	62 e0       	ldi	r22, 0x02	; 2
     e42:	41 e0       	ldi	r20, 0x01	; 1
     e44:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
     e48:	fe 01       	movw	r30, r28
     e4a:	e7 57       	subi	r30, 0x77	; 119
     e4c:	ff 4f       	sbci	r31, 0xFF	; 255
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	a6 e1       	ldi	r26, 0x16	; 22
     e54:	b3 e4       	ldi	r27, 0x43	; 67
     e56:	80 83       	st	Z, r24
     e58:	91 83       	std	Z+1, r25	; 0x01
     e5a:	a2 83       	std	Z+2, r26	; 0x02
     e5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e5e:	8e 01       	movw	r16, r28
     e60:	0b 57       	subi	r16, 0x7B	; 123
     e62:	1f 4f       	sbci	r17, 0xFF	; 255
     e64:	fe 01       	movw	r30, r28
     e66:	e7 57       	subi	r30, 0x77	; 119
     e68:	ff 4f       	sbci	r31, 0xFF	; 255
     e6a:	60 81       	ld	r22, Z
     e6c:	71 81       	ldd	r23, Z+1	; 0x01
     e6e:	82 81       	ldd	r24, Z+2	; 0x02
     e70:	93 81       	ldd	r25, Z+3	; 0x03
     e72:	20 e0       	ldi	r18, 0x00	; 0
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	4a e7       	ldi	r20, 0x7A	; 122
     e78:	53 e4       	ldi	r21, 0x43	; 67
     e7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e7e:	dc 01       	movw	r26, r24
     e80:	cb 01       	movw	r24, r22
     e82:	f8 01       	movw	r30, r16
     e84:	80 83       	st	Z, r24
     e86:	91 83       	std	Z+1, r25	; 0x01
     e88:	a2 83       	std	Z+2, r26	; 0x02
     e8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e8c:	fe 01       	movw	r30, r28
     e8e:	eb 57       	subi	r30, 0x7B	; 123
     e90:	ff 4f       	sbci	r31, 0xFF	; 255
     e92:	60 81       	ld	r22, Z
     e94:	71 81       	ldd	r23, Z+1	; 0x01
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	93 81       	ldd	r25, Z+3	; 0x03
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	40 e8       	ldi	r20, 0x80	; 128
     ea0:	5f e3       	ldi	r21, 0x3F	; 63
     ea2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     ea6:	88 23       	and	r24, r24
     ea8:	44 f4       	brge	.+16     	; 0xeba <main+0x384>
		__ticks = 1;
     eaa:	fe 01       	movw	r30, r28
     eac:	ed 57       	subi	r30, 0x7D	; 125
     eae:	ff 4f       	sbci	r31, 0xFF	; 255
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	91 83       	std	Z+1, r25	; 0x01
     eb6:	80 83       	st	Z, r24
     eb8:	64 c0       	rjmp	.+200    	; 0xf82 <main+0x44c>
	else if (__tmp > 65535)
     eba:	fe 01       	movw	r30, r28
     ebc:	eb 57       	subi	r30, 0x7B	; 123
     ebe:	ff 4f       	sbci	r31, 0xFF	; 255
     ec0:	60 81       	ld	r22, Z
     ec2:	71 81       	ldd	r23, Z+1	; 0x01
     ec4:	82 81       	ldd	r24, Z+2	; 0x02
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	20 e0       	ldi	r18, 0x00	; 0
     eca:	3f ef       	ldi	r19, 0xFF	; 255
     ecc:	4f e7       	ldi	r20, 0x7F	; 127
     ece:	57 e4       	ldi	r21, 0x47	; 71
     ed0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     ed4:	18 16       	cp	r1, r24
     ed6:	0c f0       	brlt	.+2      	; 0xeda <main+0x3a4>
     ed8:	43 c0       	rjmp	.+134    	; 0xf60 <main+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eda:	fe 01       	movw	r30, r28
     edc:	e7 57       	subi	r30, 0x77	; 119
     ede:	ff 4f       	sbci	r31, 0xFF	; 255
     ee0:	60 81       	ld	r22, Z
     ee2:	71 81       	ldd	r23, Z+1	; 0x01
     ee4:	82 81       	ldd	r24, Z+2	; 0x02
     ee6:	93 81       	ldd	r25, Z+3	; 0x03
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	40 e2       	ldi	r20, 0x20	; 32
     eee:	51 e4       	ldi	r21, 0x41	; 65
     ef0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	8e 01       	movw	r16, r28
     efa:	0d 57       	subi	r16, 0x7D	; 125
     efc:	1f 4f       	sbci	r17, 0xFF	; 255
     efe:	bc 01       	movw	r22, r24
     f00:	cd 01       	movw	r24, r26
     f02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f06:	dc 01       	movw	r26, r24
     f08:	cb 01       	movw	r24, r22
     f0a:	f8 01       	movw	r30, r16
     f0c:	91 83       	std	Z+1, r25	; 0x01
     f0e:	80 83       	st	Z, r24
     f10:	1f c0       	rjmp	.+62     	; 0xf50 <main+0x41a>
     f12:	fe 01       	movw	r30, r28
     f14:	ef 57       	subi	r30, 0x7F	; 127
     f16:	ff 4f       	sbci	r31, 0xFF	; 255
     f18:	89 e1       	ldi	r24, 0x19	; 25
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	91 83       	std	Z+1, r25	; 0x01
     f1e:	80 83       	st	Z, r24
     f20:	fe 01       	movw	r30, r28
     f22:	ef 57       	subi	r30, 0x7F	; 127
     f24:	ff 4f       	sbci	r31, 0xFF	; 255
     f26:	80 81       	ld	r24, Z
     f28:	91 81       	ldd	r25, Z+1	; 0x01
     f2a:	01 97       	sbiw	r24, 0x01	; 1
     f2c:	f1 f7       	brne	.-4      	; 0xf2a <main+0x3f4>
     f2e:	fe 01       	movw	r30, r28
     f30:	ef 57       	subi	r30, 0x7F	; 127
     f32:	ff 4f       	sbci	r31, 0xFF	; 255
     f34:	91 83       	std	Z+1, r25	; 0x01
     f36:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f38:	de 01       	movw	r26, r28
     f3a:	ad 57       	subi	r26, 0x7D	; 125
     f3c:	bf 4f       	sbci	r27, 0xFF	; 255
     f3e:	fe 01       	movw	r30, r28
     f40:	ed 57       	subi	r30, 0x7D	; 125
     f42:	ff 4f       	sbci	r31, 0xFF	; 255
     f44:	80 81       	ld	r24, Z
     f46:	91 81       	ldd	r25, Z+1	; 0x01
     f48:	01 97       	sbiw	r24, 0x01	; 1
     f4a:	11 96       	adiw	r26, 0x01	; 1
     f4c:	9c 93       	st	X, r25
     f4e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f50:	fe 01       	movw	r30, r28
     f52:	ed 57       	subi	r30, 0x7D	; 125
     f54:	ff 4f       	sbci	r31, 0xFF	; 255
     f56:	80 81       	ld	r24, Z
     f58:	91 81       	ldd	r25, Z+1	; 0x01
     f5a:	00 97       	sbiw	r24, 0x00	; 0
     f5c:	d1 f6       	brne	.-76     	; 0xf12 <main+0x3dc>
     f5e:	27 c0       	rjmp	.+78     	; 0xfae <main+0x478>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f60:	8e 01       	movw	r16, r28
     f62:	0d 57       	subi	r16, 0x7D	; 125
     f64:	1f 4f       	sbci	r17, 0xFF	; 255
     f66:	fe 01       	movw	r30, r28
     f68:	eb 57       	subi	r30, 0x7B	; 123
     f6a:	ff 4f       	sbci	r31, 0xFF	; 255
     f6c:	60 81       	ld	r22, Z
     f6e:	71 81       	ldd	r23, Z+1	; 0x01
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	93 81       	ldd	r25, Z+3	; 0x03
     f74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f78:	dc 01       	movw	r26, r24
     f7a:	cb 01       	movw	r24, r22
     f7c:	f8 01       	movw	r30, r16
     f7e:	91 83       	std	Z+1, r25	; 0x01
     f80:	80 83       	st	Z, r24
     f82:	de 01       	movw	r26, r28
     f84:	a1 58       	subi	r26, 0x81	; 129
     f86:	bf 4f       	sbci	r27, 0xFF	; 255
     f88:	fe 01       	movw	r30, r28
     f8a:	ed 57       	subi	r30, 0x7D	; 125
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	80 81       	ld	r24, Z
     f90:	91 81       	ldd	r25, Z+1	; 0x01
     f92:	8d 93       	st	X+, r24
     f94:	9c 93       	st	X, r25
     f96:	fe 01       	movw	r30, r28
     f98:	e1 58       	subi	r30, 0x81	; 129
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	01 97       	sbiw	r24, 0x01	; 1
     fa2:	f1 f7       	brne	.-4      	; 0xfa0 <main+0x46a>
     fa4:	fe 01       	movw	r30, r28
     fa6:	e1 58       	subi	r30, 0x81	; 129
     fa8:	ff 4f       	sbci	r31, 0xFF	; 255
     faa:	91 83       	std	Z+1, r25	; 0x01
     fac:	80 83       	st	Z, r24
    	    	 _delay_ms(150);

    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN3 ,DIO_U8HIGH);
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	63 e0       	ldi	r22, 0x03	; 3
     fb2:	41 e0       	ldi	r20, 0x01	; 1
     fb4:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
     fb8:	fe 01       	movw	r30, r28
     fba:	e5 58       	subi	r30, 0x85	; 133
     fbc:	ff 4f       	sbci	r31, 0xFF	; 255
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	a6 e1       	ldi	r26, 0x16	; 22
     fc4:	b3 e4       	ldi	r27, 0x43	; 67
     fc6:	80 83       	st	Z, r24
     fc8:	91 83       	std	Z+1, r25	; 0x01
     fca:	a2 83       	std	Z+2, r26	; 0x02
     fcc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fce:	8e 01       	movw	r16, r28
     fd0:	09 58       	subi	r16, 0x89	; 137
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	fe 01       	movw	r30, r28
     fd6:	e5 58       	subi	r30, 0x85	; 133
     fd8:	ff 4f       	sbci	r31, 0xFF	; 255
     fda:	60 81       	ld	r22, Z
     fdc:	71 81       	ldd	r23, Z+1	; 0x01
     fde:	82 81       	ldd	r24, Z+2	; 0x02
     fe0:	93 81       	ldd	r25, Z+3	; 0x03
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	4a e7       	ldi	r20, 0x7A	; 122
     fe8:	53 e4       	ldi	r21, 0x43	; 67
     fea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fee:	dc 01       	movw	r26, r24
     ff0:	cb 01       	movw	r24, r22
     ff2:	f8 01       	movw	r30, r16
     ff4:	80 83       	st	Z, r24
     ff6:	91 83       	std	Z+1, r25	; 0x01
     ff8:	a2 83       	std	Z+2, r26	; 0x02
     ffa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ffc:	fe 01       	movw	r30, r28
     ffe:	e9 58       	subi	r30, 0x89	; 137
    1000:	ff 4f       	sbci	r31, 0xFF	; 255
    1002:	60 81       	ld	r22, Z
    1004:	71 81       	ldd	r23, Z+1	; 0x01
    1006:	82 81       	ldd	r24, Z+2	; 0x02
    1008:	93 81       	ldd	r25, Z+3	; 0x03
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	40 e8       	ldi	r20, 0x80	; 128
    1010:	5f e3       	ldi	r21, 0x3F	; 63
    1012:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1016:	88 23       	and	r24, r24
    1018:	44 f4       	brge	.+16     	; 0x102a <main+0x4f4>
		__ticks = 1;
    101a:	fe 01       	movw	r30, r28
    101c:	eb 58       	subi	r30, 0x8B	; 139
    101e:	ff 4f       	sbci	r31, 0xFF	; 255
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	91 83       	std	Z+1, r25	; 0x01
    1026:	80 83       	st	Z, r24
    1028:	64 c0       	rjmp	.+200    	; 0x10f2 <main+0x5bc>
	else if (__tmp > 65535)
    102a:	fe 01       	movw	r30, r28
    102c:	e9 58       	subi	r30, 0x89	; 137
    102e:	ff 4f       	sbci	r31, 0xFF	; 255
    1030:	60 81       	ld	r22, Z
    1032:	71 81       	ldd	r23, Z+1	; 0x01
    1034:	82 81       	ldd	r24, Z+2	; 0x02
    1036:	93 81       	ldd	r25, Z+3	; 0x03
    1038:	20 e0       	ldi	r18, 0x00	; 0
    103a:	3f ef       	ldi	r19, 0xFF	; 255
    103c:	4f e7       	ldi	r20, 0x7F	; 127
    103e:	57 e4       	ldi	r21, 0x47	; 71
    1040:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1044:	18 16       	cp	r1, r24
    1046:	0c f0       	brlt	.+2      	; 0x104a <main+0x514>
    1048:	43 c0       	rjmp	.+134    	; 0x10d0 <main+0x59a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    104a:	fe 01       	movw	r30, r28
    104c:	e5 58       	subi	r30, 0x85	; 133
    104e:	ff 4f       	sbci	r31, 0xFF	; 255
    1050:	60 81       	ld	r22, Z
    1052:	71 81       	ldd	r23, Z+1	; 0x01
    1054:	82 81       	ldd	r24, Z+2	; 0x02
    1056:	93 81       	ldd	r25, Z+3	; 0x03
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	40 e2       	ldi	r20, 0x20	; 32
    105e:	51 e4       	ldi	r21, 0x41	; 65
    1060:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1064:	dc 01       	movw	r26, r24
    1066:	cb 01       	movw	r24, r22
    1068:	8e 01       	movw	r16, r28
    106a:	0b 58       	subi	r16, 0x8B	; 139
    106c:	1f 4f       	sbci	r17, 0xFF	; 255
    106e:	bc 01       	movw	r22, r24
    1070:	cd 01       	movw	r24, r26
    1072:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1076:	dc 01       	movw	r26, r24
    1078:	cb 01       	movw	r24, r22
    107a:	f8 01       	movw	r30, r16
    107c:	91 83       	std	Z+1, r25	; 0x01
    107e:	80 83       	st	Z, r24
    1080:	1f c0       	rjmp	.+62     	; 0x10c0 <main+0x58a>
    1082:	fe 01       	movw	r30, r28
    1084:	ed 58       	subi	r30, 0x8D	; 141
    1086:	ff 4f       	sbci	r31, 0xFF	; 255
    1088:	89 e1       	ldi	r24, 0x19	; 25
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	91 83       	std	Z+1, r25	; 0x01
    108e:	80 83       	st	Z, r24
    1090:	fe 01       	movw	r30, r28
    1092:	ed 58       	subi	r30, 0x8D	; 141
    1094:	ff 4f       	sbci	r31, 0xFF	; 255
    1096:	80 81       	ld	r24, Z
    1098:	91 81       	ldd	r25, Z+1	; 0x01
    109a:	01 97       	sbiw	r24, 0x01	; 1
    109c:	f1 f7       	brne	.-4      	; 0x109a <main+0x564>
    109e:	fe 01       	movw	r30, r28
    10a0:	ed 58       	subi	r30, 0x8D	; 141
    10a2:	ff 4f       	sbci	r31, 0xFF	; 255
    10a4:	91 83       	std	Z+1, r25	; 0x01
    10a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10a8:	de 01       	movw	r26, r28
    10aa:	ab 58       	subi	r26, 0x8B	; 139
    10ac:	bf 4f       	sbci	r27, 0xFF	; 255
    10ae:	fe 01       	movw	r30, r28
    10b0:	eb 58       	subi	r30, 0x8B	; 139
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	80 81       	ld	r24, Z
    10b6:	91 81       	ldd	r25, Z+1	; 0x01
    10b8:	01 97       	sbiw	r24, 0x01	; 1
    10ba:	11 96       	adiw	r26, 0x01	; 1
    10bc:	9c 93       	st	X, r25
    10be:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10c0:	fe 01       	movw	r30, r28
    10c2:	eb 58       	subi	r30, 0x8B	; 139
    10c4:	ff 4f       	sbci	r31, 0xFF	; 255
    10c6:	80 81       	ld	r24, Z
    10c8:	91 81       	ldd	r25, Z+1	; 0x01
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	d1 f6       	brne	.-76     	; 0x1082 <main+0x54c>
    10ce:	27 c0       	rjmp	.+78     	; 0x111e <main+0x5e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10d0:	8e 01       	movw	r16, r28
    10d2:	0b 58       	subi	r16, 0x8B	; 139
    10d4:	1f 4f       	sbci	r17, 0xFF	; 255
    10d6:	fe 01       	movw	r30, r28
    10d8:	e9 58       	subi	r30, 0x89	; 137
    10da:	ff 4f       	sbci	r31, 0xFF	; 255
    10dc:	60 81       	ld	r22, Z
    10de:	71 81       	ldd	r23, Z+1	; 0x01
    10e0:	82 81       	ldd	r24, Z+2	; 0x02
    10e2:	93 81       	ldd	r25, Z+3	; 0x03
    10e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10e8:	dc 01       	movw	r26, r24
    10ea:	cb 01       	movw	r24, r22
    10ec:	f8 01       	movw	r30, r16
    10ee:	91 83       	std	Z+1, r25	; 0x01
    10f0:	80 83       	st	Z, r24
    10f2:	de 01       	movw	r26, r28
    10f4:	af 58       	subi	r26, 0x8F	; 143
    10f6:	bf 4f       	sbci	r27, 0xFF	; 255
    10f8:	fe 01       	movw	r30, r28
    10fa:	eb 58       	subi	r30, 0x8B	; 139
    10fc:	ff 4f       	sbci	r31, 0xFF	; 255
    10fe:	80 81       	ld	r24, Z
    1100:	91 81       	ldd	r25, Z+1	; 0x01
    1102:	8d 93       	st	X+, r24
    1104:	9c 93       	st	X, r25
    1106:	fe 01       	movw	r30, r28
    1108:	ef 58       	subi	r30, 0x8F	; 143
    110a:	ff 4f       	sbci	r31, 0xFF	; 255
    110c:	80 81       	ld	r24, Z
    110e:	91 81       	ldd	r25, Z+1	; 0x01
    1110:	01 97       	sbiw	r24, 0x01	; 1
    1112:	f1 f7       	brne	.-4      	; 0x1110 <main+0x5da>
    1114:	fe 01       	movw	r30, r28
    1116:	ef 58       	subi	r30, 0x8F	; 143
    1118:	ff 4f       	sbci	r31, 0xFF	; 255
    111a:	91 83       	std	Z+1, r25	; 0x01
    111c:	80 83       	st	Z, r24
    	    	 _delay_ms(150);

    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN4 ,DIO_U8HIGH);
    111e:	80 e0       	ldi	r24, 0x00	; 0
    1120:	64 e0       	ldi	r22, 0x04	; 4
    1122:	41 e0       	ldi	r20, 0x01	; 1
    1124:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1128:	fe 01       	movw	r30, r28
    112a:	e3 59       	subi	r30, 0x93	; 147
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	a6 e1       	ldi	r26, 0x16	; 22
    1134:	b3 e4       	ldi	r27, 0x43	; 67
    1136:	80 83       	st	Z, r24
    1138:	91 83       	std	Z+1, r25	; 0x01
    113a:	a2 83       	std	Z+2, r26	; 0x02
    113c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    113e:	8e 01       	movw	r16, r28
    1140:	07 59       	subi	r16, 0x97	; 151
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	fe 01       	movw	r30, r28
    1146:	e3 59       	subi	r30, 0x93	; 147
    1148:	ff 4f       	sbci	r31, 0xFF	; 255
    114a:	60 81       	ld	r22, Z
    114c:	71 81       	ldd	r23, Z+1	; 0x01
    114e:	82 81       	ldd	r24, Z+2	; 0x02
    1150:	93 81       	ldd	r25, Z+3	; 0x03
    1152:	20 e0       	ldi	r18, 0x00	; 0
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	4a e7       	ldi	r20, 0x7A	; 122
    1158:	53 e4       	ldi	r21, 0x43	; 67
    115a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    115e:	dc 01       	movw	r26, r24
    1160:	cb 01       	movw	r24, r22
    1162:	f8 01       	movw	r30, r16
    1164:	80 83       	st	Z, r24
    1166:	91 83       	std	Z+1, r25	; 0x01
    1168:	a2 83       	std	Z+2, r26	; 0x02
    116a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    116c:	fe 01       	movw	r30, r28
    116e:	e7 59       	subi	r30, 0x97	; 151
    1170:	ff 4f       	sbci	r31, 0xFF	; 255
    1172:	60 81       	ld	r22, Z
    1174:	71 81       	ldd	r23, Z+1	; 0x01
    1176:	82 81       	ldd	r24, Z+2	; 0x02
    1178:	93 81       	ldd	r25, Z+3	; 0x03
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	40 e8       	ldi	r20, 0x80	; 128
    1180:	5f e3       	ldi	r21, 0x3F	; 63
    1182:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1186:	88 23       	and	r24, r24
    1188:	44 f4       	brge	.+16     	; 0x119a <main+0x664>
		__ticks = 1;
    118a:	fe 01       	movw	r30, r28
    118c:	e9 59       	subi	r30, 0x99	; 153
    118e:	ff 4f       	sbci	r31, 0xFF	; 255
    1190:	81 e0       	ldi	r24, 0x01	; 1
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	91 83       	std	Z+1, r25	; 0x01
    1196:	80 83       	st	Z, r24
    1198:	64 c0       	rjmp	.+200    	; 0x1262 <main+0x72c>
	else if (__tmp > 65535)
    119a:	fe 01       	movw	r30, r28
    119c:	e7 59       	subi	r30, 0x97	; 151
    119e:	ff 4f       	sbci	r31, 0xFF	; 255
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	3f ef       	ldi	r19, 0xFF	; 255
    11ac:	4f e7       	ldi	r20, 0x7F	; 127
    11ae:	57 e4       	ldi	r21, 0x47	; 71
    11b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11b4:	18 16       	cp	r1, r24
    11b6:	0c f0       	brlt	.+2      	; 0x11ba <main+0x684>
    11b8:	43 c0       	rjmp	.+134    	; 0x1240 <main+0x70a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11ba:	fe 01       	movw	r30, r28
    11bc:	e3 59       	subi	r30, 0x93	; 147
    11be:	ff 4f       	sbci	r31, 0xFF	; 255
    11c0:	60 81       	ld	r22, Z
    11c2:	71 81       	ldd	r23, Z+1	; 0x01
    11c4:	82 81       	ldd	r24, Z+2	; 0x02
    11c6:	93 81       	ldd	r25, Z+3	; 0x03
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	40 e2       	ldi	r20, 0x20	; 32
    11ce:	51 e4       	ldi	r21, 0x41	; 65
    11d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11d4:	dc 01       	movw	r26, r24
    11d6:	cb 01       	movw	r24, r22
    11d8:	8e 01       	movw	r16, r28
    11da:	09 59       	subi	r16, 0x99	; 153
    11dc:	1f 4f       	sbci	r17, 0xFF	; 255
    11de:	bc 01       	movw	r22, r24
    11e0:	cd 01       	movw	r24, r26
    11e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11e6:	dc 01       	movw	r26, r24
    11e8:	cb 01       	movw	r24, r22
    11ea:	f8 01       	movw	r30, r16
    11ec:	91 83       	std	Z+1, r25	; 0x01
    11ee:	80 83       	st	Z, r24
    11f0:	1f c0       	rjmp	.+62     	; 0x1230 <main+0x6fa>
    11f2:	fe 01       	movw	r30, r28
    11f4:	eb 59       	subi	r30, 0x9B	; 155
    11f6:	ff 4f       	sbci	r31, 0xFF	; 255
    11f8:	89 e1       	ldi	r24, 0x19	; 25
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	91 83       	std	Z+1, r25	; 0x01
    11fe:	80 83       	st	Z, r24
    1200:	fe 01       	movw	r30, r28
    1202:	eb 59       	subi	r30, 0x9B	; 155
    1204:	ff 4f       	sbci	r31, 0xFF	; 255
    1206:	80 81       	ld	r24, Z
    1208:	91 81       	ldd	r25, Z+1	; 0x01
    120a:	01 97       	sbiw	r24, 0x01	; 1
    120c:	f1 f7       	brne	.-4      	; 0x120a <main+0x6d4>
    120e:	fe 01       	movw	r30, r28
    1210:	eb 59       	subi	r30, 0x9B	; 155
    1212:	ff 4f       	sbci	r31, 0xFF	; 255
    1214:	91 83       	std	Z+1, r25	; 0x01
    1216:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1218:	de 01       	movw	r26, r28
    121a:	a9 59       	subi	r26, 0x99	; 153
    121c:	bf 4f       	sbci	r27, 0xFF	; 255
    121e:	fe 01       	movw	r30, r28
    1220:	e9 59       	subi	r30, 0x99	; 153
    1222:	ff 4f       	sbci	r31, 0xFF	; 255
    1224:	80 81       	ld	r24, Z
    1226:	91 81       	ldd	r25, Z+1	; 0x01
    1228:	01 97       	sbiw	r24, 0x01	; 1
    122a:	11 96       	adiw	r26, 0x01	; 1
    122c:	9c 93       	st	X, r25
    122e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1230:	fe 01       	movw	r30, r28
    1232:	e9 59       	subi	r30, 0x99	; 153
    1234:	ff 4f       	sbci	r31, 0xFF	; 255
    1236:	80 81       	ld	r24, Z
    1238:	91 81       	ldd	r25, Z+1	; 0x01
    123a:	00 97       	sbiw	r24, 0x00	; 0
    123c:	d1 f6       	brne	.-76     	; 0x11f2 <main+0x6bc>
    123e:	27 c0       	rjmp	.+78     	; 0x128e <main+0x758>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1240:	8e 01       	movw	r16, r28
    1242:	09 59       	subi	r16, 0x99	; 153
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	fe 01       	movw	r30, r28
    1248:	e7 59       	subi	r30, 0x97	; 151
    124a:	ff 4f       	sbci	r31, 0xFF	; 255
    124c:	60 81       	ld	r22, Z
    124e:	71 81       	ldd	r23, Z+1	; 0x01
    1250:	82 81       	ldd	r24, Z+2	; 0x02
    1252:	93 81       	ldd	r25, Z+3	; 0x03
    1254:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1258:	dc 01       	movw	r26, r24
    125a:	cb 01       	movw	r24, r22
    125c:	f8 01       	movw	r30, r16
    125e:	91 83       	std	Z+1, r25	; 0x01
    1260:	80 83       	st	Z, r24
    1262:	de 01       	movw	r26, r28
    1264:	ad 59       	subi	r26, 0x9D	; 157
    1266:	bf 4f       	sbci	r27, 0xFF	; 255
    1268:	fe 01       	movw	r30, r28
    126a:	e9 59       	subi	r30, 0x99	; 153
    126c:	ff 4f       	sbci	r31, 0xFF	; 255
    126e:	80 81       	ld	r24, Z
    1270:	91 81       	ldd	r25, Z+1	; 0x01
    1272:	8d 93       	st	X+, r24
    1274:	9c 93       	st	X, r25
    1276:	fe 01       	movw	r30, r28
    1278:	ed 59       	subi	r30, 0x9D	; 157
    127a:	ff 4f       	sbci	r31, 0xFF	; 255
    127c:	80 81       	ld	r24, Z
    127e:	91 81       	ldd	r25, Z+1	; 0x01
    1280:	01 97       	sbiw	r24, 0x01	; 1
    1282:	f1 f7       	brne	.-4      	; 0x1280 <main+0x74a>
    1284:	fe 01       	movw	r30, r28
    1286:	ed 59       	subi	r30, 0x9D	; 157
    1288:	ff 4f       	sbci	r31, 0xFF	; 255
    128a:	91 83       	std	Z+1, r25	; 0x01
    128c:	80 83       	st	Z, r24
    	    	 _delay_ms(150);

    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN5 ,DIO_U8HIGH);
    128e:	80 e0       	ldi	r24, 0x00	; 0
    1290:	65 e0       	ldi	r22, 0x05	; 5
    1292:	41 e0       	ldi	r20, 0x01	; 1
    1294:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1298:	fe 01       	movw	r30, r28
    129a:	e1 5a       	subi	r30, 0xA1	; 161
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	a6 e1       	ldi	r26, 0x16	; 22
    12a4:	b3 e4       	ldi	r27, 0x43	; 67
    12a6:	80 83       	st	Z, r24
    12a8:	91 83       	std	Z+1, r25	; 0x01
    12aa:	a2 83       	std	Z+2, r26	; 0x02
    12ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12ae:	8e 01       	movw	r16, r28
    12b0:	05 5a       	subi	r16, 0xA5	; 165
    12b2:	1f 4f       	sbci	r17, 0xFF	; 255
    12b4:	fe 01       	movw	r30, r28
    12b6:	e1 5a       	subi	r30, 0xA1	; 161
    12b8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ba:	60 81       	ld	r22, Z
    12bc:	71 81       	ldd	r23, Z+1	; 0x01
    12be:	82 81       	ldd	r24, Z+2	; 0x02
    12c0:	93 81       	ldd	r25, Z+3	; 0x03
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	4a e7       	ldi	r20, 0x7A	; 122
    12c8:	53 e4       	ldi	r21, 0x43	; 67
    12ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12ce:	dc 01       	movw	r26, r24
    12d0:	cb 01       	movw	r24, r22
    12d2:	f8 01       	movw	r30, r16
    12d4:	80 83       	st	Z, r24
    12d6:	91 83       	std	Z+1, r25	; 0x01
    12d8:	a2 83       	std	Z+2, r26	; 0x02
    12da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12dc:	fe 01       	movw	r30, r28
    12de:	e5 5a       	subi	r30, 0xA5	; 165
    12e0:	ff 4f       	sbci	r31, 0xFF	; 255
    12e2:	60 81       	ld	r22, Z
    12e4:	71 81       	ldd	r23, Z+1	; 0x01
    12e6:	82 81       	ldd	r24, Z+2	; 0x02
    12e8:	93 81       	ldd	r25, Z+3	; 0x03
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	40 e8       	ldi	r20, 0x80	; 128
    12f0:	5f e3       	ldi	r21, 0x3F	; 63
    12f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12f6:	88 23       	and	r24, r24
    12f8:	44 f4       	brge	.+16     	; 0x130a <main+0x7d4>
		__ticks = 1;
    12fa:	fe 01       	movw	r30, r28
    12fc:	e7 5a       	subi	r30, 0xA7	; 167
    12fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
    1308:	64 c0       	rjmp	.+200    	; 0x13d2 <main+0x89c>
	else if (__tmp > 65535)
    130a:	fe 01       	movw	r30, r28
    130c:	e5 5a       	subi	r30, 0xA5	; 165
    130e:	ff 4f       	sbci	r31, 0xFF	; 255
    1310:	60 81       	ld	r22, Z
    1312:	71 81       	ldd	r23, Z+1	; 0x01
    1314:	82 81       	ldd	r24, Z+2	; 0x02
    1316:	93 81       	ldd	r25, Z+3	; 0x03
    1318:	20 e0       	ldi	r18, 0x00	; 0
    131a:	3f ef       	ldi	r19, 0xFF	; 255
    131c:	4f e7       	ldi	r20, 0x7F	; 127
    131e:	57 e4       	ldi	r21, 0x47	; 71
    1320:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1324:	18 16       	cp	r1, r24
    1326:	0c f0       	brlt	.+2      	; 0x132a <main+0x7f4>
    1328:	43 c0       	rjmp	.+134    	; 0x13b0 <main+0x87a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    132a:	fe 01       	movw	r30, r28
    132c:	e1 5a       	subi	r30, 0xA1	; 161
    132e:	ff 4f       	sbci	r31, 0xFF	; 255
    1330:	60 81       	ld	r22, Z
    1332:	71 81       	ldd	r23, Z+1	; 0x01
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	40 e2       	ldi	r20, 0x20	; 32
    133e:	51 e4       	ldi	r21, 0x41	; 65
    1340:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1344:	dc 01       	movw	r26, r24
    1346:	cb 01       	movw	r24, r22
    1348:	8e 01       	movw	r16, r28
    134a:	07 5a       	subi	r16, 0xA7	; 167
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	bc 01       	movw	r22, r24
    1350:	cd 01       	movw	r24, r26
    1352:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1356:	dc 01       	movw	r26, r24
    1358:	cb 01       	movw	r24, r22
    135a:	f8 01       	movw	r30, r16
    135c:	91 83       	std	Z+1, r25	; 0x01
    135e:	80 83       	st	Z, r24
    1360:	1f c0       	rjmp	.+62     	; 0x13a0 <main+0x86a>
    1362:	fe 01       	movw	r30, r28
    1364:	e9 5a       	subi	r30, 0xA9	; 169
    1366:	ff 4f       	sbci	r31, 0xFF	; 255
    1368:	89 e1       	ldi	r24, 0x19	; 25
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	91 83       	std	Z+1, r25	; 0x01
    136e:	80 83       	st	Z, r24
    1370:	fe 01       	movw	r30, r28
    1372:	e9 5a       	subi	r30, 0xA9	; 169
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	80 81       	ld	r24, Z
    1378:	91 81       	ldd	r25, Z+1	; 0x01
    137a:	01 97       	sbiw	r24, 0x01	; 1
    137c:	f1 f7       	brne	.-4      	; 0x137a <main+0x844>
    137e:	fe 01       	movw	r30, r28
    1380:	e9 5a       	subi	r30, 0xA9	; 169
    1382:	ff 4f       	sbci	r31, 0xFF	; 255
    1384:	91 83       	std	Z+1, r25	; 0x01
    1386:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1388:	de 01       	movw	r26, r28
    138a:	a7 5a       	subi	r26, 0xA7	; 167
    138c:	bf 4f       	sbci	r27, 0xFF	; 255
    138e:	fe 01       	movw	r30, r28
    1390:	e7 5a       	subi	r30, 0xA7	; 167
    1392:	ff 4f       	sbci	r31, 0xFF	; 255
    1394:	80 81       	ld	r24, Z
    1396:	91 81       	ldd	r25, Z+1	; 0x01
    1398:	01 97       	sbiw	r24, 0x01	; 1
    139a:	11 96       	adiw	r26, 0x01	; 1
    139c:	9c 93       	st	X, r25
    139e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a0:	fe 01       	movw	r30, r28
    13a2:	e7 5a       	subi	r30, 0xA7	; 167
    13a4:	ff 4f       	sbci	r31, 0xFF	; 255
    13a6:	80 81       	ld	r24, Z
    13a8:	91 81       	ldd	r25, Z+1	; 0x01
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	d1 f6       	brne	.-76     	; 0x1362 <main+0x82c>
    13ae:	27 c0       	rjmp	.+78     	; 0x13fe <main+0x8c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b0:	8e 01       	movw	r16, r28
    13b2:	07 5a       	subi	r16, 0xA7	; 167
    13b4:	1f 4f       	sbci	r17, 0xFF	; 255
    13b6:	fe 01       	movw	r30, r28
    13b8:	e5 5a       	subi	r30, 0xA5	; 165
    13ba:	ff 4f       	sbci	r31, 0xFF	; 255
    13bc:	60 81       	ld	r22, Z
    13be:	71 81       	ldd	r23, Z+1	; 0x01
    13c0:	82 81       	ldd	r24, Z+2	; 0x02
    13c2:	93 81       	ldd	r25, Z+3	; 0x03
    13c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13c8:	dc 01       	movw	r26, r24
    13ca:	cb 01       	movw	r24, r22
    13cc:	f8 01       	movw	r30, r16
    13ce:	91 83       	std	Z+1, r25	; 0x01
    13d0:	80 83       	st	Z, r24
    13d2:	de 01       	movw	r26, r28
    13d4:	ab 5a       	subi	r26, 0xAB	; 171
    13d6:	bf 4f       	sbci	r27, 0xFF	; 255
    13d8:	fe 01       	movw	r30, r28
    13da:	e7 5a       	subi	r30, 0xA7	; 167
    13dc:	ff 4f       	sbci	r31, 0xFF	; 255
    13de:	80 81       	ld	r24, Z
    13e0:	91 81       	ldd	r25, Z+1	; 0x01
    13e2:	8d 93       	st	X+, r24
    13e4:	9c 93       	st	X, r25
    13e6:	fe 01       	movw	r30, r28
    13e8:	eb 5a       	subi	r30, 0xAB	; 171
    13ea:	ff 4f       	sbci	r31, 0xFF	; 255
    13ec:	80 81       	ld	r24, Z
    13ee:	91 81       	ldd	r25, Z+1	; 0x01
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	f1 f7       	brne	.-4      	; 0x13f0 <main+0x8ba>
    13f4:	fe 01       	movw	r30, r28
    13f6:	eb 5a       	subi	r30, 0xAB	; 171
    13f8:	ff 4f       	sbci	r31, 0xFF	; 255
    13fa:	91 83       	std	Z+1, r25	; 0x01
    13fc:	80 83       	st	Z, r24
    	    	 _delay_ms(150);




    	    	 Setpin_value(DIO_u8PORTA, DIO_u8PIN5 ,DIO_U8LOW);
    13fe:	80 e0       	ldi	r24, 0x00	; 0
    1400:	65 e0       	ldi	r22, 0x05	; 5
    1402:	40 e0       	ldi	r20, 0x00	; 0
    1404:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1408:	fe 01       	movw	r30, r28
    140a:	ef 5a       	subi	r30, 0xAF	; 175
    140c:	ff 4f       	sbci	r31, 0xFF	; 255
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	a6 e1       	ldi	r26, 0x16	; 22
    1414:	b3 e4       	ldi	r27, 0x43	; 67
    1416:	80 83       	st	Z, r24
    1418:	91 83       	std	Z+1, r25	; 0x01
    141a:	a2 83       	std	Z+2, r26	; 0x02
    141c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    141e:	8e 01       	movw	r16, r28
    1420:	03 5b       	subi	r16, 0xB3	; 179
    1422:	1f 4f       	sbci	r17, 0xFF	; 255
    1424:	fe 01       	movw	r30, r28
    1426:	ef 5a       	subi	r30, 0xAF	; 175
    1428:	ff 4f       	sbci	r31, 0xFF	; 255
    142a:	60 81       	ld	r22, Z
    142c:	71 81       	ldd	r23, Z+1	; 0x01
    142e:	82 81       	ldd	r24, Z+2	; 0x02
    1430:	93 81       	ldd	r25, Z+3	; 0x03
    1432:	20 e0       	ldi	r18, 0x00	; 0
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	4a e7       	ldi	r20, 0x7A	; 122
    1438:	53 e4       	ldi	r21, 0x43	; 67
    143a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    143e:	dc 01       	movw	r26, r24
    1440:	cb 01       	movw	r24, r22
    1442:	f8 01       	movw	r30, r16
    1444:	80 83       	st	Z, r24
    1446:	91 83       	std	Z+1, r25	; 0x01
    1448:	a2 83       	std	Z+2, r26	; 0x02
    144a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    144c:	fe 01       	movw	r30, r28
    144e:	e3 5b       	subi	r30, 0xB3	; 179
    1450:	ff 4f       	sbci	r31, 0xFF	; 255
    1452:	60 81       	ld	r22, Z
    1454:	71 81       	ldd	r23, Z+1	; 0x01
    1456:	82 81       	ldd	r24, Z+2	; 0x02
    1458:	93 81       	ldd	r25, Z+3	; 0x03
    145a:	20 e0       	ldi	r18, 0x00	; 0
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	40 e8       	ldi	r20, 0x80	; 128
    1460:	5f e3       	ldi	r21, 0x3F	; 63
    1462:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1466:	88 23       	and	r24, r24
    1468:	44 f4       	brge	.+16     	; 0x147a <main+0x944>
		__ticks = 1;
    146a:	fe 01       	movw	r30, r28
    146c:	e5 5b       	subi	r30, 0xB5	; 181
    146e:	ff 4f       	sbci	r31, 0xFF	; 255
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	91 83       	std	Z+1, r25	; 0x01
    1476:	80 83       	st	Z, r24
    1478:	64 c0       	rjmp	.+200    	; 0x1542 <main+0xa0c>
	else if (__tmp > 65535)
    147a:	fe 01       	movw	r30, r28
    147c:	e3 5b       	subi	r30, 0xB3	; 179
    147e:	ff 4f       	sbci	r31, 0xFF	; 255
    1480:	60 81       	ld	r22, Z
    1482:	71 81       	ldd	r23, Z+1	; 0x01
    1484:	82 81       	ldd	r24, Z+2	; 0x02
    1486:	93 81       	ldd	r25, Z+3	; 0x03
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	3f ef       	ldi	r19, 0xFF	; 255
    148c:	4f e7       	ldi	r20, 0x7F	; 127
    148e:	57 e4       	ldi	r21, 0x47	; 71
    1490:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1494:	18 16       	cp	r1, r24
    1496:	0c f0       	brlt	.+2      	; 0x149a <main+0x964>
    1498:	43 c0       	rjmp	.+134    	; 0x1520 <main+0x9ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    149a:	fe 01       	movw	r30, r28
    149c:	ef 5a       	subi	r30, 0xAF	; 175
    149e:	ff 4f       	sbci	r31, 0xFF	; 255
    14a0:	60 81       	ld	r22, Z
    14a2:	71 81       	ldd	r23, Z+1	; 0x01
    14a4:	82 81       	ldd	r24, Z+2	; 0x02
    14a6:	93 81       	ldd	r25, Z+3	; 0x03
    14a8:	20 e0       	ldi	r18, 0x00	; 0
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	40 e2       	ldi	r20, 0x20	; 32
    14ae:	51 e4       	ldi	r21, 0x41	; 65
    14b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14b4:	dc 01       	movw	r26, r24
    14b6:	cb 01       	movw	r24, r22
    14b8:	8e 01       	movw	r16, r28
    14ba:	05 5b       	subi	r16, 0xB5	; 181
    14bc:	1f 4f       	sbci	r17, 0xFF	; 255
    14be:	bc 01       	movw	r22, r24
    14c0:	cd 01       	movw	r24, r26
    14c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	f8 01       	movw	r30, r16
    14cc:	91 83       	std	Z+1, r25	; 0x01
    14ce:	80 83       	st	Z, r24
    14d0:	1f c0       	rjmp	.+62     	; 0x1510 <main+0x9da>
    14d2:	fe 01       	movw	r30, r28
    14d4:	e7 5b       	subi	r30, 0xB7	; 183
    14d6:	ff 4f       	sbci	r31, 0xFF	; 255
    14d8:	89 e1       	ldi	r24, 0x19	; 25
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	80 83       	st	Z, r24
    14e0:	fe 01       	movw	r30, r28
    14e2:	e7 5b       	subi	r30, 0xB7	; 183
    14e4:	ff 4f       	sbci	r31, 0xFF	; 255
    14e6:	80 81       	ld	r24, Z
    14e8:	91 81       	ldd	r25, Z+1	; 0x01
    14ea:	01 97       	sbiw	r24, 0x01	; 1
    14ec:	f1 f7       	brne	.-4      	; 0x14ea <main+0x9b4>
    14ee:	fe 01       	movw	r30, r28
    14f0:	e7 5b       	subi	r30, 0xB7	; 183
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	91 83       	std	Z+1, r25	; 0x01
    14f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14f8:	de 01       	movw	r26, r28
    14fa:	a5 5b       	subi	r26, 0xB5	; 181
    14fc:	bf 4f       	sbci	r27, 0xFF	; 255
    14fe:	fe 01       	movw	r30, r28
    1500:	e5 5b       	subi	r30, 0xB5	; 181
    1502:	ff 4f       	sbci	r31, 0xFF	; 255
    1504:	80 81       	ld	r24, Z
    1506:	91 81       	ldd	r25, Z+1	; 0x01
    1508:	01 97       	sbiw	r24, 0x01	; 1
    150a:	11 96       	adiw	r26, 0x01	; 1
    150c:	9c 93       	st	X, r25
    150e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1510:	fe 01       	movw	r30, r28
    1512:	e5 5b       	subi	r30, 0xB5	; 181
    1514:	ff 4f       	sbci	r31, 0xFF	; 255
    1516:	80 81       	ld	r24, Z
    1518:	91 81       	ldd	r25, Z+1	; 0x01
    151a:	00 97       	sbiw	r24, 0x00	; 0
    151c:	d1 f6       	brne	.-76     	; 0x14d2 <main+0x99c>
    151e:	27 c0       	rjmp	.+78     	; 0x156e <main+0xa38>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1520:	8e 01       	movw	r16, r28
    1522:	05 5b       	subi	r16, 0xB5	; 181
    1524:	1f 4f       	sbci	r17, 0xFF	; 255
    1526:	fe 01       	movw	r30, r28
    1528:	e3 5b       	subi	r30, 0xB3	; 179
    152a:	ff 4f       	sbci	r31, 0xFF	; 255
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	82 81       	ldd	r24, Z+2	; 0x02
    1532:	93 81       	ldd	r25, Z+3	; 0x03
    1534:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1538:	dc 01       	movw	r26, r24
    153a:	cb 01       	movw	r24, r22
    153c:	f8 01       	movw	r30, r16
    153e:	91 83       	std	Z+1, r25	; 0x01
    1540:	80 83       	st	Z, r24
    1542:	de 01       	movw	r26, r28
    1544:	a9 5b       	subi	r26, 0xB9	; 185
    1546:	bf 4f       	sbci	r27, 0xFF	; 255
    1548:	fe 01       	movw	r30, r28
    154a:	e5 5b       	subi	r30, 0xB5	; 181
    154c:	ff 4f       	sbci	r31, 0xFF	; 255
    154e:	80 81       	ld	r24, Z
    1550:	91 81       	ldd	r25, Z+1	; 0x01
    1552:	8d 93       	st	X+, r24
    1554:	9c 93       	st	X, r25
    1556:	fe 01       	movw	r30, r28
    1558:	e9 5b       	subi	r30, 0xB9	; 185
    155a:	ff 4f       	sbci	r31, 0xFF	; 255
    155c:	80 81       	ld	r24, Z
    155e:	91 81       	ldd	r25, Z+1	; 0x01
    1560:	01 97       	sbiw	r24, 0x01	; 1
    1562:	f1 f7       	brne	.-4      	; 0x1560 <main+0xa2a>
    1564:	fe 01       	movw	r30, r28
    1566:	e9 5b       	subi	r30, 0xB9	; 185
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	91 83       	std	Z+1, r25	; 0x01
    156c:	80 83       	st	Z, r24
    	    	    	    	 _delay_ms(150);
                 Setpin_value(DIO_u8PORTA, DIO_u8PIN4 ,DIO_U8LOW);
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	64 e0       	ldi	r22, 0x04	; 4
    1572:	40 e0       	ldi	r20, 0x00	; 0
    1574:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1578:	fe 01       	movw	r30, r28
    157a:	ed 5b       	subi	r30, 0xBD	; 189
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	a6 e1       	ldi	r26, 0x16	; 22
    1584:	b3 e4       	ldi	r27, 0x43	; 67
    1586:	80 83       	st	Z, r24
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	a2 83       	std	Z+2, r26	; 0x02
    158c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    158e:	8e 01       	movw	r16, r28
    1590:	01 5c       	subi	r16, 0xC1	; 193
    1592:	1f 4f       	sbci	r17, 0xFF	; 255
    1594:	fe 01       	movw	r30, r28
    1596:	ed 5b       	subi	r30, 0xBD	; 189
    1598:	ff 4f       	sbci	r31, 0xFF	; 255
    159a:	60 81       	ld	r22, Z
    159c:	71 81       	ldd	r23, Z+1	; 0x01
    159e:	82 81       	ldd	r24, Z+2	; 0x02
    15a0:	93 81       	ldd	r25, Z+3	; 0x03
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	4a e7       	ldi	r20, 0x7A	; 122
    15a8:	53 e4       	ldi	r21, 0x43	; 67
    15aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	f8 01       	movw	r30, r16
    15b4:	80 83       	st	Z, r24
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	a2 83       	std	Z+2, r26	; 0x02
    15ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15bc:	fe 01       	movw	r30, r28
    15be:	ff 96       	adiw	r30, 0x3f	; 63
    15c0:	60 81       	ld	r22, Z
    15c2:	71 81       	ldd	r23, Z+1	; 0x01
    15c4:	82 81       	ldd	r24, Z+2	; 0x02
    15c6:	93 81       	ldd	r25, Z+3	; 0x03
    15c8:	20 e0       	ldi	r18, 0x00	; 0
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	40 e8       	ldi	r20, 0x80	; 128
    15ce:	5f e3       	ldi	r21, 0x3F	; 63
    15d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15d4:	88 23       	and	r24, r24
    15d6:	2c f4       	brge	.+10     	; 0x15e2 <main+0xaac>
		__ticks = 1;
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	9e af       	std	Y+62, r25	; 0x3e
    15de:	8d af       	std	Y+61, r24	; 0x3d
    15e0:	46 c0       	rjmp	.+140    	; 0x166e <main+0xb38>
	else if (__tmp > 65535)
    15e2:	fe 01       	movw	r30, r28
    15e4:	ff 96       	adiw	r30, 0x3f	; 63
    15e6:	60 81       	ld	r22, Z
    15e8:	71 81       	ldd	r23, Z+1	; 0x01
    15ea:	82 81       	ldd	r24, Z+2	; 0x02
    15ec:	93 81       	ldd	r25, Z+3	; 0x03
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	3f ef       	ldi	r19, 0xFF	; 255
    15f2:	4f e7       	ldi	r20, 0x7F	; 127
    15f4:	57 e4       	ldi	r21, 0x47	; 71
    15f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15fa:	18 16       	cp	r1, r24
    15fc:	64 f5       	brge	.+88     	; 0x1656 <main+0xb20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15fe:	fe 01       	movw	r30, r28
    1600:	ed 5b       	subi	r30, 0xBD	; 189
    1602:	ff 4f       	sbci	r31, 0xFF	; 255
    1604:	60 81       	ld	r22, Z
    1606:	71 81       	ldd	r23, Z+1	; 0x01
    1608:	82 81       	ldd	r24, Z+2	; 0x02
    160a:	93 81       	ldd	r25, Z+3	; 0x03
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	40 e2       	ldi	r20, 0x20	; 32
    1612:	51 e4       	ldi	r21, 0x41	; 65
    1614:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1618:	dc 01       	movw	r26, r24
    161a:	cb 01       	movw	r24, r22
    161c:	bc 01       	movw	r22, r24
    161e:	cd 01       	movw	r24, r26
    1620:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1624:	dc 01       	movw	r26, r24
    1626:	cb 01       	movw	r24, r22
    1628:	9e af       	std	Y+62, r25	; 0x3e
    162a:	8d af       	std	Y+61, r24	; 0x3d
    162c:	0f c0       	rjmp	.+30     	; 0x164c <main+0xb16>
    162e:	89 e1       	ldi	r24, 0x19	; 25
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	9c af       	std	Y+60, r25	; 0x3c
    1634:	8b af       	std	Y+59, r24	; 0x3b
    1636:	8b ad       	ldd	r24, Y+59	; 0x3b
    1638:	9c ad       	ldd	r25, Y+60	; 0x3c
    163a:	01 97       	sbiw	r24, 0x01	; 1
    163c:	f1 f7       	brne	.-4      	; 0x163a <main+0xb04>
    163e:	9c af       	std	Y+60, r25	; 0x3c
    1640:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1642:	8d ad       	ldd	r24, Y+61	; 0x3d
    1644:	9e ad       	ldd	r25, Y+62	; 0x3e
    1646:	01 97       	sbiw	r24, 0x01	; 1
    1648:	9e af       	std	Y+62, r25	; 0x3e
    164a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    164c:	8d ad       	ldd	r24, Y+61	; 0x3d
    164e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1650:	00 97       	sbiw	r24, 0x00	; 0
    1652:	69 f7       	brne	.-38     	; 0x162e <main+0xaf8>
    1654:	16 c0       	rjmp	.+44     	; 0x1682 <main+0xb4c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1656:	fe 01       	movw	r30, r28
    1658:	ff 96       	adiw	r30, 0x3f	; 63
    165a:	60 81       	ld	r22, Z
    165c:	71 81       	ldd	r23, Z+1	; 0x01
    165e:	82 81       	ldd	r24, Z+2	; 0x02
    1660:	93 81       	ldd	r25, Z+3	; 0x03
    1662:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	9e af       	std	Y+62, r25	; 0x3e
    166c:	8d af       	std	Y+61, r24	; 0x3d
    166e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1670:	9e ad       	ldd	r25, Y+62	; 0x3e
    1672:	9a af       	std	Y+58, r25	; 0x3a
    1674:	89 af       	std	Y+57, r24	; 0x39
    1676:	89 ad       	ldd	r24, Y+57	; 0x39
    1678:	9a ad       	ldd	r25, Y+58	; 0x3a
    167a:	01 97       	sbiw	r24, 0x01	; 1
    167c:	f1 f7       	brne	.-4      	; 0x167a <main+0xb44>
    167e:	9a af       	std	Y+58, r25	; 0x3a
    1680:	89 af       	std	Y+57, r24	; 0x39
                   _delay_ms(150);
                   Setpin_value(DIO_u8PORTA, DIO_u8PIN3 ,DIO_U8LOW);
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	63 e0       	ldi	r22, 0x03	; 3
    1686:	40 e0       	ldi	r20, 0x00	; 0
    1688:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    168c:	80 e0       	ldi	r24, 0x00	; 0
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	a6 e1       	ldi	r26, 0x16	; 22
    1692:	b3 e4       	ldi	r27, 0x43	; 67
    1694:	8d ab       	std	Y+53, r24	; 0x35
    1696:	9e ab       	std	Y+54, r25	; 0x36
    1698:	af ab       	std	Y+55, r26	; 0x37
    169a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    169c:	6d a9       	ldd	r22, Y+53	; 0x35
    169e:	7e a9       	ldd	r23, Y+54	; 0x36
    16a0:	8f a9       	ldd	r24, Y+55	; 0x37
    16a2:	98 ad       	ldd	r25, Y+56	; 0x38
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	4a e7       	ldi	r20, 0x7A	; 122
    16aa:	53 e4       	ldi	r21, 0x43	; 67
    16ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16b0:	dc 01       	movw	r26, r24
    16b2:	cb 01       	movw	r24, r22
    16b4:	89 ab       	std	Y+49, r24	; 0x31
    16b6:	9a ab       	std	Y+50, r25	; 0x32
    16b8:	ab ab       	std	Y+51, r26	; 0x33
    16ba:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    16bc:	69 a9       	ldd	r22, Y+49	; 0x31
    16be:	7a a9       	ldd	r23, Y+50	; 0x32
    16c0:	8b a9       	ldd	r24, Y+51	; 0x33
    16c2:	9c a9       	ldd	r25, Y+52	; 0x34
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e8       	ldi	r20, 0x80	; 128
    16ca:	5f e3       	ldi	r21, 0x3F	; 63
    16cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16d0:	88 23       	and	r24, r24
    16d2:	2c f4       	brge	.+10     	; 0x16de <main+0xba8>
		__ticks = 1;
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	98 ab       	std	Y+48, r25	; 0x30
    16da:	8f a7       	std	Y+47, r24	; 0x2f
    16dc:	3f c0       	rjmp	.+126    	; 0x175c <main+0xc26>
	else if (__tmp > 65535)
    16de:	69 a9       	ldd	r22, Y+49	; 0x31
    16e0:	7a a9       	ldd	r23, Y+50	; 0x32
    16e2:	8b a9       	ldd	r24, Y+51	; 0x33
    16e4:	9c a9       	ldd	r25, Y+52	; 0x34
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	3f ef       	ldi	r19, 0xFF	; 255
    16ea:	4f e7       	ldi	r20, 0x7F	; 127
    16ec:	57 e4       	ldi	r21, 0x47	; 71
    16ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16f2:	18 16       	cp	r1, r24
    16f4:	4c f5       	brge	.+82     	; 0x1748 <main+0xc12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16f6:	6d a9       	ldd	r22, Y+53	; 0x35
    16f8:	7e a9       	ldd	r23, Y+54	; 0x36
    16fa:	8f a9       	ldd	r24, Y+55	; 0x37
    16fc:	98 ad       	ldd	r25, Y+56	; 0x38
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	40 e2       	ldi	r20, 0x20	; 32
    1704:	51 e4       	ldi	r21, 0x41	; 65
    1706:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	bc 01       	movw	r22, r24
    1710:	cd 01       	movw	r24, r26
    1712:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1716:	dc 01       	movw	r26, r24
    1718:	cb 01       	movw	r24, r22
    171a:	98 ab       	std	Y+48, r25	; 0x30
    171c:	8f a7       	std	Y+47, r24	; 0x2f
    171e:	0f c0       	rjmp	.+30     	; 0x173e <main+0xc08>
    1720:	89 e1       	ldi	r24, 0x19	; 25
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	9e a7       	std	Y+46, r25	; 0x2e
    1726:	8d a7       	std	Y+45, r24	; 0x2d
    1728:	8d a5       	ldd	r24, Y+45	; 0x2d
    172a:	9e a5       	ldd	r25, Y+46	; 0x2e
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	f1 f7       	brne	.-4      	; 0x172c <main+0xbf6>
    1730:	9e a7       	std	Y+46, r25	; 0x2e
    1732:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1734:	8f a5       	ldd	r24, Y+47	; 0x2f
    1736:	98 a9       	ldd	r25, Y+48	; 0x30
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	98 ab       	std	Y+48, r25	; 0x30
    173c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1740:	98 a9       	ldd	r25, Y+48	; 0x30
    1742:	00 97       	sbiw	r24, 0x00	; 0
    1744:	69 f7       	brne	.-38     	; 0x1720 <main+0xbea>
    1746:	14 c0       	rjmp	.+40     	; 0x1770 <main+0xc3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1748:	69 a9       	ldd	r22, Y+49	; 0x31
    174a:	7a a9       	ldd	r23, Y+50	; 0x32
    174c:	8b a9       	ldd	r24, Y+51	; 0x33
    174e:	9c a9       	ldd	r25, Y+52	; 0x34
    1750:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	98 ab       	std	Y+48, r25	; 0x30
    175a:	8f a7       	std	Y+47, r24	; 0x2f
    175c:	8f a5       	ldd	r24, Y+47	; 0x2f
    175e:	98 a9       	ldd	r25, Y+48	; 0x30
    1760:	9c a7       	std	Y+44, r25	; 0x2c
    1762:	8b a7       	std	Y+43, r24	; 0x2b
    1764:	8b a5       	ldd	r24, Y+43	; 0x2b
    1766:	9c a5       	ldd	r25, Y+44	; 0x2c
    1768:	01 97       	sbiw	r24, 0x01	; 1
    176a:	f1 f7       	brne	.-4      	; 0x1768 <main+0xc32>
    176c:	9c a7       	std	Y+44, r25	; 0x2c
    176e:	8b a7       	std	Y+43, r24	; 0x2b
                      	    	    	    	 _delay_ms(150);
                                 Setpin_value(DIO_u8PORTA, DIO_u8PIN2 ,DIO_U8LOW);
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	62 e0       	ldi	r22, 0x02	; 2
    1774:	40 e0       	ldi	r20, 0x00	; 0
    1776:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    177a:	80 e0       	ldi	r24, 0x00	; 0
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	a6 e1       	ldi	r26, 0x16	; 22
    1780:	b3 e4       	ldi	r27, 0x43	; 67
    1782:	8f a3       	std	Y+39, r24	; 0x27
    1784:	98 a7       	std	Y+40, r25	; 0x28
    1786:	a9 a7       	std	Y+41, r26	; 0x29
    1788:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    178a:	6f a1       	ldd	r22, Y+39	; 0x27
    178c:	78 a5       	ldd	r23, Y+40	; 0x28
    178e:	89 a5       	ldd	r24, Y+41	; 0x29
    1790:	9a a5       	ldd	r25, Y+42	; 0x2a
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	4a e7       	ldi	r20, 0x7A	; 122
    1798:	53 e4       	ldi	r21, 0x43	; 67
    179a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	8b a3       	std	Y+35, r24	; 0x23
    17a4:	9c a3       	std	Y+36, r25	; 0x24
    17a6:	ad a3       	std	Y+37, r26	; 0x25
    17a8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17aa:	6b a1       	ldd	r22, Y+35	; 0x23
    17ac:	7c a1       	ldd	r23, Y+36	; 0x24
    17ae:	8d a1       	ldd	r24, Y+37	; 0x25
    17b0:	9e a1       	ldd	r25, Y+38	; 0x26
    17b2:	20 e0       	ldi	r18, 0x00	; 0
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	40 e8       	ldi	r20, 0x80	; 128
    17b8:	5f e3       	ldi	r21, 0x3F	; 63
    17ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17be:	88 23       	and	r24, r24
    17c0:	2c f4       	brge	.+10     	; 0x17cc <main+0xc96>
		__ticks = 1;
    17c2:	81 e0       	ldi	r24, 0x01	; 1
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	9a a3       	std	Y+34, r25	; 0x22
    17c8:	89 a3       	std	Y+33, r24	; 0x21
    17ca:	3f c0       	rjmp	.+126    	; 0x184a <main+0xd14>
	else if (__tmp > 65535)
    17cc:	6b a1       	ldd	r22, Y+35	; 0x23
    17ce:	7c a1       	ldd	r23, Y+36	; 0x24
    17d0:	8d a1       	ldd	r24, Y+37	; 0x25
    17d2:	9e a1       	ldd	r25, Y+38	; 0x26
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	3f ef       	ldi	r19, 0xFF	; 255
    17d8:	4f e7       	ldi	r20, 0x7F	; 127
    17da:	57 e4       	ldi	r21, 0x47	; 71
    17dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17e0:	18 16       	cp	r1, r24
    17e2:	4c f5       	brge	.+82     	; 0x1836 <main+0xd00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17e4:	6f a1       	ldd	r22, Y+39	; 0x27
    17e6:	78 a5       	ldd	r23, Y+40	; 0x28
    17e8:	89 a5       	ldd	r24, Y+41	; 0x29
    17ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	40 e2       	ldi	r20, 0x20	; 32
    17f2:	51 e4       	ldi	r21, 0x41	; 65
    17f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	bc 01       	movw	r22, r24
    17fe:	cd 01       	movw	r24, r26
    1800:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1804:	dc 01       	movw	r26, r24
    1806:	cb 01       	movw	r24, r22
    1808:	9a a3       	std	Y+34, r25	; 0x22
    180a:	89 a3       	std	Y+33, r24	; 0x21
    180c:	0f c0       	rjmp	.+30     	; 0x182c <main+0xcf6>
    180e:	89 e1       	ldi	r24, 0x19	; 25
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	98 a3       	std	Y+32, r25	; 0x20
    1814:	8f 8f       	std	Y+31, r24	; 0x1f
    1816:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1818:	98 a1       	ldd	r25, Y+32	; 0x20
    181a:	01 97       	sbiw	r24, 0x01	; 1
    181c:	f1 f7       	brne	.-4      	; 0x181a <main+0xce4>
    181e:	98 a3       	std	Y+32, r25	; 0x20
    1820:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1822:	89 a1       	ldd	r24, Y+33	; 0x21
    1824:	9a a1       	ldd	r25, Y+34	; 0x22
    1826:	01 97       	sbiw	r24, 0x01	; 1
    1828:	9a a3       	std	Y+34, r25	; 0x22
    182a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    182c:	89 a1       	ldd	r24, Y+33	; 0x21
    182e:	9a a1       	ldd	r25, Y+34	; 0x22
    1830:	00 97       	sbiw	r24, 0x00	; 0
    1832:	69 f7       	brne	.-38     	; 0x180e <main+0xcd8>
    1834:	14 c0       	rjmp	.+40     	; 0x185e <main+0xd28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1836:	6b a1       	ldd	r22, Y+35	; 0x23
    1838:	7c a1       	ldd	r23, Y+36	; 0x24
    183a:	8d a1       	ldd	r24, Y+37	; 0x25
    183c:	9e a1       	ldd	r25, Y+38	; 0x26
    183e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1842:	dc 01       	movw	r26, r24
    1844:	cb 01       	movw	r24, r22
    1846:	9a a3       	std	Y+34, r25	; 0x22
    1848:	89 a3       	std	Y+33, r24	; 0x21
    184a:	89 a1       	ldd	r24, Y+33	; 0x21
    184c:	9a a1       	ldd	r25, Y+34	; 0x22
    184e:	9e 8f       	std	Y+30, r25	; 0x1e
    1850:	8d 8f       	std	Y+29, r24	; 0x1d
    1852:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1854:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1856:	01 97       	sbiw	r24, 0x01	; 1
    1858:	f1 f7       	brne	.-4      	; 0x1856 <main+0xd20>
    185a:	9e 8f       	std	Y+30, r25	; 0x1e
    185c:	8d 8f       	std	Y+29, r24	; 0x1d
                                     _delay_ms(150);
                                     Setpin_value(DIO_u8PORTA, DIO_u8PIN1 ,DIO_U8LOW);
    185e:	80 e0       	ldi	r24, 0x00	; 0
    1860:	61 e0       	ldi	r22, 0x01	; 1
    1862:	40 e0       	ldi	r20, 0x00	; 0
    1864:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	a6 e1       	ldi	r26, 0x16	; 22
    186e:	b3 e4       	ldi	r27, 0x43	; 67
    1870:	89 8f       	std	Y+25, r24	; 0x19
    1872:	9a 8f       	std	Y+26, r25	; 0x1a
    1874:	ab 8f       	std	Y+27, r26	; 0x1b
    1876:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1878:	69 8d       	ldd	r22, Y+25	; 0x19
    187a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    187c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    187e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1880:	20 e0       	ldi	r18, 0x00	; 0
    1882:	30 e0       	ldi	r19, 0x00	; 0
    1884:	4a e7       	ldi	r20, 0x7A	; 122
    1886:	53 e4       	ldi	r21, 0x43	; 67
    1888:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    188c:	dc 01       	movw	r26, r24
    188e:	cb 01       	movw	r24, r22
    1890:	8d 8b       	std	Y+21, r24	; 0x15
    1892:	9e 8b       	std	Y+22, r25	; 0x16
    1894:	af 8b       	std	Y+23, r26	; 0x17
    1896:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1898:	6d 89       	ldd	r22, Y+21	; 0x15
    189a:	7e 89       	ldd	r23, Y+22	; 0x16
    189c:	8f 89       	ldd	r24, Y+23	; 0x17
    189e:	98 8d       	ldd	r25, Y+24	; 0x18
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	40 e8       	ldi	r20, 0x80	; 128
    18a6:	5f e3       	ldi	r21, 0x3F	; 63
    18a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18ac:	88 23       	and	r24, r24
    18ae:	2c f4       	brge	.+10     	; 0x18ba <main+0xd84>
		__ticks = 1;
    18b0:	81 e0       	ldi	r24, 0x01	; 1
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	9c 8b       	std	Y+20, r25	; 0x14
    18b6:	8b 8b       	std	Y+19, r24	; 0x13
    18b8:	3f c0       	rjmp	.+126    	; 0x1938 <main+0xe02>
	else if (__tmp > 65535)
    18ba:	6d 89       	ldd	r22, Y+21	; 0x15
    18bc:	7e 89       	ldd	r23, Y+22	; 0x16
    18be:	8f 89       	ldd	r24, Y+23	; 0x17
    18c0:	98 8d       	ldd	r25, Y+24	; 0x18
    18c2:	20 e0       	ldi	r18, 0x00	; 0
    18c4:	3f ef       	ldi	r19, 0xFF	; 255
    18c6:	4f e7       	ldi	r20, 0x7F	; 127
    18c8:	57 e4       	ldi	r21, 0x47	; 71
    18ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18ce:	18 16       	cp	r1, r24
    18d0:	4c f5       	brge	.+82     	; 0x1924 <main+0xdee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18d2:	69 8d       	ldd	r22, Y+25	; 0x19
    18d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	30 e0       	ldi	r19, 0x00	; 0
    18de:	40 e2       	ldi	r20, 0x20	; 32
    18e0:	51 e4       	ldi	r21, 0x41	; 65
    18e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	bc 01       	movw	r22, r24
    18ec:	cd 01       	movw	r24, r26
    18ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f2:	dc 01       	movw	r26, r24
    18f4:	cb 01       	movw	r24, r22
    18f6:	9c 8b       	std	Y+20, r25	; 0x14
    18f8:	8b 8b       	std	Y+19, r24	; 0x13
    18fa:	0f c0       	rjmp	.+30     	; 0x191a <main+0xde4>
    18fc:	89 e1       	ldi	r24, 0x19	; 25
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	9a 8b       	std	Y+18, r25	; 0x12
    1902:	89 8b       	std	Y+17, r24	; 0x11
    1904:	89 89       	ldd	r24, Y+17	; 0x11
    1906:	9a 89       	ldd	r25, Y+18	; 0x12
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	f1 f7       	brne	.-4      	; 0x1908 <main+0xdd2>
    190c:	9a 8b       	std	Y+18, r25	; 0x12
    190e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1910:	8b 89       	ldd	r24, Y+19	; 0x13
    1912:	9c 89       	ldd	r25, Y+20	; 0x14
    1914:	01 97       	sbiw	r24, 0x01	; 1
    1916:	9c 8b       	std	Y+20, r25	; 0x14
    1918:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    191a:	8b 89       	ldd	r24, Y+19	; 0x13
    191c:	9c 89       	ldd	r25, Y+20	; 0x14
    191e:	00 97       	sbiw	r24, 0x00	; 0
    1920:	69 f7       	brne	.-38     	; 0x18fc <main+0xdc6>
    1922:	14 c0       	rjmp	.+40     	; 0x194c <main+0xe16>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1924:	6d 89       	ldd	r22, Y+21	; 0x15
    1926:	7e 89       	ldd	r23, Y+22	; 0x16
    1928:	8f 89       	ldd	r24, Y+23	; 0x17
    192a:	98 8d       	ldd	r25, Y+24	; 0x18
    192c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1930:	dc 01       	movw	r26, r24
    1932:	cb 01       	movw	r24, r22
    1934:	9c 8b       	std	Y+20, r25	; 0x14
    1936:	8b 8b       	std	Y+19, r24	; 0x13
    1938:	8b 89       	ldd	r24, Y+19	; 0x13
    193a:	9c 89       	ldd	r25, Y+20	; 0x14
    193c:	98 8b       	std	Y+16, r25	; 0x10
    193e:	8f 87       	std	Y+15, r24	; 0x0f
    1940:	8f 85       	ldd	r24, Y+15	; 0x0f
    1942:	98 89       	ldd	r25, Y+16	; 0x10
    1944:	01 97       	sbiw	r24, 0x01	; 1
    1946:	f1 f7       	brne	.-4      	; 0x1944 <main+0xe0e>
    1948:	98 8b       	std	Y+16, r25	; 0x10
    194a:	8f 87       	std	Y+15, r24	; 0x0f
                                        	    	    	    	 _delay_ms(150);
                                                   Setpin_value(DIO_u8PORTA, DIO_u8PIN0 ,DIO_U8LOW);
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	60 e0       	ldi	r22, 0x00	; 0
    1950:	40 e0       	ldi	r20, 0x00	; 0
    1952:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <Setpin_value>
    1956:	80 e0       	ldi	r24, 0x00	; 0
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	a6 e1       	ldi	r26, 0x16	; 22
    195c:	b3 e4       	ldi	r27, 0x43	; 67
    195e:	8b 87       	std	Y+11, r24	; 0x0b
    1960:	9c 87       	std	Y+12, r25	; 0x0c
    1962:	ad 87       	std	Y+13, r26	; 0x0d
    1964:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1966:	6b 85       	ldd	r22, Y+11	; 0x0b
    1968:	7c 85       	ldd	r23, Y+12	; 0x0c
    196a:	8d 85       	ldd	r24, Y+13	; 0x0d
    196c:	9e 85       	ldd	r25, Y+14	; 0x0e
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	4a e7       	ldi	r20, 0x7A	; 122
    1974:	53 e4       	ldi	r21, 0x43	; 67
    1976:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    197a:	dc 01       	movw	r26, r24
    197c:	cb 01       	movw	r24, r22
    197e:	8f 83       	std	Y+7, r24	; 0x07
    1980:	98 87       	std	Y+8, r25	; 0x08
    1982:	a9 87       	std	Y+9, r26	; 0x09
    1984:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1986:	6f 81       	ldd	r22, Y+7	; 0x07
    1988:	78 85       	ldd	r23, Y+8	; 0x08
    198a:	89 85       	ldd	r24, Y+9	; 0x09
    198c:	9a 85       	ldd	r25, Y+10	; 0x0a
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	40 e8       	ldi	r20, 0x80	; 128
    1994:	5f e3       	ldi	r21, 0x3F	; 63
    1996:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    199a:	88 23       	and	r24, r24
    199c:	2c f4       	brge	.+10     	; 0x19a8 <main+0xe72>
		__ticks = 1;
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	9e 83       	std	Y+6, r25	; 0x06
    19a4:	8d 83       	std	Y+5, r24	; 0x05
    19a6:	3f c0       	rjmp	.+126    	; 0x1a26 <main+0xef0>
	else if (__tmp > 65535)
    19a8:	6f 81       	ldd	r22, Y+7	; 0x07
    19aa:	78 85       	ldd	r23, Y+8	; 0x08
    19ac:	89 85       	ldd	r24, Y+9	; 0x09
    19ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	3f ef       	ldi	r19, 0xFF	; 255
    19b4:	4f e7       	ldi	r20, 0x7F	; 127
    19b6:	57 e4       	ldi	r21, 0x47	; 71
    19b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19bc:	18 16       	cp	r1, r24
    19be:	4c f5       	brge	.+82     	; 0x1a12 <main+0xedc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    19c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    19c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    19c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    19c8:	20 e0       	ldi	r18, 0x00	; 0
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	40 e2       	ldi	r20, 0x20	; 32
    19ce:	51 e4       	ldi	r21, 0x41	; 65
    19d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	bc 01       	movw	r22, r24
    19da:	cd 01       	movw	r24, r26
    19dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e0:	dc 01       	movw	r26, r24
    19e2:	cb 01       	movw	r24, r22
    19e4:	9e 83       	std	Y+6, r25	; 0x06
    19e6:	8d 83       	std	Y+5, r24	; 0x05
    19e8:	0f c0       	rjmp	.+30     	; 0x1a08 <main+0xed2>
    19ea:	89 e1       	ldi	r24, 0x19	; 25
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	9c 83       	std	Y+4, r25	; 0x04
    19f0:	8b 83       	std	Y+3, r24	; 0x03
    19f2:	8b 81       	ldd	r24, Y+3	; 0x03
    19f4:	9c 81       	ldd	r25, Y+4	; 0x04
    19f6:	01 97       	sbiw	r24, 0x01	; 1
    19f8:	f1 f7       	brne	.-4      	; 0x19f6 <main+0xec0>
    19fa:	9c 83       	std	Y+4, r25	; 0x04
    19fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1a00:	9e 81       	ldd	r25, Y+6	; 0x06
    1a02:	01 97       	sbiw	r24, 0x01	; 1
    1a04:	9e 83       	std	Y+6, r25	; 0x06
    1a06:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a08:	8d 81       	ldd	r24, Y+5	; 0x05
    1a0a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a0c:	00 97       	sbiw	r24, 0x00	; 0
    1a0e:	69 f7       	brne	.-38     	; 0x19ea <main+0xeb4>
    1a10:	a1 c8       	rjmp	.-3774   	; 0xb54 <main+0x1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a12:	6f 81       	ldd	r22, Y+7	; 0x07
    1a14:	78 85       	ldd	r23, Y+8	; 0x08
    1a16:	89 85       	ldd	r24, Y+9	; 0x09
    1a18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a1e:	dc 01       	movw	r26, r24
    1a20:	cb 01       	movw	r24, r22
    1a22:	9e 83       	std	Y+6, r25	; 0x06
    1a24:	8d 83       	std	Y+5, r24	; 0x05
    1a26:	8d 81       	ldd	r24, Y+5	; 0x05
    1a28:	9e 81       	ldd	r25, Y+6	; 0x06
    1a2a:	9a 83       	std	Y+2, r25	; 0x02
    1a2c:	89 83       	std	Y+1, r24	; 0x01
    1a2e:	89 81       	ldd	r24, Y+1	; 0x01
    1a30:	9a 81       	ldd	r25, Y+2	; 0x02
    1a32:	01 97       	sbiw	r24, 0x01	; 1
    1a34:	f1 f7       	brne	.-4      	; 0x1a32 <main+0xefc>
    1a36:	9a 83       	std	Y+2, r25	; 0x02
    1a38:	89 83       	std	Y+1, r24	; 0x01
    1a3a:	8c c8       	rjmp	.-3816   	; 0xb54 <main+0x1e>

00001a3c <DIO_init>:
#include "ERROR.h"
#include "config.h"


ES_t DIO_init(void)
 {
    1a3c:	df 93       	push	r29
    1a3e:	cf 93       	push	r28
    1a40:	0f 92       	push	r0
    1a42:	cd b7       	in	r28, 0x3d	; 61
    1a44:	de b7       	in	r29, 0x3e	; 62
	ES_t local_enumError=DIO_NOK;
    1a46:	81 e0       	ldi	r24, 0x01	; 1
    1a48:	89 83       	std	Y+1, r24	; 0x01
	    DDRA= CONC(PORTA_PIN7_DIR,PORTA_PIN6_DIR,PORTA_PIN5_DIR,PORTA_PIN4_DIR,PORTA_PIN3_DIR,PORTA_PIN2_DIR,PORTA_PIN1_DIR,PORTA_PIN0_DIR);
    1a4a:	ea e3       	ldi	r30, 0x3A	; 58
    1a4c:	f0 e0       	ldi	r31, 0x00	; 0
    1a4e:	8f ef       	ldi	r24, 0xFF	; 255
    1a50:	80 83       	st	Z, r24
	    DDRB= CONC(PORTB_PIN7_DIR,PORTB_PIN6_DIR,PORTB_PIN5_DIR,PORTB_PIN4_DIR,PORTB_PIN3_DIR,PORTB_PIN2_DIR,PORTB_PIN1_DIR,PORTB_PIN0_DIR);
    1a52:	e7 e3       	ldi	r30, 0x37	; 55
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	8f ef       	ldi	r24, 0xFF	; 255
    1a58:	80 83       	st	Z, r24
	    DDRC= CONC(PORTC_PIN7_DIR,PORTC_PIN6_DIR,PORTC_PIN5_DIR,PORTC_PIN4_DIR,PORTC_PIN3_DIR,PORTC_PIN2_DIR,PORTC_PIN1_DIR,PORTC_PIN0_DIR);
    1a5a:	e4 e3       	ldi	r30, 0x34	; 52
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	10 82       	st	Z, r1
	    DDRD= CONC(PORTD_PIN7_DIR,PORTD_PIN6_DIR,PORTD_PIN5_DIR,PORTD_PIN4_DIR,PORTD_PIN3_DIR,PORTD_PIN2_DIR,PORTD_PIN1_DIR,PORTD_PIN0_DIR);
    1a60:	e1 e3       	ldi	r30, 0x31	; 49
    1a62:	f0 e0       	ldi	r31, 0x00	; 0
    1a64:	8f ef       	ldi	r24, 0xFF	; 255
    1a66:	80 83       	st	Z, r24

	    PORTA= CONC(PORTA_PIN7_VAL,PORTA_PIN6_VAL,PORTA_PIN5_VAL,PORTA_PIN4_VAL,PORTA_PIN3_VAL,PORTA_PIN2_VAL,PORTA_PIN1_VAL,PORTA_PIN0_VAL);
    1a68:	eb e3       	ldi	r30, 0x3B	; 59
    1a6a:	f0 e0       	ldi	r31, 0x00	; 0
    1a6c:	10 82       	st	Z, r1
		PORTB= CONC(PORTB_PIN7_VAL,PORTB_PIN6_VAL,PORTB_PIN5_VAL,PORTB_PIN4_VAL,PORTB_PIN3_VAL,PORTB_PIN2_VAL,PORTB_PIN1_VAL,PORTB_PIN0_VAL);
    1a6e:	e8 e3       	ldi	r30, 0x38	; 56
    1a70:	f0 e0       	ldi	r31, 0x00	; 0
    1a72:	89 e2       	ldi	r24, 0x29	; 41
    1a74:	80 83       	st	Z, r24
		PORTC= CONC(PORTC_PIN7_VAL,PORTC_PIN6_VAL,PORTC_PIN5_VAL,PORTC_PIN4_VAL,PORTC_PIN3_VAL,PORTC_PIN2_VAL,PORTC_PIN1_VAL,PORTC_PIN0_VAL);
    1a76:	e5 e3       	ldi	r30, 0x35	; 53
    1a78:	f0 e0       	ldi	r31, 0x00	; 0
    1a7a:	87 ea       	ldi	r24, 0xA7	; 167
    1a7c:	80 83       	st	Z, r24
		PORTD= CONC(PORTD_PIN7_VAL,PORTD_PIN6_VAL,PORTD_PIN5_VAL,PORTD_PIN4_VAL,PORTD_PIN3_VAL,PORTD_PIN2_VAL,PORTD_PIN1_VAL,PORTD_PIN0_VAL);
    1a7e:	e2 e3       	ldi	r30, 0x32	; 50
    1a80:	f0 e0       	ldi	r31, 0x00	; 0
    1a82:	83 ed       	ldi	r24, 0xD3	; 211
    1a84:	80 83       	st	Z, r24
		local_enumError=DIO_OK;
    1a86:	19 82       	std	Y+1, r1	; 0x01


	 return local_enumError;
    1a88:	89 81       	ldd	r24, Y+1	; 0x01

 }
    1a8a:	0f 90       	pop	r0
    1a8c:	cf 91       	pop	r28
    1a8e:	df 91       	pop	r29
    1a90:	08 95       	ret

00001a92 <Setport_Direction>:

ES_t Setport_Direction(u8 copy_u8_PortId,u8 copy_u8_value)
{
    1a92:	df 93       	push	r29
    1a94:	cf 93       	push	r28
    1a96:	cd b7       	in	r28, 0x3d	; 61
    1a98:	de b7       	in	r29, 0x3e	; 62
    1a9a:	27 97       	sbiw	r28, 0x07	; 7
    1a9c:	0f b6       	in	r0, 0x3f	; 63
    1a9e:	f8 94       	cli
    1aa0:	de bf       	out	0x3e, r29	; 62
    1aa2:	0f be       	out	0x3f, r0	; 63
    1aa4:	cd bf       	out	0x3d, r28	; 61
    1aa6:	8c 83       	std	Y+4, r24	; 0x04
    1aa8:	6d 83       	std	Y+5, r22	; 0x05
		ES_t local_enumError=DIO_NOK;
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	8b 83       	std	Y+3, r24	; 0x03

     if(copy_u8_PortId<=DIO_PORTD)
    1aae:	8c 81       	ldd	r24, Y+4	; 0x04
    1ab0:	84 30       	cpi	r24, 0x04	; 4
    1ab2:	a0 f5       	brcc	.+104    	; 0x1b1c <Setport_Direction+0x8a>
     {
    	 switch(copy_u8_PortId)
    1ab4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ab6:	28 2f       	mov	r18, r24
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	3f 83       	std	Y+7, r19	; 0x07
    1abc:	2e 83       	std	Y+6, r18	; 0x06
    1abe:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ac2:	81 30       	cpi	r24, 0x01	; 1
    1ac4:	91 05       	cpc	r25, r1
    1ac6:	d1 f0       	breq	.+52     	; 0x1afc <Setport_Direction+0x6a>
    1ac8:	2e 81       	ldd	r18, Y+6	; 0x06
    1aca:	3f 81       	ldd	r19, Y+7	; 0x07
    1acc:	22 30       	cpi	r18, 0x02	; 2
    1ace:	31 05       	cpc	r19, r1
    1ad0:	2c f4       	brge	.+10     	; 0x1adc <Setport_Direction+0x4a>
    1ad2:	8e 81       	ldd	r24, Y+6	; 0x06
    1ad4:	9f 81       	ldd	r25, Y+7	; 0x07
    1ad6:	00 97       	sbiw	r24, 0x00	; 0
    1ad8:	61 f0       	breq	.+24     	; 0x1af2 <Setport_Direction+0x60>
    1ada:	1e c0       	rjmp	.+60     	; 0x1b18 <Setport_Direction+0x86>
    1adc:	2e 81       	ldd	r18, Y+6	; 0x06
    1ade:	3f 81       	ldd	r19, Y+7	; 0x07
    1ae0:	22 30       	cpi	r18, 0x02	; 2
    1ae2:	31 05       	cpc	r19, r1
    1ae4:	81 f0       	breq	.+32     	; 0x1b06 <Setport_Direction+0x74>
    1ae6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ae8:	9f 81       	ldd	r25, Y+7	; 0x07
    1aea:	83 30       	cpi	r24, 0x03	; 3
    1aec:	91 05       	cpc	r25, r1
    1aee:	81 f0       	breq	.+32     	; 0x1b10 <Setport_Direction+0x7e>
    1af0:	13 c0       	rjmp	.+38     	; 0x1b18 <Setport_Direction+0x86>
    	 {
    	 case DIO_PORTA:
    		 DDRA=copy_u8_value;
    1af2:	ea e3       	ldi	r30, 0x3A	; 58
    1af4:	f0 e0       	ldi	r31, 0x00	; 0
    1af6:	8d 81       	ldd	r24, Y+5	; 0x05
    1af8:	80 83       	st	Z, r24
    1afa:	0e c0       	rjmp	.+28     	; 0x1b18 <Setport_Direction+0x86>
    		 break;
    	 case DIO_PORTB:
    		 DDRB=copy_u8_value;
    1afc:	e7 e3       	ldi	r30, 0x37	; 55
    1afe:	f0 e0       	ldi	r31, 0x00	; 0
    1b00:	8d 81       	ldd	r24, Y+5	; 0x05
    1b02:	80 83       	st	Z, r24
    1b04:	09 c0       	rjmp	.+18     	; 0x1b18 <Setport_Direction+0x86>

    	    		 break;
    	 case DIO_PORTC:
    		 DDRC=copy_u8_value;
    1b06:	e4 e3       	ldi	r30, 0x34	; 52
    1b08:	f0 e0       	ldi	r31, 0x00	; 0
    1b0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b0c:	80 83       	st	Z, r24
    1b0e:	04 c0       	rjmp	.+8      	; 0x1b18 <Setport_Direction+0x86>

    	    		 break;
    	 case DIO_PORTD:
    		 DDRD=copy_u8_value;
    1b10:	e1 e3       	ldi	r30, 0x31	; 49
    1b12:	f0 e0       	ldi	r31, 0x00	; 0
    1b14:	8d 81       	ldd	r24, Y+5	; 0x05
    1b16:	80 83       	st	Z, r24

    	    		 break;
    	 }

 		ES_t local_enumError=DIO_OK;
    1b18:	1a 82       	std	Y+2, r1	; 0x02
    1b1a:	02 c0       	rjmp	.+4      	; 0x1b20 <Setport_Direction+0x8e>

     }

     else
     {
    		ES_t local_enumError=OUT_OF_RANGE;
    1b1c:	83 e0       	ldi	r24, 0x03	; 3
    1b1e:	89 83       	std	Y+1, r24	; 0x01
     }




		 return local_enumError;
    1b20:	8b 81       	ldd	r24, Y+3	; 0x03

}
    1b22:	27 96       	adiw	r28, 0x07	; 7
    1b24:	0f b6       	in	r0, 0x3f	; 63
    1b26:	f8 94       	cli
    1b28:	de bf       	out	0x3e, r29	; 62
    1b2a:	0f be       	out	0x3f, r0	; 63
    1b2c:	cd bf       	out	0x3d, r28	; 61
    1b2e:	cf 91       	pop	r28
    1b30:	df 91       	pop	r29
    1b32:	08 95       	ret

00001b34 <Setport_value>:
ES_t Setport_value(u8 copy_u8_PortId,u8 copy_u8_value)
{
    1b34:	df 93       	push	r29
    1b36:	cf 93       	push	r28
    1b38:	cd b7       	in	r28, 0x3d	; 61
    1b3a:	de b7       	in	r29, 0x3e	; 62
    1b3c:	27 97       	sbiw	r28, 0x07	; 7
    1b3e:	0f b6       	in	r0, 0x3f	; 63
    1b40:	f8 94       	cli
    1b42:	de bf       	out	0x3e, r29	; 62
    1b44:	0f be       	out	0x3f, r0	; 63
    1b46:	cd bf       	out	0x3d, r28	; 61
    1b48:	8c 83       	std	Y+4, r24	; 0x04
    1b4a:	6d 83       	std	Y+5, r22	; 0x05

			ES_t local_enumError=DIO_NOK;
    1b4c:	81 e0       	ldi	r24, 0x01	; 1
    1b4e:	8b 83       	std	Y+3, r24	; 0x03

	     if(copy_u8_PortId<=DIO_PORTD)
    1b50:	8c 81       	ldd	r24, Y+4	; 0x04
    1b52:	84 30       	cpi	r24, 0x04	; 4
    1b54:	a0 f5       	brcc	.+104    	; 0x1bbe <Setport_value+0x8a>
	     {
	    	 switch(copy_u8_PortId)
    1b56:	8c 81       	ldd	r24, Y+4	; 0x04
    1b58:	28 2f       	mov	r18, r24
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	3f 83       	std	Y+7, r19	; 0x07
    1b5e:	2e 83       	std	Y+6, r18	; 0x06
    1b60:	8e 81       	ldd	r24, Y+6	; 0x06
    1b62:	9f 81       	ldd	r25, Y+7	; 0x07
    1b64:	81 30       	cpi	r24, 0x01	; 1
    1b66:	91 05       	cpc	r25, r1
    1b68:	d1 f0       	breq	.+52     	; 0x1b9e <Setport_value+0x6a>
    1b6a:	2e 81       	ldd	r18, Y+6	; 0x06
    1b6c:	3f 81       	ldd	r19, Y+7	; 0x07
    1b6e:	22 30       	cpi	r18, 0x02	; 2
    1b70:	31 05       	cpc	r19, r1
    1b72:	2c f4       	brge	.+10     	; 0x1b7e <Setport_value+0x4a>
    1b74:	8e 81       	ldd	r24, Y+6	; 0x06
    1b76:	9f 81       	ldd	r25, Y+7	; 0x07
    1b78:	00 97       	sbiw	r24, 0x00	; 0
    1b7a:	61 f0       	breq	.+24     	; 0x1b94 <Setport_value+0x60>
    1b7c:	1e c0       	rjmp	.+60     	; 0x1bba <Setport_value+0x86>
    1b7e:	2e 81       	ldd	r18, Y+6	; 0x06
    1b80:	3f 81       	ldd	r19, Y+7	; 0x07
    1b82:	22 30       	cpi	r18, 0x02	; 2
    1b84:	31 05       	cpc	r19, r1
    1b86:	81 f0       	breq	.+32     	; 0x1ba8 <Setport_value+0x74>
    1b88:	8e 81       	ldd	r24, Y+6	; 0x06
    1b8a:	9f 81       	ldd	r25, Y+7	; 0x07
    1b8c:	83 30       	cpi	r24, 0x03	; 3
    1b8e:	91 05       	cpc	r25, r1
    1b90:	81 f0       	breq	.+32     	; 0x1bb2 <Setport_value+0x7e>
    1b92:	13 c0       	rjmp	.+38     	; 0x1bba <Setport_value+0x86>
	    	 {
	    	 case DIO_PORTA:
	    		 PORTA=copy_u8_value;
    1b94:	eb e3       	ldi	r30, 0x3B	; 59
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	80 83       	st	Z, r24
    1b9c:	0e c0       	rjmp	.+28     	; 0x1bba <Setport_value+0x86>
	    		 break;
	    	 case DIO_PORTB:
	    		 PORTB=copy_u8_value;
    1b9e:	e8 e3       	ldi	r30, 0x38	; 56
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba4:	80 83       	st	Z, r24
    1ba6:	09 c0       	rjmp	.+18     	; 0x1bba <Setport_value+0x86>

	    	    		 break;
	    	 case DIO_PORTC:
	    		 PORTC=copy_u8_value;
    1ba8:	e5 e3       	ldi	r30, 0x35	; 53
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	8d 81       	ldd	r24, Y+5	; 0x05
    1bae:	80 83       	st	Z, r24
    1bb0:	04 c0       	rjmp	.+8      	; 0x1bba <Setport_value+0x86>

	    	    		 break;
	    	 case DIO_PORTD:
	    		PORTD=copy_u8_value;
    1bb2:	e2 e3       	ldi	r30, 0x32	; 50
    1bb4:	f0 e0       	ldi	r31, 0x00	; 0
    1bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1bb8:	80 83       	st	Z, r24

	    	    		 break;
	    	 }

	 		ES_t local_enumError=DIO_OK;
    1bba:	1a 82       	std	Y+2, r1	; 0x02
    1bbc:	02 c0       	rjmp	.+4      	; 0x1bc2 <Setport_value+0x8e>

	     }

	     else
	     {
	    		ES_t local_enumError=OUT_OF_RANGE;
    1bbe:	83 e0       	ldi	r24, 0x03	; 3
    1bc0:	89 83       	std	Y+1, r24	; 0x01
	     }




			 return local_enumError;
    1bc2:	8b 81       	ldd	r24, Y+3	; 0x03


}
    1bc4:	27 96       	adiw	r28, 0x07	; 7
    1bc6:	0f b6       	in	r0, 0x3f	; 63
    1bc8:	f8 94       	cli
    1bca:	de bf       	out	0x3e, r29	; 62
    1bcc:	0f be       	out	0x3f, r0	; 63
    1bce:	cd bf       	out	0x3d, r28	; 61
    1bd0:	cf 91       	pop	r28
    1bd2:	df 91       	pop	r29
    1bd4:	08 95       	ret

00001bd6 <TogglePort>:
        ES_t TogglePort(u8 copy_u8_PortId)

		{
    1bd6:	df 93       	push	r29
    1bd8:	cf 93       	push	r28
    1bda:	00 d0       	rcall	.+0      	; 0x1bdc <TogglePort+0x6>
    1bdc:	00 d0       	rcall	.+0      	; 0x1bde <TogglePort+0x8>
    1bde:	00 d0       	rcall	.+0      	; 0x1be0 <TogglePort+0xa>
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	8c 83       	std	Y+4, r24	; 0x04
					ES_t local_enumError=DIO_NOK;
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	8b 83       	std	Y+3, r24	; 0x03

			     if(copy_u8_PortId<=DIO_PORTD)
    1bea:	8c 81       	ldd	r24, Y+4	; 0x04
    1bec:	84 30       	cpi	r24, 0x04	; 4
    1bee:	08 f0       	brcs	.+2      	; 0x1bf2 <TogglePort+0x1c>
    1bf0:	40 c0       	rjmp	.+128    	; 0x1c72 <TogglePort+0x9c>
			     {
			    	 switch(copy_u8_PortId)
    1bf2:	8c 81       	ldd	r24, Y+4	; 0x04
    1bf4:	28 2f       	mov	r18, r24
    1bf6:	30 e0       	ldi	r19, 0x00	; 0
    1bf8:	3e 83       	std	Y+6, r19	; 0x06
    1bfa:	2d 83       	std	Y+5, r18	; 0x05
    1bfc:	8d 81       	ldd	r24, Y+5	; 0x05
    1bfe:	9e 81       	ldd	r25, Y+6	; 0x06
    1c00:	81 30       	cpi	r24, 0x01	; 1
    1c02:	91 05       	cpc	r25, r1
    1c04:	e9 f0       	breq	.+58     	; 0x1c40 <TogglePort+0x6a>
    1c06:	2d 81       	ldd	r18, Y+5	; 0x05
    1c08:	3e 81       	ldd	r19, Y+6	; 0x06
    1c0a:	22 30       	cpi	r18, 0x02	; 2
    1c0c:	31 05       	cpc	r19, r1
    1c0e:	2c f4       	brge	.+10     	; 0x1c1a <TogglePort+0x44>
    1c10:	8d 81       	ldd	r24, Y+5	; 0x05
    1c12:	9e 81       	ldd	r25, Y+6	; 0x06
    1c14:	00 97       	sbiw	r24, 0x00	; 0
    1c16:	61 f0       	breq	.+24     	; 0x1c30 <TogglePort+0x5a>
    1c18:	2a c0       	rjmp	.+84     	; 0x1c6e <TogglePort+0x98>
    1c1a:	2d 81       	ldd	r18, Y+5	; 0x05
    1c1c:	3e 81       	ldd	r19, Y+6	; 0x06
    1c1e:	22 30       	cpi	r18, 0x02	; 2
    1c20:	31 05       	cpc	r19, r1
    1c22:	b1 f0       	breq	.+44     	; 0x1c50 <TogglePort+0x7a>
    1c24:	8d 81       	ldd	r24, Y+5	; 0x05
    1c26:	9e 81       	ldd	r25, Y+6	; 0x06
    1c28:	83 30       	cpi	r24, 0x03	; 3
    1c2a:	91 05       	cpc	r25, r1
    1c2c:	c9 f0       	breq	.+50     	; 0x1c60 <TogglePort+0x8a>
    1c2e:	1f c0       	rjmp	.+62     	; 0x1c6e <TogglePort+0x98>
			    	 {
			    	 case DIO_PORTA:
			    		 PORTA=~PORTA;
    1c30:	ab e3       	ldi	r26, 0x3B	; 59
    1c32:	b0 e0       	ldi	r27, 0x00	; 0
    1c34:	eb e3       	ldi	r30, 0x3B	; 59
    1c36:	f0 e0       	ldi	r31, 0x00	; 0
    1c38:	80 81       	ld	r24, Z
    1c3a:	80 95       	com	r24
    1c3c:	8c 93       	st	X, r24
    1c3e:	17 c0       	rjmp	.+46     	; 0x1c6e <TogglePort+0x98>
			    		 break;

			    	 case DIO_PORTB:
			    		 PORTB=~PORTB;
    1c40:	a8 e3       	ldi	r26, 0x38	; 56
    1c42:	b0 e0       	ldi	r27, 0x00	; 0
    1c44:	e8 e3       	ldi	r30, 0x38	; 56
    1c46:	f0 e0       	ldi	r31, 0x00	; 0
    1c48:	80 81       	ld	r24, Z
    1c4a:	80 95       	com	r24
    1c4c:	8c 93       	st	X, r24
    1c4e:	0f c0       	rjmp	.+30     	; 0x1c6e <TogglePort+0x98>

			    	    		 break;
			    	 case DIO_PORTC:
			    		 PORTC=~PORTC;
    1c50:	a5 e3       	ldi	r26, 0x35	; 53
    1c52:	b0 e0       	ldi	r27, 0x00	; 0
    1c54:	e5 e3       	ldi	r30, 0x35	; 53
    1c56:	f0 e0       	ldi	r31, 0x00	; 0
    1c58:	80 81       	ld	r24, Z
    1c5a:	80 95       	com	r24
    1c5c:	8c 93       	st	X, r24
    1c5e:	07 c0       	rjmp	.+14     	; 0x1c6e <TogglePort+0x98>

			    	    		 break;
			    	 case DIO_PORTD:
			    		PORTD=~PORTD;
    1c60:	a2 e3       	ldi	r26, 0x32	; 50
    1c62:	b0 e0       	ldi	r27, 0x00	; 0
    1c64:	e2 e3       	ldi	r30, 0x32	; 50
    1c66:	f0 e0       	ldi	r31, 0x00	; 0
    1c68:	80 81       	ld	r24, Z
    1c6a:	80 95       	com	r24
    1c6c:	8c 93       	st	X, r24

			    	    		 break;
			    	 }

			 		ES_t local_enumError=DIO_OK;
    1c6e:	1a 82       	std	Y+2, r1	; 0x02
    1c70:	02 c0       	rjmp	.+4      	; 0x1c76 <TogglePort+0xa0>

			     }

			     else
			     {
			    		ES_t local_enumError=OUT_OF_RANGE;
    1c72:	83 e0       	ldi	r24, 0x03	; 3
    1c74:	89 83       	std	Y+1, r24	; 0x01

			     }
			 return local_enumError;
    1c76:	8b 81       	ldd	r24, Y+3	; 0x03

	}
    1c78:	26 96       	adiw	r28, 0x06	; 6
    1c7a:	0f b6       	in	r0, 0x3f	; 63
    1c7c:	f8 94       	cli
    1c7e:	de bf       	out	0x3e, r29	; 62
    1c80:	0f be       	out	0x3f, r0	; 63
    1c82:	cd bf       	out	0x3d, r28	; 61
    1c84:	cf 91       	pop	r28
    1c86:	df 91       	pop	r29
    1c88:	08 95       	ret

00001c8a <GetPort>:

	ES_t GetPort(u8 copy_u8_PortId,u8 *copy_pu8_value)
{
    1c8a:	df 93       	push	r29
    1c8c:	cf 93       	push	r28
    1c8e:	cd b7       	in	r28, 0x3d	; 61
    1c90:	de b7       	in	r29, 0x3e	; 62
    1c92:	29 97       	sbiw	r28, 0x09	; 9
    1c94:	0f b6       	in	r0, 0x3f	; 63
    1c96:	f8 94       	cli
    1c98:	de bf       	out	0x3e, r29	; 62
    1c9a:	0f be       	out	0x3f, r0	; 63
    1c9c:	cd bf       	out	0x3d, r28	; 61
    1c9e:	8d 83       	std	Y+5, r24	; 0x05
    1ca0:	7f 83       	std	Y+7, r23	; 0x07
    1ca2:	6e 83       	std	Y+6, r22	; 0x06
		ES_t local_enumError=DIO_NOK;
    1ca4:	81 e0       	ldi	r24, 0x01	; 1
    1ca6:	8c 83       	std	Y+4, r24	; 0x04
if(copy_pu8_value!=NULL)
    1ca8:	8e 81       	ldd	r24, Y+6	; 0x06
    1caa:	9f 81       	ldd	r25, Y+7	; 0x07
    1cac:	00 97       	sbiw	r24, 0x00	; 0
    1cae:	09 f4       	brne	.+2      	; 0x1cb2 <GetPort+0x28>
    1cb0:	42 c0       	rjmp	.+132    	; 0x1d36 <GetPort+0xac>
{
	   if(copy_u8_PortId<=DIO_PORTD)
    1cb2:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb4:	84 30       	cpi	r24, 0x04	; 4
    1cb6:	e0 f5       	brcc	.+120    	; 0x1d30 <GetPort+0xa6>
	   {
		   switch(copy_u8_PortId)
    1cb8:	8d 81       	ldd	r24, Y+5	; 0x05
    1cba:	28 2f       	mov	r18, r24
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	39 87       	std	Y+9, r19	; 0x09
    1cc0:	28 87       	std	Y+8, r18	; 0x08
    1cc2:	88 85       	ldd	r24, Y+8	; 0x08
    1cc4:	99 85       	ldd	r25, Y+9	; 0x09
    1cc6:	81 30       	cpi	r24, 0x01	; 1
    1cc8:	91 05       	cpc	r25, r1
    1cca:	e1 f0       	breq	.+56     	; 0x1d04 <GetPort+0x7a>
    1ccc:	28 85       	ldd	r18, Y+8	; 0x08
    1cce:	39 85       	ldd	r19, Y+9	; 0x09
    1cd0:	22 30       	cpi	r18, 0x02	; 2
    1cd2:	31 05       	cpc	r19, r1
    1cd4:	2c f4       	brge	.+10     	; 0x1ce0 <GetPort+0x56>
    1cd6:	88 85       	ldd	r24, Y+8	; 0x08
    1cd8:	99 85       	ldd	r25, Y+9	; 0x09
    1cda:	00 97       	sbiw	r24, 0x00	; 0
    1cdc:	61 f0       	breq	.+24     	; 0x1cf6 <GetPort+0x6c>
    1cde:	26 c0       	rjmp	.+76     	; 0x1d2c <GetPort+0xa2>
    1ce0:	28 85       	ldd	r18, Y+8	; 0x08
    1ce2:	39 85       	ldd	r19, Y+9	; 0x09
    1ce4:	22 30       	cpi	r18, 0x02	; 2
    1ce6:	31 05       	cpc	r19, r1
    1ce8:	a1 f0       	breq	.+40     	; 0x1d12 <GetPort+0x88>
    1cea:	88 85       	ldd	r24, Y+8	; 0x08
    1cec:	99 85       	ldd	r25, Y+9	; 0x09
    1cee:	83 30       	cpi	r24, 0x03	; 3
    1cf0:	91 05       	cpc	r25, r1
    1cf2:	b1 f0       	breq	.+44     	; 0x1d20 <GetPort+0x96>
    1cf4:	1b c0       	rjmp	.+54     	; 0x1d2c <GetPort+0xa2>
		   {
		   case DIO_PORTA:
			   *copy_pu8_value=PINA;
    1cf6:	e9 e3       	ldi	r30, 0x39	; 57
    1cf8:	f0 e0       	ldi	r31, 0x00	; 0
    1cfa:	80 81       	ld	r24, Z
    1cfc:	ee 81       	ldd	r30, Y+6	; 0x06
    1cfe:	ff 81       	ldd	r31, Y+7	; 0x07
    1d00:	80 83       	st	Z, r24
    1d02:	14 c0       	rjmp	.+40     	; 0x1d2c <GetPort+0xa2>
			   break;

		       case DIO_PORTB:
		  			   *copy_pu8_value=PINB;
    1d04:	e6 e3       	ldi	r30, 0x36	; 54
    1d06:	f0 e0       	ldi	r31, 0x00	; 0
    1d08:	80 81       	ld	r24, Z
    1d0a:	ee 81       	ldd	r30, Y+6	; 0x06
    1d0c:	ff 81       	ldd	r31, Y+7	; 0x07
    1d0e:	80 83       	st	Z, r24
    1d10:	0d c0       	rjmp	.+26     	; 0x1d2c <GetPort+0xa2>
		  			  break;

		  			   case DIO_PORTC:
		  				   *copy_pu8_value=PINC;
    1d12:	e3 e3       	ldi	r30, 0x33	; 51
    1d14:	f0 e0       	ldi	r31, 0x00	; 0
    1d16:	80 81       	ld	r24, Z
    1d18:	ee 81       	ldd	r30, Y+6	; 0x06
    1d1a:	ff 81       	ldd	r31, Y+7	; 0x07
    1d1c:	80 83       	st	Z, r24
    1d1e:	06 c0       	rjmp	.+12     	; 0x1d2c <GetPort+0xa2>
		  				   break;

		  				   case DIO_PORTD:
		  					   *copy_pu8_value=PIND;
    1d20:	e0 e3       	ldi	r30, 0x30	; 48
    1d22:	f0 e0       	ldi	r31, 0x00	; 0
    1d24:	80 81       	ld	r24, Z
    1d26:	ee 81       	ldd	r30, Y+6	; 0x06
    1d28:	ff 81       	ldd	r31, Y+7	; 0x07
    1d2a:	80 83       	st	Z, r24
		  					   break;

		   }

			ES_t local_enumError=DIO_OK;
    1d2c:	1b 82       	std	Y+3, r1	; 0x03
    1d2e:	05 c0       	rjmp	.+10     	; 0x1d3a <GetPort+0xb0>

	   }
	   else
	   {
			ES_t local_enumError=OUT_OF_RANGE;
    1d30:	83 e0       	ldi	r24, 0x03	; 3
    1d32:	8a 83       	std	Y+2, r24	; 0x02
    1d34:	02 c0       	rjmp	.+4      	; 0x1d3a <GetPort+0xb0>
	   }

}
else
{
	ES_t local_enumError=DIO_NULLPOINTER;
    1d36:	82 e0       	ldi	r24, 0x02	; 2
    1d38:	89 83       	std	Y+1, r24	; 0x01
}

			 return local_enumError;
    1d3a:	8c 81       	ldd	r24, Y+4	; 0x04

}
    1d3c:	29 96       	adiw	r28, 0x09	; 9
    1d3e:	0f b6       	in	r0, 0x3f	; 63
    1d40:	f8 94       	cli
    1d42:	de bf       	out	0x3e, r29	; 62
    1d44:	0f be       	out	0x3f, r0	; 63
    1d46:	cd bf       	out	0x3d, r28	; 61
    1d48:	cf 91       	pop	r28
    1d4a:	df 91       	pop	r29
    1d4c:	08 95       	ret

00001d4e <Setpin_Direction>:

	ES_t Setpin_Direction(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 copy_u8_value)
{
    1d4e:	df 93       	push	r29
    1d50:	cf 93       	push	r28
    1d52:	cd b7       	in	r28, 0x3d	; 61
    1d54:	de b7       	in	r29, 0x3e	; 62
    1d56:	28 97       	sbiw	r28, 0x08	; 8
    1d58:	0f b6       	in	r0, 0x3f	; 63
    1d5a:	f8 94       	cli
    1d5c:	de bf       	out	0x3e, r29	; 62
    1d5e:	0f be       	out	0x3f, r0	; 63
    1d60:	cd bf       	out	0x3d, r28	; 61
    1d62:	8c 83       	std	Y+4, r24	; 0x04
    1d64:	6d 83       	std	Y+5, r22	; 0x05
    1d66:	4e 83       	std	Y+6, r20	; 0x06
		ES_t local_enumError=DIO_NOK;
    1d68:	81 e0       	ldi	r24, 0x01	; 1
    1d6a:	8b 83       	std	Y+3, r24	; 0x03
		if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7&&copy_u8_value<=OUTPUT)
    1d6c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d6e:	84 30       	cpi	r24, 0x04	; 4
    1d70:	08 f0       	brcs	.+2      	; 0x1d74 <Setpin_Direction+0x26>
    1d72:	d0 c0       	rjmp	.+416    	; 0x1f14 <Setpin_Direction+0x1c6>
    1d74:	8d 81       	ldd	r24, Y+5	; 0x05
    1d76:	88 30       	cpi	r24, 0x08	; 8
    1d78:	08 f0       	brcs	.+2      	; 0x1d7c <Setpin_Direction+0x2e>
    1d7a:	cc c0       	rjmp	.+408    	; 0x1f14 <Setpin_Direction+0x1c6>
    1d7c:	8e 81       	ldd	r24, Y+6	; 0x06
    1d7e:	82 30       	cpi	r24, 0x02	; 2
    1d80:	08 f0       	brcs	.+2      	; 0x1d84 <Setpin_Direction+0x36>
    1d82:	c8 c0       	rjmp	.+400    	; 0x1f14 <Setpin_Direction+0x1c6>
		{
			switch(copy_u8_PortId)
    1d84:	8c 81       	ldd	r24, Y+4	; 0x04
    1d86:	28 2f       	mov	r18, r24
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	38 87       	std	Y+8, r19	; 0x08
    1d8c:	2f 83       	std	Y+7, r18	; 0x07
    1d8e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d90:	78 85       	ldd	r23, Y+8	; 0x08
    1d92:	61 30       	cpi	r22, 0x01	; 1
    1d94:	71 05       	cpc	r23, r1
    1d96:	09 f4       	brne	.+2      	; 0x1d9a <Setpin_Direction+0x4c>
    1d98:	41 c0       	rjmp	.+130    	; 0x1e1c <Setpin_Direction+0xce>
    1d9a:	8f 81       	ldd	r24, Y+7	; 0x07
    1d9c:	98 85       	ldd	r25, Y+8	; 0x08
    1d9e:	82 30       	cpi	r24, 0x02	; 2
    1da0:	91 05       	cpc	r25, r1
    1da2:	34 f4       	brge	.+12     	; 0x1db0 <Setpin_Direction+0x62>
    1da4:	2f 81       	ldd	r18, Y+7	; 0x07
    1da6:	38 85       	ldd	r19, Y+8	; 0x08
    1da8:	21 15       	cp	r18, r1
    1daa:	31 05       	cpc	r19, r1
    1dac:	71 f0       	breq	.+28     	; 0x1dca <Setpin_Direction+0x7c>
    1dae:	b0 c0       	rjmp	.+352    	; 0x1f10 <Setpin_Direction+0x1c2>
    1db0:	6f 81       	ldd	r22, Y+7	; 0x07
    1db2:	78 85       	ldd	r23, Y+8	; 0x08
    1db4:	62 30       	cpi	r22, 0x02	; 2
    1db6:	71 05       	cpc	r23, r1
    1db8:	09 f4       	brne	.+2      	; 0x1dbc <Setpin_Direction+0x6e>
    1dba:	59 c0       	rjmp	.+178    	; 0x1e6e <Setpin_Direction+0x120>
    1dbc:	8f 81       	ldd	r24, Y+7	; 0x07
    1dbe:	98 85       	ldd	r25, Y+8	; 0x08
    1dc0:	83 30       	cpi	r24, 0x03	; 3
    1dc2:	91 05       	cpc	r25, r1
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <Setpin_Direction+0x7a>
    1dc6:	7c c0       	rjmp	.+248    	; 0x1ec0 <Setpin_Direction+0x172>
    1dc8:	a3 c0       	rjmp	.+326    	; 0x1f10 <Setpin_Direction+0x1c2>
					   {
		 case DIO_PORTA:
			 DDRA &=~(1<<copy_u8_PIN_Id);
    1dca:	aa e3       	ldi	r26, 0x3A	; 58
    1dcc:	b0 e0       	ldi	r27, 0x00	; 0
    1dce:	ea e3       	ldi	r30, 0x3A	; 58
    1dd0:	f0 e0       	ldi	r31, 0x00	; 0
    1dd2:	80 81       	ld	r24, Z
    1dd4:	48 2f       	mov	r20, r24
    1dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd8:	28 2f       	mov	r18, r24
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	02 c0       	rjmp	.+4      	; 0x1de6 <Setpin_Direction+0x98>
    1de2:	88 0f       	add	r24, r24
    1de4:	99 1f       	adc	r25, r25
    1de6:	2a 95       	dec	r18
    1de8:	e2 f7       	brpl	.-8      	; 0x1de2 <Setpin_Direction+0x94>
    1dea:	80 95       	com	r24
    1dec:	84 23       	and	r24, r20
    1dee:	8c 93       	st	X, r24
			 DDRA |=(copy_u8_value<<copy_u8_PIN_Id);
    1df0:	aa e3       	ldi	r26, 0x3A	; 58
    1df2:	b0 e0       	ldi	r27, 0x00	; 0
    1df4:	ea e3       	ldi	r30, 0x3A	; 58
    1df6:	f0 e0       	ldi	r31, 0x00	; 0
    1df8:	80 81       	ld	r24, Z
    1dfa:	48 2f       	mov	r20, r24
    1dfc:	8e 81       	ldd	r24, Y+6	; 0x06
    1dfe:	28 2f       	mov	r18, r24
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	8d 81       	ldd	r24, Y+5	; 0x05
    1e04:	88 2f       	mov	r24, r24
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	b9 01       	movw	r22, r18
    1e0a:	02 c0       	rjmp	.+4      	; 0x1e10 <Setpin_Direction+0xc2>
    1e0c:	66 0f       	add	r22, r22
    1e0e:	77 1f       	adc	r23, r23
    1e10:	8a 95       	dec	r24
    1e12:	e2 f7       	brpl	.-8      	; 0x1e0c <Setpin_Direction+0xbe>
    1e14:	cb 01       	movw	r24, r22
    1e16:	84 2b       	or	r24, r20
    1e18:	8c 93       	st	X, r24
    1e1a:	7a c0       	rjmp	.+244    	; 0x1f10 <Setpin_Direction+0x1c2>
	 	                break;
	     case DIO_PORTB:
	    	  DDRB &=~(1<<copy_u8_PIN_Id);
    1e1c:	a7 e3       	ldi	r26, 0x37	; 55
    1e1e:	b0 e0       	ldi	r27, 0x00	; 0
    1e20:	e7 e3       	ldi	r30, 0x37	; 55
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	48 2f       	mov	r20, r24
    1e28:	8d 81       	ldd	r24, Y+5	; 0x05
    1e2a:	28 2f       	mov	r18, r24
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	02 c0       	rjmp	.+4      	; 0x1e38 <Setpin_Direction+0xea>
    1e34:	88 0f       	add	r24, r24
    1e36:	99 1f       	adc	r25, r25
    1e38:	2a 95       	dec	r18
    1e3a:	e2 f7       	brpl	.-8      	; 0x1e34 <Setpin_Direction+0xe6>
    1e3c:	80 95       	com	r24
    1e3e:	84 23       	and	r24, r20
    1e40:	8c 93       	st	X, r24
	    				 DDRB |=(copy_u8_value<<copy_u8_PIN_Id);
    1e42:	a7 e3       	ldi	r26, 0x37	; 55
    1e44:	b0 e0       	ldi	r27, 0x00	; 0
    1e46:	e7 e3       	ldi	r30, 0x37	; 55
    1e48:	f0 e0       	ldi	r31, 0x00	; 0
    1e4a:	80 81       	ld	r24, Z
    1e4c:	48 2f       	mov	r20, r24
    1e4e:	8e 81       	ldd	r24, Y+6	; 0x06
    1e50:	28 2f       	mov	r18, r24
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	8d 81       	ldd	r24, Y+5	; 0x05
    1e56:	88 2f       	mov	r24, r24
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	b9 01       	movw	r22, r18
    1e5c:	02 c0       	rjmp	.+4      	; 0x1e62 <Setpin_Direction+0x114>
    1e5e:	66 0f       	add	r22, r22
    1e60:	77 1f       	adc	r23, r23
    1e62:	8a 95       	dec	r24
    1e64:	e2 f7       	brpl	.-8      	; 0x1e5e <Setpin_Direction+0x110>
    1e66:	cb 01       	movw	r24, r22
    1e68:	84 2b       	or	r24, r20
    1e6a:	8c 93       	st	X, r24
    1e6c:	51 c0       	rjmp	.+162    	; 0x1f10 <Setpin_Direction+0x1c2>
	  	            break;
	     case DIO_PORTC:
	    	 DDRC &=~(1<<copy_u8_PIN_Id);
    1e6e:	a4 e3       	ldi	r26, 0x34	; 52
    1e70:	b0 e0       	ldi	r27, 0x00	; 0
    1e72:	e4 e3       	ldi	r30, 0x34	; 52
    1e74:	f0 e0       	ldi	r31, 0x00	; 0
    1e76:	80 81       	ld	r24, Z
    1e78:	48 2f       	mov	r20, r24
    1e7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1e7c:	28 2f       	mov	r18, r24
    1e7e:	30 e0       	ldi	r19, 0x00	; 0
    1e80:	81 e0       	ldi	r24, 0x01	; 1
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	02 c0       	rjmp	.+4      	; 0x1e8a <Setpin_Direction+0x13c>
    1e86:	88 0f       	add	r24, r24
    1e88:	99 1f       	adc	r25, r25
    1e8a:	2a 95       	dec	r18
    1e8c:	e2 f7       	brpl	.-8      	; 0x1e86 <Setpin_Direction+0x138>
    1e8e:	80 95       	com	r24
    1e90:	84 23       	and	r24, r20
    1e92:	8c 93       	st	X, r24
	    				 DDRC |=(copy_u8_value<<copy_u8_PIN_Id);
    1e94:	a4 e3       	ldi	r26, 0x34	; 52
    1e96:	b0 e0       	ldi	r27, 0x00	; 0
    1e98:	e4 e3       	ldi	r30, 0x34	; 52
    1e9a:	f0 e0       	ldi	r31, 0x00	; 0
    1e9c:	80 81       	ld	r24, Z
    1e9e:	48 2f       	mov	r20, r24
    1ea0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ea2:	28 2f       	mov	r18, r24
    1ea4:	30 e0       	ldi	r19, 0x00	; 0
    1ea6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea8:	88 2f       	mov	r24, r24
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	b9 01       	movw	r22, r18
    1eae:	02 c0       	rjmp	.+4      	; 0x1eb4 <Setpin_Direction+0x166>
    1eb0:	66 0f       	add	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	8a 95       	dec	r24
    1eb6:	e2 f7       	brpl	.-8      	; 0x1eb0 <Setpin_Direction+0x162>
    1eb8:	cb 01       	movw	r24, r22
    1eba:	84 2b       	or	r24, r20
    1ebc:	8c 93       	st	X, r24
    1ebe:	28 c0       	rjmp	.+80     	; 0x1f10 <Setpin_Direction+0x1c2>
	 	 			   break;

	    case DIO_PORTD:
	    	 DDRD &=~(1<<copy_u8_PIN_Id);
    1ec0:	a1 e3       	ldi	r26, 0x31	; 49
    1ec2:	b0 e0       	ldi	r27, 0x00	; 0
    1ec4:	e1 e3       	ldi	r30, 0x31	; 49
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	80 81       	ld	r24, Z
    1eca:	48 2f       	mov	r20, r24
    1ecc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ece:	28 2f       	mov	r18, r24
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	81 e0       	ldi	r24, 0x01	; 1
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	02 c0       	rjmp	.+4      	; 0x1edc <Setpin_Direction+0x18e>
    1ed8:	88 0f       	add	r24, r24
    1eda:	99 1f       	adc	r25, r25
    1edc:	2a 95       	dec	r18
    1ede:	e2 f7       	brpl	.-8      	; 0x1ed8 <Setpin_Direction+0x18a>
    1ee0:	80 95       	com	r24
    1ee2:	84 23       	and	r24, r20
    1ee4:	8c 93       	st	X, r24
	    				 DDRD |=(copy_u8_value<<copy_u8_PIN_Id);
    1ee6:	a1 e3       	ldi	r26, 0x31	; 49
    1ee8:	b0 e0       	ldi	r27, 0x00	; 0
    1eea:	e1 e3       	ldi	r30, 0x31	; 49
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	80 81       	ld	r24, Z
    1ef0:	48 2f       	mov	r20, r24
    1ef2:	8e 81       	ldd	r24, Y+6	; 0x06
    1ef4:	28 2f       	mov	r18, r24
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	8d 81       	ldd	r24, Y+5	; 0x05
    1efa:	88 2f       	mov	r24, r24
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	b9 01       	movw	r22, r18
    1f00:	02 c0       	rjmp	.+4      	; 0x1f06 <Setpin_Direction+0x1b8>
    1f02:	66 0f       	add	r22, r22
    1f04:	77 1f       	adc	r23, r23
    1f06:	8a 95       	dec	r24
    1f08:	e2 f7       	brpl	.-8      	; 0x1f02 <Setpin_Direction+0x1b4>
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	84 2b       	or	r24, r20
    1f0e:	8c 93       	st	X, r24
					   break;

					   }

			ES_t local_enumError=DIO_OK;
    1f10:	1a 82       	std	Y+2, r1	; 0x02
    1f12:	02 c0       	rjmp	.+4      	; 0x1f18 <Setpin_Direction+0x1ca>

		}
		else
		{
			ES_t local_enumError=OUT_OF_RANGE;
    1f14:	83 e0       	ldi	r24, 0x03	; 3
    1f16:	89 83       	std	Y+1, r24	; 0x01

		}


			 return local_enumError;
    1f18:	8b 81       	ldd	r24, Y+3	; 0x03

}
    1f1a:	28 96       	adiw	r28, 0x08	; 8
    1f1c:	0f b6       	in	r0, 0x3f	; 63
    1f1e:	f8 94       	cli
    1f20:	de bf       	out	0x3e, r29	; 62
    1f22:	0f be       	out	0x3f, r0	; 63
    1f24:	cd bf       	out	0x3d, r28	; 61
    1f26:	cf 91       	pop	r28
    1f28:	df 91       	pop	r29
    1f2a:	08 95       	ret

00001f2c <Setpin_value>:
	ES_t Setpin_value(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 copy_u8_value)
{
    1f2c:	df 93       	push	r29
    1f2e:	cf 93       	push	r28
    1f30:	cd b7       	in	r28, 0x3d	; 61
    1f32:	de b7       	in	r29, 0x3e	; 62
    1f34:	28 97       	sbiw	r28, 0x08	; 8
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	f8 94       	cli
    1f3a:	de bf       	out	0x3e, r29	; 62
    1f3c:	0f be       	out	0x3f, r0	; 63
    1f3e:	cd bf       	out	0x3d, r28	; 61
    1f40:	8c 83       	std	Y+4, r24	; 0x04
    1f42:	6d 83       	std	Y+5, r22	; 0x05
    1f44:	4e 83       	std	Y+6, r20	; 0x06
		ES_t local_enumError=DIO_NOK;
    1f46:	81 e0       	ldi	r24, 0x01	; 1
    1f48:	8b 83       	std	Y+3, r24	; 0x03
					if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7&&copy_u8_value<=OUTPUT)
    1f4a:	8c 81       	ldd	r24, Y+4	; 0x04
    1f4c:	84 30       	cpi	r24, 0x04	; 4
    1f4e:	08 f0       	brcs	.+2      	; 0x1f52 <Setpin_value+0x26>
    1f50:	d0 c0       	rjmp	.+416    	; 0x20f2 <Setpin_value+0x1c6>
    1f52:	8d 81       	ldd	r24, Y+5	; 0x05
    1f54:	88 30       	cpi	r24, 0x08	; 8
    1f56:	08 f0       	brcs	.+2      	; 0x1f5a <Setpin_value+0x2e>
    1f58:	cc c0       	rjmp	.+408    	; 0x20f2 <Setpin_value+0x1c6>
    1f5a:	8e 81       	ldd	r24, Y+6	; 0x06
    1f5c:	82 30       	cpi	r24, 0x02	; 2
    1f5e:	08 f0       	brcs	.+2      	; 0x1f62 <Setpin_value+0x36>
    1f60:	c8 c0       	rjmp	.+400    	; 0x20f2 <Setpin_value+0x1c6>
					{
						switch(copy_u8_PortId)
    1f62:	8c 81       	ldd	r24, Y+4	; 0x04
    1f64:	28 2f       	mov	r18, r24
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	38 87       	std	Y+8, r19	; 0x08
    1f6a:	2f 83       	std	Y+7, r18	; 0x07
    1f6c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f6e:	78 85       	ldd	r23, Y+8	; 0x08
    1f70:	61 30       	cpi	r22, 0x01	; 1
    1f72:	71 05       	cpc	r23, r1
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <Setpin_value+0x4c>
    1f76:	41 c0       	rjmp	.+130    	; 0x1ffa <Setpin_value+0xce>
    1f78:	8f 81       	ldd	r24, Y+7	; 0x07
    1f7a:	98 85       	ldd	r25, Y+8	; 0x08
    1f7c:	82 30       	cpi	r24, 0x02	; 2
    1f7e:	91 05       	cpc	r25, r1
    1f80:	34 f4       	brge	.+12     	; 0x1f8e <Setpin_value+0x62>
    1f82:	2f 81       	ldd	r18, Y+7	; 0x07
    1f84:	38 85       	ldd	r19, Y+8	; 0x08
    1f86:	21 15       	cp	r18, r1
    1f88:	31 05       	cpc	r19, r1
    1f8a:	71 f0       	breq	.+28     	; 0x1fa8 <Setpin_value+0x7c>
    1f8c:	b0 c0       	rjmp	.+352    	; 0x20ee <Setpin_value+0x1c2>
    1f8e:	6f 81       	ldd	r22, Y+7	; 0x07
    1f90:	78 85       	ldd	r23, Y+8	; 0x08
    1f92:	62 30       	cpi	r22, 0x02	; 2
    1f94:	71 05       	cpc	r23, r1
    1f96:	09 f4       	brne	.+2      	; 0x1f9a <Setpin_value+0x6e>
    1f98:	59 c0       	rjmp	.+178    	; 0x204c <Setpin_value+0x120>
    1f9a:	8f 81       	ldd	r24, Y+7	; 0x07
    1f9c:	98 85       	ldd	r25, Y+8	; 0x08
    1f9e:	83 30       	cpi	r24, 0x03	; 3
    1fa0:	91 05       	cpc	r25, r1
    1fa2:	09 f4       	brne	.+2      	; 0x1fa6 <Setpin_value+0x7a>
    1fa4:	7c c0       	rjmp	.+248    	; 0x209e <Setpin_value+0x172>
    1fa6:	a3 c0       	rjmp	.+326    	; 0x20ee <Setpin_value+0x1c2>
								   {
					 case DIO_PORTA:
						 PORTA &=~(1<<copy_u8_PIN_Id);
    1fa8:	ab e3       	ldi	r26, 0x3B	; 59
    1faa:	b0 e0       	ldi	r27, 0x00	; 0
    1fac:	eb e3       	ldi	r30, 0x3B	; 59
    1fae:	f0 e0       	ldi	r31, 0x00	; 0
    1fb0:	80 81       	ld	r24, Z
    1fb2:	48 2f       	mov	r20, r24
    1fb4:	8d 81       	ldd	r24, Y+5	; 0x05
    1fb6:	28 2f       	mov	r18, r24
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	81 e0       	ldi	r24, 0x01	; 1
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	02 c0       	rjmp	.+4      	; 0x1fc4 <Setpin_value+0x98>
    1fc0:	88 0f       	add	r24, r24
    1fc2:	99 1f       	adc	r25, r25
    1fc4:	2a 95       	dec	r18
    1fc6:	e2 f7       	brpl	.-8      	; 0x1fc0 <Setpin_value+0x94>
    1fc8:	80 95       	com	r24
    1fca:	84 23       	and	r24, r20
    1fcc:	8c 93       	st	X, r24
						 PORTA |=(copy_u8_value<<copy_u8_PIN_Id);
    1fce:	ab e3       	ldi	r26, 0x3B	; 59
    1fd0:	b0 e0       	ldi	r27, 0x00	; 0
    1fd2:	eb e3       	ldi	r30, 0x3B	; 59
    1fd4:	f0 e0       	ldi	r31, 0x00	; 0
    1fd6:	80 81       	ld	r24, Z
    1fd8:	48 2f       	mov	r20, r24
    1fda:	8e 81       	ldd	r24, Y+6	; 0x06
    1fdc:	28 2f       	mov	r18, r24
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fe2:	88 2f       	mov	r24, r24
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	b9 01       	movw	r22, r18
    1fe8:	02 c0       	rjmp	.+4      	; 0x1fee <Setpin_value+0xc2>
    1fea:	66 0f       	add	r22, r22
    1fec:	77 1f       	adc	r23, r23
    1fee:	8a 95       	dec	r24
    1ff0:	e2 f7       	brpl	.-8      	; 0x1fea <Setpin_value+0xbe>
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	84 2b       	or	r24, r20
    1ff6:	8c 93       	st	X, r24
    1ff8:	7a c0       	rjmp	.+244    	; 0x20ee <Setpin_value+0x1c2>
				 	                break;
				     case DIO_PORTB:
				    	 PORTB &=~(1<<copy_u8_PIN_Id);
    1ffa:	a8 e3       	ldi	r26, 0x38	; 56
    1ffc:	b0 e0       	ldi	r27, 0x00	; 0
    1ffe:	e8 e3       	ldi	r30, 0x38	; 56
    2000:	f0 e0       	ldi	r31, 0x00	; 0
    2002:	80 81       	ld	r24, Z
    2004:	48 2f       	mov	r20, r24
    2006:	8d 81       	ldd	r24, Y+5	; 0x05
    2008:	28 2f       	mov	r18, r24
    200a:	30 e0       	ldi	r19, 0x00	; 0
    200c:	81 e0       	ldi	r24, 0x01	; 1
    200e:	90 e0       	ldi	r25, 0x00	; 0
    2010:	02 c0       	rjmp	.+4      	; 0x2016 <Setpin_value+0xea>
    2012:	88 0f       	add	r24, r24
    2014:	99 1f       	adc	r25, r25
    2016:	2a 95       	dec	r18
    2018:	e2 f7       	brpl	.-8      	; 0x2012 <Setpin_value+0xe6>
    201a:	80 95       	com	r24
    201c:	84 23       	and	r24, r20
    201e:	8c 93       	st	X, r24
				    	 PORTB |=(copy_u8_value<<copy_u8_PIN_Id);
    2020:	a8 e3       	ldi	r26, 0x38	; 56
    2022:	b0 e0       	ldi	r27, 0x00	; 0
    2024:	e8 e3       	ldi	r30, 0x38	; 56
    2026:	f0 e0       	ldi	r31, 0x00	; 0
    2028:	80 81       	ld	r24, Z
    202a:	48 2f       	mov	r20, r24
    202c:	8e 81       	ldd	r24, Y+6	; 0x06
    202e:	28 2f       	mov	r18, r24
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	8d 81       	ldd	r24, Y+5	; 0x05
    2034:	88 2f       	mov	r24, r24
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	b9 01       	movw	r22, r18
    203a:	02 c0       	rjmp	.+4      	; 0x2040 <Setpin_value+0x114>
    203c:	66 0f       	add	r22, r22
    203e:	77 1f       	adc	r23, r23
    2040:	8a 95       	dec	r24
    2042:	e2 f7       	brpl	.-8      	; 0x203c <Setpin_value+0x110>
    2044:	cb 01       	movw	r24, r22
    2046:	84 2b       	or	r24, r20
    2048:	8c 93       	st	X, r24
    204a:	51 c0       	rjmp	.+162    	; 0x20ee <Setpin_value+0x1c2>
				  	            break;
				     case DIO_PORTC:
				    	 PORTC &=~(1<<copy_u8_PIN_Id);
    204c:	a5 e3       	ldi	r26, 0x35	; 53
    204e:	b0 e0       	ldi	r27, 0x00	; 0
    2050:	e5 e3       	ldi	r30, 0x35	; 53
    2052:	f0 e0       	ldi	r31, 0x00	; 0
    2054:	80 81       	ld	r24, Z
    2056:	48 2f       	mov	r20, r24
    2058:	8d 81       	ldd	r24, Y+5	; 0x05
    205a:	28 2f       	mov	r18, r24
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	02 c0       	rjmp	.+4      	; 0x2068 <Setpin_value+0x13c>
    2064:	88 0f       	add	r24, r24
    2066:	99 1f       	adc	r25, r25
    2068:	2a 95       	dec	r18
    206a:	e2 f7       	brpl	.-8      	; 0x2064 <Setpin_value+0x138>
    206c:	80 95       	com	r24
    206e:	84 23       	and	r24, r20
    2070:	8c 93       	st	X, r24
				    	 PORTC |=(copy_u8_value<<copy_u8_PIN_Id);
    2072:	a5 e3       	ldi	r26, 0x35	; 53
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	e5 e3       	ldi	r30, 0x35	; 53
    2078:	f0 e0       	ldi	r31, 0x00	; 0
    207a:	80 81       	ld	r24, Z
    207c:	48 2f       	mov	r20, r24
    207e:	8e 81       	ldd	r24, Y+6	; 0x06
    2080:	28 2f       	mov	r18, r24
    2082:	30 e0       	ldi	r19, 0x00	; 0
    2084:	8d 81       	ldd	r24, Y+5	; 0x05
    2086:	88 2f       	mov	r24, r24
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	b9 01       	movw	r22, r18
    208c:	02 c0       	rjmp	.+4      	; 0x2092 <Setpin_value+0x166>
    208e:	66 0f       	add	r22, r22
    2090:	77 1f       	adc	r23, r23
    2092:	8a 95       	dec	r24
    2094:	e2 f7       	brpl	.-8      	; 0x208e <Setpin_value+0x162>
    2096:	cb 01       	movw	r24, r22
    2098:	84 2b       	or	r24, r20
    209a:	8c 93       	st	X, r24
    209c:	28 c0       	rjmp	.+80     	; 0x20ee <Setpin_value+0x1c2>
				 	 			   break;

				    case DIO_PORTD:
				    	PORTD &=~(1<<copy_u8_PIN_Id);
    209e:	a2 e3       	ldi	r26, 0x32	; 50
    20a0:	b0 e0       	ldi	r27, 0x00	; 0
    20a2:	e2 e3       	ldi	r30, 0x32	; 50
    20a4:	f0 e0       	ldi	r31, 0x00	; 0
    20a6:	80 81       	ld	r24, Z
    20a8:	48 2f       	mov	r20, r24
    20aa:	8d 81       	ldd	r24, Y+5	; 0x05
    20ac:	28 2f       	mov	r18, r24
    20ae:	30 e0       	ldi	r19, 0x00	; 0
    20b0:	81 e0       	ldi	r24, 0x01	; 1
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	02 c0       	rjmp	.+4      	; 0x20ba <Setpin_value+0x18e>
    20b6:	88 0f       	add	r24, r24
    20b8:	99 1f       	adc	r25, r25
    20ba:	2a 95       	dec	r18
    20bc:	e2 f7       	brpl	.-8      	; 0x20b6 <Setpin_value+0x18a>
    20be:	80 95       	com	r24
    20c0:	84 23       	and	r24, r20
    20c2:	8c 93       	st	X, r24
				    	PORTD |=(copy_u8_value<<copy_u8_PIN_Id);
    20c4:	a2 e3       	ldi	r26, 0x32	; 50
    20c6:	b0 e0       	ldi	r27, 0x00	; 0
    20c8:	e2 e3       	ldi	r30, 0x32	; 50
    20ca:	f0 e0       	ldi	r31, 0x00	; 0
    20cc:	80 81       	ld	r24, Z
    20ce:	48 2f       	mov	r20, r24
    20d0:	8e 81       	ldd	r24, Y+6	; 0x06
    20d2:	28 2f       	mov	r18, r24
    20d4:	30 e0       	ldi	r19, 0x00	; 0
    20d6:	8d 81       	ldd	r24, Y+5	; 0x05
    20d8:	88 2f       	mov	r24, r24
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	b9 01       	movw	r22, r18
    20de:	02 c0       	rjmp	.+4      	; 0x20e4 <Setpin_value+0x1b8>
    20e0:	66 0f       	add	r22, r22
    20e2:	77 1f       	adc	r23, r23
    20e4:	8a 95       	dec	r24
    20e6:	e2 f7       	brpl	.-8      	; 0x20e0 <Setpin_value+0x1b4>
    20e8:	cb 01       	movw	r24, r22
    20ea:	84 2b       	or	r24, r20
    20ec:	8c 93       	st	X, r24
								   break;

								   }

						ES_t local_enumError=DIO_OK;
    20ee:	1a 82       	std	Y+2, r1	; 0x02
    20f0:	02 c0       	rjmp	.+4      	; 0x20f6 <Setpin_value+0x1ca>

					}
					else
					{
						ES_t local_enumError=OUT_OF_RANGE;
    20f2:	83 e0       	ldi	r24, 0x03	; 3
    20f4:	89 83       	std	Y+1, r24	; 0x01

					}


						 return local_enumError;
    20f6:	8b 81       	ldd	r24, Y+3	; 0x03

			}
    20f8:	28 96       	adiw	r28, 0x08	; 8
    20fa:	0f b6       	in	r0, 0x3f	; 63
    20fc:	f8 94       	cli
    20fe:	de bf       	out	0x3e, r29	; 62
    2100:	0f be       	out	0x3f, r0	; 63
    2102:	cd bf       	out	0x3d, r28	; 61
    2104:	cf 91       	pop	r28
    2106:	df 91       	pop	r29
    2108:	08 95       	ret

0000210a <TogglePIN>:

	ES_t TogglePIN(u8 copy_u8_PortId,u8  copy_u8_PIN_Id)
				{
    210a:	df 93       	push	r29
    210c:	cf 93       	push	r28
    210e:	cd b7       	in	r28, 0x3d	; 61
    2110:	de b7       	in	r29, 0x3e	; 62
    2112:	27 97       	sbiw	r28, 0x07	; 7
    2114:	0f b6       	in	r0, 0x3f	; 63
    2116:	f8 94       	cli
    2118:	de bf       	out	0x3e, r29	; 62
    211a:	0f be       	out	0x3f, r0	; 63
    211c:	cd bf       	out	0x3d, r28	; 61
    211e:	8c 83       	std	Y+4, r24	; 0x04
    2120:	6d 83       	std	Y+5, r22	; 0x05
					ES_t local_enumError=DIO_NOK;
    2122:	81 e0       	ldi	r24, 0x01	; 1
    2124:	8b 83       	std	Y+3, r24	; 0x03

					if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7)
    2126:	8c 81       	ldd	r24, Y+4	; 0x04
    2128:	84 30       	cpi	r24, 0x04	; 4
    212a:	08 f0       	brcs	.+2      	; 0x212e <TogglePIN+0x24>
    212c:	74 c0       	rjmp	.+232    	; 0x2216 <TogglePIN+0x10c>
    212e:	8d 81       	ldd	r24, Y+5	; 0x05
    2130:	88 30       	cpi	r24, 0x08	; 8
    2132:	08 f0       	brcs	.+2      	; 0x2136 <TogglePIN+0x2c>
    2134:	70 c0       	rjmp	.+224    	; 0x2216 <TogglePIN+0x10c>
					{

						 switch(copy_u8_PortId)
    2136:	8c 81       	ldd	r24, Y+4	; 0x04
    2138:	28 2f       	mov	r18, r24
    213a:	30 e0       	ldi	r19, 0x00	; 0
    213c:	3f 83       	std	Y+7, r19	; 0x07
    213e:	2e 83       	std	Y+6, r18	; 0x06
    2140:	8e 81       	ldd	r24, Y+6	; 0x06
    2142:	9f 81       	ldd	r25, Y+7	; 0x07
    2144:	81 30       	cpi	r24, 0x01	; 1
    2146:	91 05       	cpc	r25, r1
    2148:	49 f1       	breq	.+82     	; 0x219c <TogglePIN+0x92>
    214a:	2e 81       	ldd	r18, Y+6	; 0x06
    214c:	3f 81       	ldd	r19, Y+7	; 0x07
    214e:	22 30       	cpi	r18, 0x02	; 2
    2150:	31 05       	cpc	r19, r1
    2152:	2c f4       	brge	.+10     	; 0x215e <TogglePIN+0x54>
    2154:	8e 81       	ldd	r24, Y+6	; 0x06
    2156:	9f 81       	ldd	r25, Y+7	; 0x07
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	61 f0       	breq	.+24     	; 0x2174 <TogglePIN+0x6a>
    215c:	5a c0       	rjmp	.+180    	; 0x2212 <TogglePIN+0x108>
    215e:	2e 81       	ldd	r18, Y+6	; 0x06
    2160:	3f 81       	ldd	r19, Y+7	; 0x07
    2162:	22 30       	cpi	r18, 0x02	; 2
    2164:	31 05       	cpc	r19, r1
    2166:	71 f1       	breq	.+92     	; 0x21c4 <TogglePIN+0xba>
    2168:	8e 81       	ldd	r24, Y+6	; 0x06
    216a:	9f 81       	ldd	r25, Y+7	; 0x07
    216c:	83 30       	cpi	r24, 0x03	; 3
    216e:	91 05       	cpc	r25, r1
    2170:	e9 f1       	breq	.+122    	; 0x21ec <TogglePIN+0xe2>
    2172:	4f c0       	rjmp	.+158    	; 0x2212 <TogglePIN+0x108>
		   	 {
					  case DIO_PORTA:
					 	 PORTA ^=(1<<copy_u8_PIN_Id);
    2174:	ab e3       	ldi	r26, 0x3B	; 59
    2176:	b0 e0       	ldi	r27, 0x00	; 0
    2178:	eb e3       	ldi	r30, 0x3B	; 59
    217a:	f0 e0       	ldi	r31, 0x00	; 0
    217c:	80 81       	ld	r24, Z
    217e:	48 2f       	mov	r20, r24
    2180:	8d 81       	ldd	r24, Y+5	; 0x05
    2182:	28 2f       	mov	r18, r24
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	81 e0       	ldi	r24, 0x01	; 1
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	02 2e       	mov	r0, r18
    218c:	02 c0       	rjmp	.+4      	; 0x2192 <TogglePIN+0x88>
    218e:	88 0f       	add	r24, r24
    2190:	99 1f       	adc	r25, r25
    2192:	0a 94       	dec	r0
    2194:	e2 f7       	brpl	.-8      	; 0x218e <TogglePIN+0x84>
    2196:	84 27       	eor	r24, r20
    2198:	8c 93       	st	X, r24
    219a:	3b c0       	rjmp	.+118    	; 0x2212 <TogglePIN+0x108>
					 	 break;

					  case DIO_PORTB:
					 	 PORTB ^=(1<<copy_u8_PIN_Id);
    219c:	a8 e3       	ldi	r26, 0x38	; 56
    219e:	b0 e0       	ldi	r27, 0x00	; 0
    21a0:	e8 e3       	ldi	r30, 0x38	; 56
    21a2:	f0 e0       	ldi	r31, 0x00	; 0
    21a4:	80 81       	ld	r24, Z
    21a6:	48 2f       	mov	r20, r24
    21a8:	8d 81       	ldd	r24, Y+5	; 0x05
    21aa:	28 2f       	mov	r18, r24
    21ac:	30 e0       	ldi	r19, 0x00	; 0
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	02 2e       	mov	r0, r18
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <TogglePIN+0xb0>
    21b6:	88 0f       	add	r24, r24
    21b8:	99 1f       	adc	r25, r25
    21ba:	0a 94       	dec	r0
    21bc:	e2 f7       	brpl	.-8      	; 0x21b6 <TogglePIN+0xac>
    21be:	84 27       	eor	r24, r20
    21c0:	8c 93       	st	X, r24
    21c2:	27 c0       	rjmp	.+78     	; 0x2212 <TogglePIN+0x108>

					     		 break;
					  case DIO_PORTC:
					 	 PORTC ^=(1<<copy_u8_PIN_Id);
    21c4:	a5 e3       	ldi	r26, 0x35	; 53
    21c6:	b0 e0       	ldi	r27, 0x00	; 0
    21c8:	e5 e3       	ldi	r30, 0x35	; 53
    21ca:	f0 e0       	ldi	r31, 0x00	; 0
    21cc:	80 81       	ld	r24, Z
    21ce:	48 2f       	mov	r20, r24
    21d0:	8d 81       	ldd	r24, Y+5	; 0x05
    21d2:	28 2f       	mov	r18, r24
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	02 2e       	mov	r0, r18
    21dc:	02 c0       	rjmp	.+4      	; 0x21e2 <TogglePIN+0xd8>
    21de:	88 0f       	add	r24, r24
    21e0:	99 1f       	adc	r25, r25
    21e2:	0a 94       	dec	r0
    21e4:	e2 f7       	brpl	.-8      	; 0x21de <TogglePIN+0xd4>
    21e6:	84 27       	eor	r24, r20
    21e8:	8c 93       	st	X, r24
    21ea:	13 c0       	rjmp	.+38     	; 0x2212 <TogglePIN+0x108>

					     		 break;
					  case DIO_PORTD:
					 	PORTD ^=(1<<copy_u8_PIN_Id);
    21ec:	a2 e3       	ldi	r26, 0x32	; 50
    21ee:	b0 e0       	ldi	r27, 0x00	; 0
    21f0:	e2 e3       	ldi	r30, 0x32	; 50
    21f2:	f0 e0       	ldi	r31, 0x00	; 0
    21f4:	80 81       	ld	r24, Z
    21f6:	48 2f       	mov	r20, r24
    21f8:	8d 81       	ldd	r24, Y+5	; 0x05
    21fa:	28 2f       	mov	r18, r24
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	81 e0       	ldi	r24, 0x01	; 1
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	02 2e       	mov	r0, r18
    2204:	02 c0       	rjmp	.+4      	; 0x220a <TogglePIN+0x100>
    2206:	88 0f       	add	r24, r24
    2208:	99 1f       	adc	r25, r25
    220a:	0a 94       	dec	r0
    220c:	e2 f7       	brpl	.-8      	; 0x2206 <TogglePIN+0xfc>
    220e:	84 27       	eor	r24, r20
    2210:	8c 93       	st	X, r24

					     		 break;
	     }

						ES_t local_enumError=DIO_OK;
    2212:	1a 82       	std	Y+2, r1	; 0x02
    2214:	02 c0       	rjmp	.+4      	; 0x221a <TogglePIN+0x110>
					}
					else
					{
				ES_t local_enumError=OUT_OF_RANGE;
    2216:	83 e0       	ldi	r24, 0x03	; 3
    2218:	89 83       	std	Y+1, r24	; 0x01

				}

					return local_enumError;
    221a:	8b 81       	ldd	r24, Y+3	; 0x03

}
    221c:	27 96       	adiw	r28, 0x07	; 7
    221e:	0f b6       	in	r0, 0x3f	; 63
    2220:	f8 94       	cli
    2222:	de bf       	out	0x3e, r29	; 62
    2224:	0f be       	out	0x3f, r0	; 63
    2226:	cd bf       	out	0x3d, r28	; 61
    2228:	cf 91       	pop	r28
    222a:	df 91       	pop	r29
    222c:	08 95       	ret

0000222e <GetPin>:
	ES_t GetPin(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 *copy_pu8_value)
{
    222e:	df 93       	push	r29
    2230:	cf 93       	push	r28
    2232:	cd b7       	in	r28, 0x3d	; 61
    2234:	de b7       	in	r29, 0x3e	; 62
    2236:	2a 97       	sbiw	r28, 0x0a	; 10
    2238:	0f b6       	in	r0, 0x3f	; 63
    223a:	f8 94       	cli
    223c:	de bf       	out	0x3e, r29	; 62
    223e:	0f be       	out	0x3f, r0	; 63
    2240:	cd bf       	out	0x3d, r28	; 61
    2242:	8d 83       	std	Y+5, r24	; 0x05
    2244:	6e 83       	std	Y+6, r22	; 0x06
    2246:	58 87       	std	Y+8, r21	; 0x08
    2248:	4f 83       	std	Y+7, r20	; 0x07
		ES_t local_enumError=DIO_NOK;
    224a:	81 e0       	ldi	r24, 0x01	; 1
    224c:	8c 83       	std	Y+4, r24	; 0x04
          if(copy_pu8_value!=NULL)
    224e:	8f 81       	ldd	r24, Y+7	; 0x07
    2250:	98 85       	ldd	r25, Y+8	; 0x08
    2252:	00 97       	sbiw	r24, 0x00	; 0
    2254:	09 f4       	brne	.+2      	; 0x2258 <GetPin+0x2a>
    2256:	7d c0       	rjmp	.+250    	; 0x2352 <GetPin+0x124>
 {
        	  if(copy_u8_PortId<=DIO_PORTD&&copy_u8_PIN_Id<=DIO_PIN7)
    2258:	8d 81       	ldd	r24, Y+5	; 0x05
    225a:	84 30       	cpi	r24, 0x04	; 4
    225c:	08 f0       	brcs	.+2      	; 0x2260 <GetPin+0x32>
    225e:	76 c0       	rjmp	.+236    	; 0x234c <GetPin+0x11e>
    2260:	8e 81       	ldd	r24, Y+6	; 0x06
    2262:	88 30       	cpi	r24, 0x08	; 8
    2264:	08 f0       	brcs	.+2      	; 0x2268 <GetPin+0x3a>
    2266:	72 c0       	rjmp	.+228    	; 0x234c <GetPin+0x11e>
        	  {
        			 switch(copy_u8_PortId)
    2268:	8d 81       	ldd	r24, Y+5	; 0x05
    226a:	28 2f       	mov	r18, r24
    226c:	30 e0       	ldi	r19, 0x00	; 0
    226e:	3a 87       	std	Y+10, r19	; 0x0a
    2270:	29 87       	std	Y+9, r18	; 0x09
    2272:	49 85       	ldd	r20, Y+9	; 0x09
    2274:	5a 85       	ldd	r21, Y+10	; 0x0a
    2276:	41 30       	cpi	r20, 0x01	; 1
    2278:	51 05       	cpc	r21, r1
    227a:	59 f1       	breq	.+86     	; 0x22d2 <GetPin+0xa4>
    227c:	89 85       	ldd	r24, Y+9	; 0x09
    227e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2280:	82 30       	cpi	r24, 0x02	; 2
    2282:	91 05       	cpc	r25, r1
    2284:	34 f4       	brge	.+12     	; 0x2292 <GetPin+0x64>
    2286:	29 85       	ldd	r18, Y+9	; 0x09
    2288:	3a 85       	ldd	r19, Y+10	; 0x0a
    228a:	21 15       	cp	r18, r1
    228c:	31 05       	cpc	r19, r1
    228e:	69 f0       	breq	.+26     	; 0x22aa <GetPin+0x7c>
    2290:	5b c0       	rjmp	.+182    	; 0x2348 <GetPin+0x11a>
    2292:	49 85       	ldd	r20, Y+9	; 0x09
    2294:	5a 85       	ldd	r21, Y+10	; 0x0a
    2296:	42 30       	cpi	r20, 0x02	; 2
    2298:	51 05       	cpc	r21, r1
    229a:	79 f1       	breq	.+94     	; 0x22fa <GetPin+0xcc>
    229c:	89 85       	ldd	r24, Y+9	; 0x09
    229e:	9a 85       	ldd	r25, Y+10	; 0x0a
    22a0:	83 30       	cpi	r24, 0x03	; 3
    22a2:	91 05       	cpc	r25, r1
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <GetPin+0x7a>
    22a6:	3d c0       	rjmp	.+122    	; 0x2322 <GetPin+0xf4>
    22a8:	4f c0       	rjmp	.+158    	; 0x2348 <GetPin+0x11a>
        			   	 {
        						  case DIO_PORTA:
        							  *copy_pu8_value=((PINA>>copy_u8_PIN_Id)&1);
    22aa:	e9 e3       	ldi	r30, 0x39	; 57
    22ac:	f0 e0       	ldi	r31, 0x00	; 0
    22ae:	80 81       	ld	r24, Z
    22b0:	28 2f       	mov	r18, r24
    22b2:	30 e0       	ldi	r19, 0x00	; 0
    22b4:	8e 81       	ldd	r24, Y+6	; 0x06
    22b6:	88 2f       	mov	r24, r24
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	a9 01       	movw	r20, r18
    22bc:	02 c0       	rjmp	.+4      	; 0x22c2 <GetPin+0x94>
    22be:	55 95       	asr	r21
    22c0:	47 95       	ror	r20
    22c2:	8a 95       	dec	r24
    22c4:	e2 f7       	brpl	.-8      	; 0x22be <GetPin+0x90>
    22c6:	ca 01       	movw	r24, r20
    22c8:	81 70       	andi	r24, 0x01	; 1
    22ca:	ef 81       	ldd	r30, Y+7	; 0x07
    22cc:	f8 85       	ldd	r31, Y+8	; 0x08
    22ce:	80 83       	st	Z, r24
    22d0:	3b c0       	rjmp	.+118    	; 0x2348 <GetPin+0x11a>
        						 	 break;

        						  case DIO_PORTB:
        							  *copy_pu8_value=((PINB>>copy_u8_PIN_Id)&1);
    22d2:	e6 e3       	ldi	r30, 0x36	; 54
    22d4:	f0 e0       	ldi	r31, 0x00	; 0
    22d6:	80 81       	ld	r24, Z
    22d8:	28 2f       	mov	r18, r24
    22da:	30 e0       	ldi	r19, 0x00	; 0
    22dc:	8e 81       	ldd	r24, Y+6	; 0x06
    22de:	88 2f       	mov	r24, r24
    22e0:	90 e0       	ldi	r25, 0x00	; 0
    22e2:	a9 01       	movw	r20, r18
    22e4:	02 c0       	rjmp	.+4      	; 0x22ea <GetPin+0xbc>
    22e6:	55 95       	asr	r21
    22e8:	47 95       	ror	r20
    22ea:	8a 95       	dec	r24
    22ec:	e2 f7       	brpl	.-8      	; 0x22e6 <GetPin+0xb8>
    22ee:	ca 01       	movw	r24, r20
    22f0:	81 70       	andi	r24, 0x01	; 1
    22f2:	ef 81       	ldd	r30, Y+7	; 0x07
    22f4:	f8 85       	ldd	r31, Y+8	; 0x08
    22f6:	80 83       	st	Z, r24
    22f8:	27 c0       	rjmp	.+78     	; 0x2348 <GetPin+0x11a>

        						     		 break;
        						  case DIO_PORTC:
        							  *copy_pu8_value=((PINC>>copy_u8_PIN_Id)&1);
    22fa:	e3 e3       	ldi	r30, 0x33	; 51
    22fc:	f0 e0       	ldi	r31, 0x00	; 0
    22fe:	80 81       	ld	r24, Z
    2300:	28 2f       	mov	r18, r24
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	8e 81       	ldd	r24, Y+6	; 0x06
    2306:	88 2f       	mov	r24, r24
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	a9 01       	movw	r20, r18
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <GetPin+0xe4>
    230e:	55 95       	asr	r21
    2310:	47 95       	ror	r20
    2312:	8a 95       	dec	r24
    2314:	e2 f7       	brpl	.-8      	; 0x230e <GetPin+0xe0>
    2316:	ca 01       	movw	r24, r20
    2318:	81 70       	andi	r24, 0x01	; 1
    231a:	ef 81       	ldd	r30, Y+7	; 0x07
    231c:	f8 85       	ldd	r31, Y+8	; 0x08
    231e:	80 83       	st	Z, r24
    2320:	13 c0       	rjmp	.+38     	; 0x2348 <GetPin+0x11a>

        						     		 break;
        						  case DIO_PORTD:
        							  *copy_pu8_value=((PIND>>copy_u8_PIN_Id)&1);
    2322:	e0 e3       	ldi	r30, 0x30	; 48
    2324:	f0 e0       	ldi	r31, 0x00	; 0
    2326:	80 81       	ld	r24, Z
    2328:	28 2f       	mov	r18, r24
    232a:	30 e0       	ldi	r19, 0x00	; 0
    232c:	8e 81       	ldd	r24, Y+6	; 0x06
    232e:	88 2f       	mov	r24, r24
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	a9 01       	movw	r20, r18
    2334:	02 c0       	rjmp	.+4      	; 0x233a <GetPin+0x10c>
    2336:	55 95       	asr	r21
    2338:	47 95       	ror	r20
    233a:	8a 95       	dec	r24
    233c:	e2 f7       	brpl	.-8      	; 0x2336 <GetPin+0x108>
    233e:	ca 01       	movw	r24, r20
    2340:	81 70       	andi	r24, 0x01	; 1
    2342:	ef 81       	ldd	r30, Y+7	; 0x07
    2344:	f8 85       	ldd	r31, Y+8	; 0x08
    2346:	80 83       	st	Z, r24

        						     		 break;
        		     }


					ES_t local_enumError=DIO_OK;
    2348:	1b 82       	std	Y+3, r1	; 0x03
    234a:	05 c0       	rjmp	.+10     	; 0x2356 <GetPin+0x128>
        	  }
 else
        	  {
    	ES_t local_enumError=OUT_OF_RANGE;
    234c:	83 e0       	ldi	r24, 0x03	; 3
    234e:	8a 83       	std	Y+2, r24	; 0x02
    2350:	02 c0       	rjmp	.+4      	; 0x2356 <GetPin+0x128>

}

else
					{
				ES_t local_enumError=DIO_NULLPOINTER;
    2352:	82 e0       	ldi	r24, 0x02	; 2
    2354:	89 83       	std	Y+1, r24	; 0x01

				}


					 return local_enumError;
    2356:	8c 81       	ldd	r24, Y+4	; 0x04

}
    2358:	2a 96       	adiw	r28, 0x0a	; 10
    235a:	0f b6       	in	r0, 0x3f	; 63
    235c:	f8 94       	cli
    235e:	de bf       	out	0x3e, r29	; 62
    2360:	0f be       	out	0x3f, r0	; 63
    2362:	cd bf       	out	0x3d, r28	; 61
    2364:	cf 91       	pop	r28
    2366:	df 91       	pop	r29
    2368:	08 95       	ret

0000236a <__prologue_saves__>:
    236a:	2f 92       	push	r2
    236c:	3f 92       	push	r3
    236e:	4f 92       	push	r4
    2370:	5f 92       	push	r5
    2372:	6f 92       	push	r6
    2374:	7f 92       	push	r7
    2376:	8f 92       	push	r8
    2378:	9f 92       	push	r9
    237a:	af 92       	push	r10
    237c:	bf 92       	push	r11
    237e:	cf 92       	push	r12
    2380:	df 92       	push	r13
    2382:	ef 92       	push	r14
    2384:	ff 92       	push	r15
    2386:	0f 93       	push	r16
    2388:	1f 93       	push	r17
    238a:	cf 93       	push	r28
    238c:	df 93       	push	r29
    238e:	cd b7       	in	r28, 0x3d	; 61
    2390:	de b7       	in	r29, 0x3e	; 62
    2392:	ca 1b       	sub	r28, r26
    2394:	db 0b       	sbc	r29, r27
    2396:	0f b6       	in	r0, 0x3f	; 63
    2398:	f8 94       	cli
    239a:	de bf       	out	0x3e, r29	; 62
    239c:	0f be       	out	0x3f, r0	; 63
    239e:	cd bf       	out	0x3d, r28	; 61
    23a0:	09 94       	ijmp

000023a2 <__epilogue_restores__>:
    23a2:	2a 88       	ldd	r2, Y+18	; 0x12
    23a4:	39 88       	ldd	r3, Y+17	; 0x11
    23a6:	48 88       	ldd	r4, Y+16	; 0x10
    23a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    23aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    23ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    23ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    23b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    23b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    23b4:	b9 84       	ldd	r11, Y+9	; 0x09
    23b6:	c8 84       	ldd	r12, Y+8	; 0x08
    23b8:	df 80       	ldd	r13, Y+7	; 0x07
    23ba:	ee 80       	ldd	r14, Y+6	; 0x06
    23bc:	fd 80       	ldd	r15, Y+5	; 0x05
    23be:	0c 81       	ldd	r16, Y+4	; 0x04
    23c0:	1b 81       	ldd	r17, Y+3	; 0x03
    23c2:	aa 81       	ldd	r26, Y+2	; 0x02
    23c4:	b9 81       	ldd	r27, Y+1	; 0x01
    23c6:	ce 0f       	add	r28, r30
    23c8:	d1 1d       	adc	r29, r1
    23ca:	0f b6       	in	r0, 0x3f	; 63
    23cc:	f8 94       	cli
    23ce:	de bf       	out	0x3e, r29	; 62
    23d0:	0f be       	out	0x3f, r0	; 63
    23d2:	cd bf       	out	0x3d, r28	; 61
    23d4:	ed 01       	movw	r28, r26
    23d6:	08 95       	ret

000023d8 <_exit>:
    23d8:	f8 94       	cli

000023da <__stop_program>:
    23da:	ff cf       	rjmp	.-2      	; 0x23da <__stop_program>
