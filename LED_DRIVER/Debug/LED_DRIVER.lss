
LED_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d26  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000d26  00000d9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001224  00000000  00000000  00000da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000568  00000000  00000000  00001fcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <main>
  7a:	0c 94 91 06 	jmp	0xd22	; 0xd22 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Intialize>:
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <Intialize+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <Intialize+0x8>
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	9c 83       	std	Y+4, r25	; 0x04
  90:	8b 83       	std	Y+3, r24	; 0x03
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	8a 83       	std	Y+2, r24	; 0x02
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	9c 81       	ldd	r25, Y+4	; 0x04
  9a:	00 97       	sbiw	r24, 0x00	; 0
  9c:	09 f4       	brne	.+2      	; 0xa0 <Intialize+0x1e>
  9e:	20 c1       	rjmp	.+576    	; 0x2e0 <Intialize+0x25e>
  a0:	19 82       	std	Y+1, r1	; 0x01
  a2:	19 82       	std	Y+1, r1	; 0x01
  a4:	18 c1       	rjmp	.+560    	; 0x2d6 <Intialize+0x254>
  a6:	89 81       	ldd	r24, Y+1	; 0x01
  a8:	88 2f       	mov	r24, r24
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	9c 01       	movw	r18, r24
  ae:	22 0f       	add	r18, r18
  b0:	33 1f       	adc	r19, r19
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	8b 81       	ldd	r24, Y+3	; 0x03
  b8:	9c 81       	ldd	r25, Y+4	; 0x04
  ba:	fc 01       	movw	r30, r24
  bc:	e2 0f       	add	r30, r18
  be:	f3 1f       	adc	r31, r19
  c0:	40 81       	ld	r20, Z
  c2:	89 81       	ldd	r24, Y+1	; 0x01
  c4:	88 2f       	mov	r24, r24
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	9c 01       	movw	r18, r24
  ca:	22 0f       	add	r18, r18
  cc:	33 1f       	adc	r19, r19
  ce:	22 0f       	add	r18, r18
  d0:	33 1f       	adc	r19, r19
  d2:	8b 81       	ldd	r24, Y+3	; 0x03
  d4:	9c 81       	ldd	r25, Y+4	; 0x04
  d6:	fc 01       	movw	r30, r24
  d8:	e2 0f       	add	r30, r18
  da:	f3 1f       	adc	r31, r19
  dc:	91 81       	ldd	r25, Z+1	; 0x01
  de:	84 2f       	mov	r24, r20
  e0:	69 2f       	mov	r22, r25
  e2:	41 e0       	ldi	r20, 0x01	; 1
  e4:	0e 94 83 03 	call	0x706	; 0x706 <Setpin_Direction>
  e8:	8a 83       	std	Y+2, r24	; 0x02
  ea:	89 81       	ldd	r24, Y+1	; 0x01
  ec:	88 2f       	mov	r24, r24
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	9c 01       	movw	r18, r24
  f2:	22 0f       	add	r18, r18
  f4:	33 1f       	adc	r19, r19
  f6:	22 0f       	add	r18, r18
  f8:	33 1f       	adc	r19, r19
  fa:	8b 81       	ldd	r24, Y+3	; 0x03
  fc:	9c 81       	ldd	r25, Y+4	; 0x04
  fe:	fc 01       	movw	r30, r24
 100:	e2 0f       	add	r30, r18
 102:	f3 1f       	adc	r31, r19
 104:	82 81       	ldd	r24, Z+2	; 0x02
 106:	88 23       	and	r24, r24
 108:	09 f0       	breq	.+2      	; 0x10c <Intialize+0x8a>
 10a:	69 c0       	rjmp	.+210    	; 0x1de <Intialize+0x15c>
 10c:	89 81       	ldd	r24, Y+1	; 0x01
 10e:	88 2f       	mov	r24, r24
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	9c 01       	movw	r18, r24
 114:	22 0f       	add	r18, r18
 116:	33 1f       	adc	r19, r19
 118:	22 0f       	add	r18, r18
 11a:	33 1f       	adc	r19, r19
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	9c 81       	ldd	r25, Y+4	; 0x04
 120:	fc 01       	movw	r30, r24
 122:	e2 0f       	add	r30, r18
 124:	f3 1f       	adc	r31, r19
 126:	83 81       	ldd	r24, Z+3	; 0x03
 128:	88 23       	and	r24, r24
 12a:	19 f5       	brne	.+70     	; 0x172 <Intialize+0xf0>
 12c:	89 81       	ldd	r24, Y+1	; 0x01
 12e:	88 2f       	mov	r24, r24
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	9c 01       	movw	r18, r24
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	22 0f       	add	r18, r18
 13a:	33 1f       	adc	r19, r19
 13c:	8b 81       	ldd	r24, Y+3	; 0x03
 13e:	9c 81       	ldd	r25, Y+4	; 0x04
 140:	fc 01       	movw	r30, r24
 142:	e2 0f       	add	r30, r18
 144:	f3 1f       	adc	r31, r19
 146:	40 81       	ld	r20, Z
 148:	89 81       	ldd	r24, Y+1	; 0x01
 14a:	88 2f       	mov	r24, r24
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	9c 01       	movw	r18, r24
 150:	22 0f       	add	r18, r18
 152:	33 1f       	adc	r19, r19
 154:	22 0f       	add	r18, r18
 156:	33 1f       	adc	r19, r19
 158:	8b 81       	ldd	r24, Y+3	; 0x03
 15a:	9c 81       	ldd	r25, Y+4	; 0x04
 15c:	fc 01       	movw	r30, r24
 15e:	e2 0f       	add	r30, r18
 160:	f3 1f       	adc	r31, r19
 162:	91 81       	ldd	r25, Z+1	; 0x01
 164:	84 2f       	mov	r24, r20
 166:	69 2f       	mov	r22, r25
 168:	40 e0       	ldi	r20, 0x00	; 0
 16a:	0e 94 72 04 	call	0x8e4	; 0x8e4 <Setpin_value>
 16e:	8a 83       	std	Y+2, r24	; 0x02
 170:	af c0       	rjmp	.+350    	; 0x2d0 <Intialize+0x24e>
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	88 2f       	mov	r24, r24
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	9c 01       	movw	r18, r24
 17a:	22 0f       	add	r18, r18
 17c:	33 1f       	adc	r19, r19
 17e:	22 0f       	add	r18, r18
 180:	33 1f       	adc	r19, r19
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	9c 81       	ldd	r25, Y+4	; 0x04
 186:	fc 01       	movw	r30, r24
 188:	e2 0f       	add	r30, r18
 18a:	f3 1f       	adc	r31, r19
 18c:	83 81       	ldd	r24, Z+3	; 0x03
 18e:	88 23       	and	r24, r24
 190:	19 f5       	brne	.+70     	; 0x1d8 <Intialize+0x156>
 192:	89 81       	ldd	r24, Y+1	; 0x01
 194:	88 2f       	mov	r24, r24
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	9c 01       	movw	r18, r24
 19a:	22 0f       	add	r18, r18
 19c:	33 1f       	adc	r19, r19
 19e:	22 0f       	add	r18, r18
 1a0:	33 1f       	adc	r19, r19
 1a2:	8b 81       	ldd	r24, Y+3	; 0x03
 1a4:	9c 81       	ldd	r25, Y+4	; 0x04
 1a6:	fc 01       	movw	r30, r24
 1a8:	e2 0f       	add	r30, r18
 1aa:	f3 1f       	adc	r31, r19
 1ac:	40 81       	ld	r20, Z
 1ae:	89 81       	ldd	r24, Y+1	; 0x01
 1b0:	88 2f       	mov	r24, r24
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	9c 01       	movw	r18, r24
 1b6:	22 0f       	add	r18, r18
 1b8:	33 1f       	adc	r19, r19
 1ba:	22 0f       	add	r18, r18
 1bc:	33 1f       	adc	r19, r19
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	9c 81       	ldd	r25, Y+4	; 0x04
 1c2:	fc 01       	movw	r30, r24
 1c4:	e2 0f       	add	r30, r18
 1c6:	f3 1f       	adc	r31, r19
 1c8:	91 81       	ldd	r25, Z+1	; 0x01
 1ca:	84 2f       	mov	r24, r20
 1cc:	69 2f       	mov	r22, r25
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	0e 94 72 04 	call	0x8e4	; 0x8e4 <Setpin_value>
 1d4:	8a 83       	std	Y+2, r24	; 0x02
 1d6:	7c c0       	rjmp	.+248    	; 0x2d0 <Intialize+0x24e>
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	8a 83       	std	Y+2, r24	; 0x02
 1dc:	79 c0       	rjmp	.+242    	; 0x2d0 <Intialize+0x24e>
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	88 2f       	mov	r24, r24
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	9c 01       	movw	r18, r24
 1e6:	22 0f       	add	r18, r18
 1e8:	33 1f       	adc	r19, r19
 1ea:	22 0f       	add	r18, r18
 1ec:	33 1f       	adc	r19, r19
 1ee:	8b 81       	ldd	r24, Y+3	; 0x03
 1f0:	9c 81       	ldd	r25, Y+4	; 0x04
 1f2:	fc 01       	movw	r30, r24
 1f4:	e2 0f       	add	r30, r18
 1f6:	f3 1f       	adc	r31, r19
 1f8:	82 81       	ldd	r24, Z+2	; 0x02
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	09 f0       	breq	.+2      	; 0x200 <Intialize+0x17e>
 1fe:	66 c0       	rjmp	.+204    	; 0x2cc <Intialize+0x24a>
 200:	89 81       	ldd	r24, Y+1	; 0x01
 202:	88 2f       	mov	r24, r24
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	9c 01       	movw	r18, r24
 208:	22 0f       	add	r18, r18
 20a:	33 1f       	adc	r19, r19
 20c:	22 0f       	add	r18, r18
 20e:	33 1f       	adc	r19, r19
 210:	8b 81       	ldd	r24, Y+3	; 0x03
 212:	9c 81       	ldd	r25, Y+4	; 0x04
 214:	fc 01       	movw	r30, r24
 216:	e2 0f       	add	r30, r18
 218:	f3 1f       	adc	r31, r19
 21a:	83 81       	ldd	r24, Z+3	; 0x03
 21c:	88 23       	and	r24, r24
 21e:	19 f5       	brne	.+70     	; 0x266 <Intialize+0x1e4>
 220:	89 81       	ldd	r24, Y+1	; 0x01
 222:	88 2f       	mov	r24, r24
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	9c 01       	movw	r18, r24
 228:	22 0f       	add	r18, r18
 22a:	33 1f       	adc	r19, r19
 22c:	22 0f       	add	r18, r18
 22e:	33 1f       	adc	r19, r19
 230:	8b 81       	ldd	r24, Y+3	; 0x03
 232:	9c 81       	ldd	r25, Y+4	; 0x04
 234:	fc 01       	movw	r30, r24
 236:	e2 0f       	add	r30, r18
 238:	f3 1f       	adc	r31, r19
 23a:	40 81       	ld	r20, Z
 23c:	89 81       	ldd	r24, Y+1	; 0x01
 23e:	88 2f       	mov	r24, r24
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	9c 01       	movw	r18, r24
 244:	22 0f       	add	r18, r18
 246:	33 1f       	adc	r19, r19
 248:	22 0f       	add	r18, r18
 24a:	33 1f       	adc	r19, r19
 24c:	8b 81       	ldd	r24, Y+3	; 0x03
 24e:	9c 81       	ldd	r25, Y+4	; 0x04
 250:	fc 01       	movw	r30, r24
 252:	e2 0f       	add	r30, r18
 254:	f3 1f       	adc	r31, r19
 256:	91 81       	ldd	r25, Z+1	; 0x01
 258:	84 2f       	mov	r24, r20
 25a:	69 2f       	mov	r22, r25
 25c:	41 e0       	ldi	r20, 0x01	; 1
 25e:	0e 94 72 04 	call	0x8e4	; 0x8e4 <Setpin_value>
 262:	8a 83       	std	Y+2, r24	; 0x02
 264:	35 c0       	rjmp	.+106    	; 0x2d0 <Intialize+0x24e>
 266:	89 81       	ldd	r24, Y+1	; 0x01
 268:	88 2f       	mov	r24, r24
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	9c 01       	movw	r18, r24
 26e:	22 0f       	add	r18, r18
 270:	33 1f       	adc	r19, r19
 272:	22 0f       	add	r18, r18
 274:	33 1f       	adc	r19, r19
 276:	8b 81       	ldd	r24, Y+3	; 0x03
 278:	9c 81       	ldd	r25, Y+4	; 0x04
 27a:	fc 01       	movw	r30, r24
 27c:	e2 0f       	add	r30, r18
 27e:	f3 1f       	adc	r31, r19
 280:	83 81       	ldd	r24, Z+3	; 0x03
 282:	88 23       	and	r24, r24
 284:	29 f5       	brne	.+74     	; 0x2d0 <Intialize+0x24e>
 286:	89 81       	ldd	r24, Y+1	; 0x01
 288:	88 2f       	mov	r24, r24
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	9c 01       	movw	r18, r24
 28e:	22 0f       	add	r18, r18
 290:	33 1f       	adc	r19, r19
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	9c 81       	ldd	r25, Y+4	; 0x04
 29a:	fc 01       	movw	r30, r24
 29c:	e2 0f       	add	r30, r18
 29e:	f3 1f       	adc	r31, r19
 2a0:	40 81       	ld	r20, Z
 2a2:	89 81       	ldd	r24, Y+1	; 0x01
 2a4:	88 2f       	mov	r24, r24
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	9c 01       	movw	r18, r24
 2aa:	22 0f       	add	r18, r18
 2ac:	33 1f       	adc	r19, r19
 2ae:	22 0f       	add	r18, r18
 2b0:	33 1f       	adc	r19, r19
 2b2:	8b 81       	ldd	r24, Y+3	; 0x03
 2b4:	9c 81       	ldd	r25, Y+4	; 0x04
 2b6:	fc 01       	movw	r30, r24
 2b8:	e2 0f       	add	r30, r18
 2ba:	f3 1f       	adc	r31, r19
 2bc:	91 81       	ldd	r25, Z+1	; 0x01
 2be:	84 2f       	mov	r24, r20
 2c0:	69 2f       	mov	r22, r25
 2c2:	40 e0       	ldi	r20, 0x00	; 0
 2c4:	0e 94 72 04 	call	0x8e4	; 0x8e4 <Setpin_value>
 2c8:	8a 83       	std	Y+2, r24	; 0x02
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <Intialize+0x24e>
 2cc:	83 e0       	ldi	r24, 0x03	; 3
 2ce:	8a 83       	std	Y+2, r24	; 0x02
 2d0:	89 81       	ldd	r24, Y+1	; 0x01
 2d2:	8f 5f       	subi	r24, 0xFF	; 255
 2d4:	89 83       	std	Y+1, r24	; 0x01
 2d6:	89 81       	ldd	r24, Y+1	; 0x01
 2d8:	83 30       	cpi	r24, 0x03	; 3
 2da:	08 f4       	brcc	.+2      	; 0x2de <Intialize+0x25c>
 2dc:	e4 ce       	rjmp	.-568    	; 0xa6 <Intialize+0x24>
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <Intialize+0x262>
 2e0:	82 e0       	ldi	r24, 0x02	; 2
 2e2:	8a 83       	std	Y+2, r24	; 0x02
 2e4:	8a 81       	ldd	r24, Y+2	; 0x02
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	cf 91       	pop	r28
 2f0:	df 91       	pop	r29
 2f2:	08 95       	ret

000002f4 <Led_TurnOn>:
    return local_enumError;

}

ES_t Led_TurnOn(Led_t *copy_pstrctLEDID)
{
 2f4:	df 93       	push	r29
 2f6:	cf 93       	push	r28
 2f8:	00 d0       	rcall	.+0      	; 0x2fa <Led_TurnOn+0x6>
 2fa:	0f 92       	push	r0
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62
 300:	9b 83       	std	Y+3, r25	; 0x03
 302:	8a 83       	std	Y+2, r24	; 0x02
	ES_t local_enumError=DIO_NOK;
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	89 83       	std	Y+1, r24	; 0x01
	if(copy_pstrctLEDID!=NULL)
 308:	8a 81       	ldd	r24, Y+2	; 0x02
 30a:	9b 81       	ldd	r25, Y+3	; 0x03
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	29 f1       	breq	.+74     	; 0x35a <Led_TurnOn+0x66>
	{
		if(copy_pstrctLEDID->Led_Connection==SINK)
 310:	ea 81       	ldd	r30, Y+2	; 0x02
 312:	fb 81       	ldd	r31, Y+3	; 0x03
 314:	82 81       	ldd	r24, Z+2	; 0x02
 316:	88 23       	and	r24, r24
 318:	61 f4       	brne	.+24     	; 0x332 <Led_TurnOn+0x3e>
		{
			local_enumError= Setpin_Direction(copy_pstrctLEDID->Led_Portid, copy_pstrctLEDID->Led_Pinid, DIO_U8LOW);
 31a:	ea 81       	ldd	r30, Y+2	; 0x02
 31c:	fb 81       	ldd	r31, Y+3	; 0x03
 31e:	80 81       	ld	r24, Z
 320:	ea 81       	ldd	r30, Y+2	; 0x02
 322:	fb 81       	ldd	r31, Y+3	; 0x03
 324:	91 81       	ldd	r25, Z+1	; 0x01
 326:	69 2f       	mov	r22, r25
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	0e 94 83 03 	call	0x706	; 0x706 <Setpin_Direction>
 32e:	89 83       	std	Y+1, r24	; 0x01
 330:	16 c0       	rjmp	.+44     	; 0x35e <Led_TurnOn+0x6a>

		}
		else if(copy_pstrctLEDID->Led_Connection==SOURCE)
 332:	ea 81       	ldd	r30, Y+2	; 0x02
 334:	fb 81       	ldd	r31, Y+3	; 0x03
 336:	82 81       	ldd	r24, Z+2	; 0x02
 338:	81 30       	cpi	r24, 0x01	; 1
 33a:	61 f4       	brne	.+24     	; 0x354 <Led_TurnOn+0x60>
		{
			local_enumError= Setpin_Direction(copy_pstrctLEDID->Led_Portid, copy_pstrctLEDID->Led_Pinid, DIO_U8HIGH);
 33c:	ea 81       	ldd	r30, Y+2	; 0x02
 33e:	fb 81       	ldd	r31, Y+3	; 0x03
 340:	80 81       	ld	r24, Z
 342:	ea 81       	ldd	r30, Y+2	; 0x02
 344:	fb 81       	ldd	r31, Y+3	; 0x03
 346:	91 81       	ldd	r25, Z+1	; 0x01
 348:	69 2f       	mov	r22, r25
 34a:	41 e0       	ldi	r20, 0x01	; 1
 34c:	0e 94 83 03 	call	0x706	; 0x706 <Setpin_Direction>
 350:	89 83       	std	Y+1, r24	; 0x01
 352:	05 c0       	rjmp	.+10     	; 0x35e <Led_TurnOn+0x6a>

		}

		else
		{
			local_enumError=OUT_OF_RANGE;
 354:	83 e0       	ldi	r24, 0x03	; 3
 356:	89 83       	std	Y+1, r24	; 0x01
 358:	02 c0       	rjmp	.+4      	; 0x35e <Led_TurnOn+0x6a>
		}

	}
	else
	   {
		 local_enumError=DIO_NULLPOINTER;
 35a:	82 e0       	ldi	r24, 0x02	; 2
 35c:	89 83       	std	Y+1, r24	; 0x01

	   }
            return local_enumError;
 35e:	89 81       	ldd	r24, Y+1	; 0x01
}
 360:	0f 90       	pop	r0
 362:	0f 90       	pop	r0
 364:	0f 90       	pop	r0
 366:	cf 91       	pop	r28
 368:	df 91       	pop	r29
 36a:	08 95       	ret

0000036c <Led_TurnOff>:
ES_t Led_TurnOff(Led_t *copy_pstrctLEDID)
{
 36c:	df 93       	push	r29
 36e:	cf 93       	push	r28
 370:	00 d0       	rcall	.+0      	; 0x372 <Led_TurnOff+0x6>
 372:	0f 92       	push	r0
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	9b 83       	std	Y+3, r25	; 0x03
 37a:	8a 83       	std	Y+2, r24	; 0x02
	ES_t local_enumError=DIO_NOK;
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	89 83       	std	Y+1, r24	; 0x01
	if(copy_pstrctLEDID!=NULL)
 380:	8a 81       	ldd	r24, Y+2	; 0x02
 382:	9b 81       	ldd	r25, Y+3	; 0x03
 384:	00 97       	sbiw	r24, 0x00	; 0
 386:	29 f1       	breq	.+74     	; 0x3d2 <Led_TurnOff+0x66>
	{
		if(copy_pstrctLEDID->Led_Connection==SINK)
 388:	ea 81       	ldd	r30, Y+2	; 0x02
 38a:	fb 81       	ldd	r31, Y+3	; 0x03
 38c:	82 81       	ldd	r24, Z+2	; 0x02
 38e:	88 23       	and	r24, r24
 390:	61 f4       	brne	.+24     	; 0x3aa <Led_TurnOff+0x3e>
		{
			local_enumError= Setpin_Direction(copy_pstrctLEDID->Led_Portid, copy_pstrctLEDID->Led_Pinid, DIO_U8HIGH);
 392:	ea 81       	ldd	r30, Y+2	; 0x02
 394:	fb 81       	ldd	r31, Y+3	; 0x03
 396:	80 81       	ld	r24, Z
 398:	ea 81       	ldd	r30, Y+2	; 0x02
 39a:	fb 81       	ldd	r31, Y+3	; 0x03
 39c:	91 81       	ldd	r25, Z+1	; 0x01
 39e:	69 2f       	mov	r22, r25
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	0e 94 83 03 	call	0x706	; 0x706 <Setpin_Direction>
 3a6:	89 83       	std	Y+1, r24	; 0x01
 3a8:	16 c0       	rjmp	.+44     	; 0x3d6 <Led_TurnOff+0x6a>

		}
		else if(copy_pstrctLEDID->Led_Connection==SOURCE)
 3aa:	ea 81       	ldd	r30, Y+2	; 0x02
 3ac:	fb 81       	ldd	r31, Y+3	; 0x03
 3ae:	82 81       	ldd	r24, Z+2	; 0x02
 3b0:	81 30       	cpi	r24, 0x01	; 1
 3b2:	61 f4       	brne	.+24     	; 0x3cc <Led_TurnOff+0x60>
		{
			local_enumError= Setpin_Direction(copy_pstrctLEDID->Led_Portid, copy_pstrctLEDID->Led_Pinid, DIO_U8LOW);
 3b4:	ea 81       	ldd	r30, Y+2	; 0x02
 3b6:	fb 81       	ldd	r31, Y+3	; 0x03
 3b8:	80 81       	ld	r24, Z
 3ba:	ea 81       	ldd	r30, Y+2	; 0x02
 3bc:	fb 81       	ldd	r31, Y+3	; 0x03
 3be:	91 81       	ldd	r25, Z+1	; 0x01
 3c0:	69 2f       	mov	r22, r25
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	0e 94 83 03 	call	0x706	; 0x706 <Setpin_Direction>
 3c8:	89 83       	std	Y+1, r24	; 0x01
 3ca:	05 c0       	rjmp	.+10     	; 0x3d6 <Led_TurnOff+0x6a>

		}

		else
		{
			local_enumError=OUT_OF_RANGE;
 3cc:	83 e0       	ldi	r24, 0x03	; 3
 3ce:	89 83       	std	Y+1, r24	; 0x01
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <Led_TurnOff+0x6a>
		}

	}
	else
	   {
		 local_enumError=DIO_NULLPOINTER;
 3d2:	82 e0       	ldi	r24, 0x02	; 2
 3d4:	89 83       	std	Y+1, r24	; 0x01

	   }
    return local_enumError;
 3d6:	89 81       	ldd	r24, Y+1	; 0x01

}
 3d8:	0f 90       	pop	r0
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	cf 91       	pop	r28
 3e0:	df 91       	pop	r29
 3e2:	08 95       	ret

000003e4 <main>:
int main()


{
 3e4:	df 93       	push	r29
 3e6:	cf 93       	push	r28
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62





	return 0;
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	90 e0       	ldi	r25, 0x00	; 0
}
 3f0:	cf 91       	pop	r28
 3f2:	df 91       	pop	r29
 3f4:	08 95       	ret

000003f6 <DIO_init>:
#include "ERROR.h"
#include "config.h"


ES_t DIO_init(void)
 {
 3f6:	df 93       	push	r29
 3f8:	cf 93       	push	r28
 3fa:	0f 92       	push	r0
 3fc:	cd b7       	in	r28, 0x3d	; 61
 3fe:	de b7       	in	r29, 0x3e	; 62
	ES_t local_enumError=DIO_NOK;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	89 83       	std	Y+1, r24	; 0x01
	    DDRA= CONC(PORTA_PIN7_DIR,PORTA_PIN6_DIR,PORTA_PIN5_DIR,PORTA_PIN4_DIR,PORTA_PIN3_DIR,PORTA_PIN2_DIR,PORTA_PIN1_DIR,PORTA_PIN0_DIR);
 404:	ea e3       	ldi	r30, 0x3A	; 58
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	8f ef       	ldi	r24, 0xFF	; 255
 40a:	80 83       	st	Z, r24
	    DDRB= CONC(PORTB_PIN7_DIR,PORTB_PIN6_DIR,PORTB_PIN5_DIR,PORTB_PIN4_DIR,PORTB_PIN3_DIR,PORTB_PIN2_DIR,PORTB_PIN1_DIR,PORTB_PIN0_DIR);
 40c:	e7 e3       	ldi	r30, 0x37	; 55
 40e:	f0 e0       	ldi	r31, 0x00	; 0
 410:	8f ef       	ldi	r24, 0xFF	; 255
 412:	80 83       	st	Z, r24
	    DDRC= CONC(PORTC_PIN7_DIR,PORTC_PIN6_DIR,PORTC_PIN5_DIR,PORTC_PIN4_DIR,PORTC_PIN3_DIR,PORTC_PIN2_DIR,PORTC_PIN1_DIR,PORTC_PIN0_DIR);
 414:	e4 e3       	ldi	r30, 0x34	; 52
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	10 82       	st	Z, r1
	    DDRD= CONC(PORTD_PIN7_DIR,PORTD_PIN6_DIR,PORTD_PIN5_DIR,PORTD_PIN4_DIR,PORTD_PIN3_DIR,PORTD_PIN2_DIR,PORTD_PIN1_DIR,PORTD_PIN0_DIR);
 41a:	e1 e3       	ldi	r30, 0x31	; 49
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	8f ef       	ldi	r24, 0xFF	; 255
 420:	80 83       	st	Z, r24

	    PORTA= CONC(PORTA_PIN7_VAL,PORTA_PIN6_VAL,PORTA_PIN5_VAL,PORTA_PIN4_VAL,PORTA_PIN3_VAL,PORTA_PIN2_VAL,PORTA_PIN1_VAL,PORTA_PIN0_VAL);
 422:	eb e3       	ldi	r30, 0x3B	; 59
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	10 82       	st	Z, r1
		PORTB= CONC(PORTB_PIN7_VAL,PORTB_PIN6_VAL,PORTB_PIN5_VAL,PORTB_PIN4_VAL,PORTB_PIN3_VAL,PORTB_PIN2_VAL,PORTB_PIN1_VAL,PORTB_PIN0_VAL);
 428:	e8 e3       	ldi	r30, 0x38	; 56
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	10 82       	st	Z, r1
		PORTC= CONC(PORTC_PIN7_VAL,PORTC_PIN6_VAL,PORTC_PIN5_VAL,PORTC_PIN4_VAL,PORTC_PIN3_VAL,PORTC_PIN2_VAL,PORTC_PIN1_VAL,PORTC_PIN0_VAL);
 42e:	e5 e3       	ldi	r30, 0x35	; 53
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	87 ea       	ldi	r24, 0xA7	; 167
 434:	80 83       	st	Z, r24
		PORTD= CONC(PORTD_PIN7_VAL,PORTD_PIN6_VAL,PORTD_PIN5_VAL,PORTD_PIN4_VAL,PORTD_PIN3_VAL,PORTD_PIN2_VAL,PORTD_PIN1_VAL,PORTD_PIN0_VAL);
 436:	e2 e3       	ldi	r30, 0x32	; 50
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	83 ed       	ldi	r24, 0xD3	; 211
 43c:	80 83       	st	Z, r24
		local_enumError=DIO_OK;
 43e:	19 82       	std	Y+1, r1	; 0x01


	 return local_enumError;
 440:	89 81       	ldd	r24, Y+1	; 0x01

 }
 442:	0f 90       	pop	r0
 444:	cf 91       	pop	r28
 446:	df 91       	pop	r29
 448:	08 95       	ret

0000044a <Setport_Direction>:

ES_t Setport_Direction(u8 copy_u8_PortId,u8 copy_u8_value)
{
 44a:	df 93       	push	r29
 44c:	cf 93       	push	r28
 44e:	cd b7       	in	r28, 0x3d	; 61
 450:	de b7       	in	r29, 0x3e	; 62
 452:	27 97       	sbiw	r28, 0x07	; 7
 454:	0f b6       	in	r0, 0x3f	; 63
 456:	f8 94       	cli
 458:	de bf       	out	0x3e, r29	; 62
 45a:	0f be       	out	0x3f, r0	; 63
 45c:	cd bf       	out	0x3d, r28	; 61
 45e:	8c 83       	std	Y+4, r24	; 0x04
 460:	6d 83       	std	Y+5, r22	; 0x05
		ES_t local_enumError=DIO_NOK;
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	8b 83       	std	Y+3, r24	; 0x03

     if(copy_u8_PortId<=DIO_PORTD)
 466:	8c 81       	ldd	r24, Y+4	; 0x04
 468:	84 30       	cpi	r24, 0x04	; 4
 46a:	a0 f5       	brcc	.+104    	; 0x4d4 <Setport_Direction+0x8a>
     {
    	 switch(copy_u8_PortId)
 46c:	8c 81       	ldd	r24, Y+4	; 0x04
 46e:	28 2f       	mov	r18, r24
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	3f 83       	std	Y+7, r19	; 0x07
 474:	2e 83       	std	Y+6, r18	; 0x06
 476:	8e 81       	ldd	r24, Y+6	; 0x06
 478:	9f 81       	ldd	r25, Y+7	; 0x07
 47a:	81 30       	cpi	r24, 0x01	; 1
 47c:	91 05       	cpc	r25, r1
 47e:	d1 f0       	breq	.+52     	; 0x4b4 <Setport_Direction+0x6a>
 480:	2e 81       	ldd	r18, Y+6	; 0x06
 482:	3f 81       	ldd	r19, Y+7	; 0x07
 484:	22 30       	cpi	r18, 0x02	; 2
 486:	31 05       	cpc	r19, r1
 488:	2c f4       	brge	.+10     	; 0x494 <Setport_Direction+0x4a>
 48a:	8e 81       	ldd	r24, Y+6	; 0x06
 48c:	9f 81       	ldd	r25, Y+7	; 0x07
 48e:	00 97       	sbiw	r24, 0x00	; 0
 490:	61 f0       	breq	.+24     	; 0x4aa <Setport_Direction+0x60>
 492:	1e c0       	rjmp	.+60     	; 0x4d0 <Setport_Direction+0x86>
 494:	2e 81       	ldd	r18, Y+6	; 0x06
 496:	3f 81       	ldd	r19, Y+7	; 0x07
 498:	22 30       	cpi	r18, 0x02	; 2
 49a:	31 05       	cpc	r19, r1
 49c:	81 f0       	breq	.+32     	; 0x4be <Setport_Direction+0x74>
 49e:	8e 81       	ldd	r24, Y+6	; 0x06
 4a0:	9f 81       	ldd	r25, Y+7	; 0x07
 4a2:	83 30       	cpi	r24, 0x03	; 3
 4a4:	91 05       	cpc	r25, r1
 4a6:	81 f0       	breq	.+32     	; 0x4c8 <Setport_Direction+0x7e>
 4a8:	13 c0       	rjmp	.+38     	; 0x4d0 <Setport_Direction+0x86>
    	 {
    	 case DIO_PORTA:
    		 DDRA=copy_u8_value;
 4aa:	ea e3       	ldi	r30, 0x3A	; 58
 4ac:	f0 e0       	ldi	r31, 0x00	; 0
 4ae:	8d 81       	ldd	r24, Y+5	; 0x05
 4b0:	80 83       	st	Z, r24
 4b2:	0e c0       	rjmp	.+28     	; 0x4d0 <Setport_Direction+0x86>
    		 break;
    	 case DIO_PORTB:
    		 DDRB=copy_u8_value;
 4b4:	e7 e3       	ldi	r30, 0x37	; 55
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	8d 81       	ldd	r24, Y+5	; 0x05
 4ba:	80 83       	st	Z, r24
 4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <Setport_Direction+0x86>

    	    		 break;
    	 case DIO_PORTC:
    		 DDRC=copy_u8_value;
 4be:	e4 e3       	ldi	r30, 0x34	; 52
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	8d 81       	ldd	r24, Y+5	; 0x05
 4c4:	80 83       	st	Z, r24
 4c6:	04 c0       	rjmp	.+8      	; 0x4d0 <Setport_Direction+0x86>

    	    		 break;
    	 case DIO_PORTD:
    		 DDRD=copy_u8_value;
 4c8:	e1 e3       	ldi	r30, 0x31	; 49
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	8d 81       	ldd	r24, Y+5	; 0x05
 4ce:	80 83       	st	Z, r24

    	    		 break;
    	 }

 		ES_t local_enumError=DIO_OK;
 4d0:	1a 82       	std	Y+2, r1	; 0x02
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <Setport_Direction+0x8e>

     }

     else
     {
    		ES_t local_enumError=OUT_OF_RANGE;
 4d4:	83 e0       	ldi	r24, 0x03	; 3
 4d6:	89 83       	std	Y+1, r24	; 0x01
     }




		 return local_enumError;
 4d8:	8b 81       	ldd	r24, Y+3	; 0x03

}
 4da:	27 96       	adiw	r28, 0x07	; 7
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	f8 94       	cli
 4e0:	de bf       	out	0x3e, r29	; 62
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	cd bf       	out	0x3d, r28	; 61
 4e6:	cf 91       	pop	r28
 4e8:	df 91       	pop	r29
 4ea:	08 95       	ret

000004ec <Setport_value>:
ES_t Setport_value(u8 copy_u8_PortId,u8 copy_u8_value)
{
 4ec:	df 93       	push	r29
 4ee:	cf 93       	push	r28
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	27 97       	sbiw	r28, 0x07	; 7
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61
 500:	8c 83       	std	Y+4, r24	; 0x04
 502:	6d 83       	std	Y+5, r22	; 0x05

			ES_t local_enumError=DIO_NOK;
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	8b 83       	std	Y+3, r24	; 0x03

	     if(copy_u8_PortId<=DIO_PORTD)
 508:	8c 81       	ldd	r24, Y+4	; 0x04
 50a:	84 30       	cpi	r24, 0x04	; 4
 50c:	a0 f5       	brcc	.+104    	; 0x576 <Setport_value+0x8a>
	     {
	    	 switch(copy_u8_PortId)
 50e:	8c 81       	ldd	r24, Y+4	; 0x04
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	3f 83       	std	Y+7, r19	; 0x07
 516:	2e 83       	std	Y+6, r18	; 0x06
 518:	8e 81       	ldd	r24, Y+6	; 0x06
 51a:	9f 81       	ldd	r25, Y+7	; 0x07
 51c:	81 30       	cpi	r24, 0x01	; 1
 51e:	91 05       	cpc	r25, r1
 520:	d1 f0       	breq	.+52     	; 0x556 <Setport_value+0x6a>
 522:	2e 81       	ldd	r18, Y+6	; 0x06
 524:	3f 81       	ldd	r19, Y+7	; 0x07
 526:	22 30       	cpi	r18, 0x02	; 2
 528:	31 05       	cpc	r19, r1
 52a:	2c f4       	brge	.+10     	; 0x536 <Setport_value+0x4a>
 52c:	8e 81       	ldd	r24, Y+6	; 0x06
 52e:	9f 81       	ldd	r25, Y+7	; 0x07
 530:	00 97       	sbiw	r24, 0x00	; 0
 532:	61 f0       	breq	.+24     	; 0x54c <Setport_value+0x60>
 534:	1e c0       	rjmp	.+60     	; 0x572 <Setport_value+0x86>
 536:	2e 81       	ldd	r18, Y+6	; 0x06
 538:	3f 81       	ldd	r19, Y+7	; 0x07
 53a:	22 30       	cpi	r18, 0x02	; 2
 53c:	31 05       	cpc	r19, r1
 53e:	81 f0       	breq	.+32     	; 0x560 <Setport_value+0x74>
 540:	8e 81       	ldd	r24, Y+6	; 0x06
 542:	9f 81       	ldd	r25, Y+7	; 0x07
 544:	83 30       	cpi	r24, 0x03	; 3
 546:	91 05       	cpc	r25, r1
 548:	81 f0       	breq	.+32     	; 0x56a <Setport_value+0x7e>
 54a:	13 c0       	rjmp	.+38     	; 0x572 <Setport_value+0x86>
	    	 {
	    	 case DIO_PORTA:
	    		 PORTA=copy_u8_value;
 54c:	eb e3       	ldi	r30, 0x3B	; 59
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	8d 81       	ldd	r24, Y+5	; 0x05
 552:	80 83       	st	Z, r24
 554:	0e c0       	rjmp	.+28     	; 0x572 <Setport_value+0x86>
	    		 break;
	    	 case DIO_PORTB:
	    		 PORTB=copy_u8_value;
 556:	e8 e3       	ldi	r30, 0x38	; 56
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	8d 81       	ldd	r24, Y+5	; 0x05
 55c:	80 83       	st	Z, r24
 55e:	09 c0       	rjmp	.+18     	; 0x572 <Setport_value+0x86>

	    	    		 break;
	    	 case DIO_PORTC:
	    		 PORTC=copy_u8_value;
 560:	e5 e3       	ldi	r30, 0x35	; 53
 562:	f0 e0       	ldi	r31, 0x00	; 0
 564:	8d 81       	ldd	r24, Y+5	; 0x05
 566:	80 83       	st	Z, r24
 568:	04 c0       	rjmp	.+8      	; 0x572 <Setport_value+0x86>

	    	    		 break;
	    	 case DIO_PORTD:
	    		PORTD=copy_u8_value;
 56a:	e2 e3       	ldi	r30, 0x32	; 50
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	8d 81       	ldd	r24, Y+5	; 0x05
 570:	80 83       	st	Z, r24

	    	    		 break;
	    	 }

	 		ES_t local_enumError=DIO_OK;
 572:	1a 82       	std	Y+2, r1	; 0x02
 574:	02 c0       	rjmp	.+4      	; 0x57a <Setport_value+0x8e>

	     }

	     else
	     {
	    		ES_t local_enumError=OUT_OF_RANGE;
 576:	83 e0       	ldi	r24, 0x03	; 3
 578:	89 83       	std	Y+1, r24	; 0x01
	     }




			 return local_enumError;
 57a:	8b 81       	ldd	r24, Y+3	; 0x03


}
 57c:	27 96       	adiw	r28, 0x07	; 7
 57e:	0f b6       	in	r0, 0x3f	; 63
 580:	f8 94       	cli
 582:	de bf       	out	0x3e, r29	; 62
 584:	0f be       	out	0x3f, r0	; 63
 586:	cd bf       	out	0x3d, r28	; 61
 588:	cf 91       	pop	r28
 58a:	df 91       	pop	r29
 58c:	08 95       	ret

0000058e <TogglePort>:
        ES_t TogglePort(u8 copy_u8_PortId)

		{
 58e:	df 93       	push	r29
 590:	cf 93       	push	r28
 592:	00 d0       	rcall	.+0      	; 0x594 <TogglePort+0x6>
 594:	00 d0       	rcall	.+0      	; 0x596 <TogglePort+0x8>
 596:	00 d0       	rcall	.+0      	; 0x598 <TogglePort+0xa>
 598:	cd b7       	in	r28, 0x3d	; 61
 59a:	de b7       	in	r29, 0x3e	; 62
 59c:	8c 83       	std	Y+4, r24	; 0x04
					ES_t local_enumError=DIO_NOK;
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	8b 83       	std	Y+3, r24	; 0x03

			     if(copy_u8_PortId<=DIO_PORTD)
 5a2:	8c 81       	ldd	r24, Y+4	; 0x04
 5a4:	84 30       	cpi	r24, 0x04	; 4
 5a6:	08 f0       	brcs	.+2      	; 0x5aa <TogglePort+0x1c>
 5a8:	40 c0       	rjmp	.+128    	; 0x62a <TogglePort+0x9c>
			     {
			    	 switch(copy_u8_PortId)
 5aa:	8c 81       	ldd	r24, Y+4	; 0x04
 5ac:	28 2f       	mov	r18, r24
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	3e 83       	std	Y+6, r19	; 0x06
 5b2:	2d 83       	std	Y+5, r18	; 0x05
 5b4:	8d 81       	ldd	r24, Y+5	; 0x05
 5b6:	9e 81       	ldd	r25, Y+6	; 0x06
 5b8:	81 30       	cpi	r24, 0x01	; 1
 5ba:	91 05       	cpc	r25, r1
 5bc:	e9 f0       	breq	.+58     	; 0x5f8 <TogglePort+0x6a>
 5be:	2d 81       	ldd	r18, Y+5	; 0x05
 5c0:	3e 81       	ldd	r19, Y+6	; 0x06
 5c2:	22 30       	cpi	r18, 0x02	; 2
 5c4:	31 05       	cpc	r19, r1
 5c6:	2c f4       	brge	.+10     	; 0x5d2 <TogglePort+0x44>
 5c8:	8d 81       	ldd	r24, Y+5	; 0x05
 5ca:	9e 81       	ldd	r25, Y+6	; 0x06
 5cc:	00 97       	sbiw	r24, 0x00	; 0
 5ce:	61 f0       	breq	.+24     	; 0x5e8 <TogglePort+0x5a>
 5d0:	2a c0       	rjmp	.+84     	; 0x626 <TogglePort+0x98>
 5d2:	2d 81       	ldd	r18, Y+5	; 0x05
 5d4:	3e 81       	ldd	r19, Y+6	; 0x06
 5d6:	22 30       	cpi	r18, 0x02	; 2
 5d8:	31 05       	cpc	r19, r1
 5da:	b1 f0       	breq	.+44     	; 0x608 <TogglePort+0x7a>
 5dc:	8d 81       	ldd	r24, Y+5	; 0x05
 5de:	9e 81       	ldd	r25, Y+6	; 0x06
 5e0:	83 30       	cpi	r24, 0x03	; 3
 5e2:	91 05       	cpc	r25, r1
 5e4:	c9 f0       	breq	.+50     	; 0x618 <TogglePort+0x8a>
 5e6:	1f c0       	rjmp	.+62     	; 0x626 <TogglePort+0x98>
			    	 {
			    	 case DIO_PORTA:
			    		 PORTA=~PORTA;
 5e8:	ab e3       	ldi	r26, 0x3B	; 59
 5ea:	b0 e0       	ldi	r27, 0x00	; 0
 5ec:	eb e3       	ldi	r30, 0x3B	; 59
 5ee:	f0 e0       	ldi	r31, 0x00	; 0
 5f0:	80 81       	ld	r24, Z
 5f2:	80 95       	com	r24
 5f4:	8c 93       	st	X, r24
 5f6:	17 c0       	rjmp	.+46     	; 0x626 <TogglePort+0x98>
			    		 break;

			    	 case DIO_PORTB:
			    		 PORTB=~PORTB;
 5f8:	a8 e3       	ldi	r26, 0x38	; 56
 5fa:	b0 e0       	ldi	r27, 0x00	; 0
 5fc:	e8 e3       	ldi	r30, 0x38	; 56
 5fe:	f0 e0       	ldi	r31, 0x00	; 0
 600:	80 81       	ld	r24, Z
 602:	80 95       	com	r24
 604:	8c 93       	st	X, r24
 606:	0f c0       	rjmp	.+30     	; 0x626 <TogglePort+0x98>

			    	    		 break;
			    	 case DIO_PORTC:
			    		 PORTC=~PORTC;
 608:	a5 e3       	ldi	r26, 0x35	; 53
 60a:	b0 e0       	ldi	r27, 0x00	; 0
 60c:	e5 e3       	ldi	r30, 0x35	; 53
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	80 81       	ld	r24, Z
 612:	80 95       	com	r24
 614:	8c 93       	st	X, r24
 616:	07 c0       	rjmp	.+14     	; 0x626 <TogglePort+0x98>

			    	    		 break;
			    	 case DIO_PORTD:
			    		PORTD=~PORTD;
 618:	a2 e3       	ldi	r26, 0x32	; 50
 61a:	b0 e0       	ldi	r27, 0x00	; 0
 61c:	e2 e3       	ldi	r30, 0x32	; 50
 61e:	f0 e0       	ldi	r31, 0x00	; 0
 620:	80 81       	ld	r24, Z
 622:	80 95       	com	r24
 624:	8c 93       	st	X, r24

			    	    		 break;
			    	 }

			 		ES_t local_enumError=DIO_OK;
 626:	1a 82       	std	Y+2, r1	; 0x02
 628:	02 c0       	rjmp	.+4      	; 0x62e <TogglePort+0xa0>

			     }

			     else
			     {
			    		ES_t local_enumError=OUT_OF_RANGE;
 62a:	83 e0       	ldi	r24, 0x03	; 3
 62c:	89 83       	std	Y+1, r24	; 0x01

			     }
			 return local_enumError;
 62e:	8b 81       	ldd	r24, Y+3	; 0x03

	}
 630:	26 96       	adiw	r28, 0x06	; 6
 632:	0f b6       	in	r0, 0x3f	; 63
 634:	f8 94       	cli
 636:	de bf       	out	0x3e, r29	; 62
 638:	0f be       	out	0x3f, r0	; 63
 63a:	cd bf       	out	0x3d, r28	; 61
 63c:	cf 91       	pop	r28
 63e:	df 91       	pop	r29
 640:	08 95       	ret

00000642 <GetPort>:

	ES_t GetPort(u8 copy_u8_PortId,u8 *copy_pu8_value)
{
 642:	df 93       	push	r29
 644:	cf 93       	push	r28
 646:	cd b7       	in	r28, 0x3d	; 61
 648:	de b7       	in	r29, 0x3e	; 62
 64a:	29 97       	sbiw	r28, 0x09	; 9
 64c:	0f b6       	in	r0, 0x3f	; 63
 64e:	f8 94       	cli
 650:	de bf       	out	0x3e, r29	; 62
 652:	0f be       	out	0x3f, r0	; 63
 654:	cd bf       	out	0x3d, r28	; 61
 656:	8d 83       	std	Y+5, r24	; 0x05
 658:	7f 83       	std	Y+7, r23	; 0x07
 65a:	6e 83       	std	Y+6, r22	; 0x06
		ES_t local_enumError=DIO_NOK;
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	8c 83       	std	Y+4, r24	; 0x04
if(copy_pu8_value!=NULL)
 660:	8e 81       	ldd	r24, Y+6	; 0x06
 662:	9f 81       	ldd	r25, Y+7	; 0x07
 664:	00 97       	sbiw	r24, 0x00	; 0
 666:	09 f4       	brne	.+2      	; 0x66a <GetPort+0x28>
 668:	42 c0       	rjmp	.+132    	; 0x6ee <GetPort+0xac>
{
	   if(copy_u8_PortId<=DIO_PORTD)
 66a:	8d 81       	ldd	r24, Y+5	; 0x05
 66c:	84 30       	cpi	r24, 0x04	; 4
 66e:	e0 f5       	brcc	.+120    	; 0x6e8 <GetPort+0xa6>
	   {
		   switch(copy_u8_PortId)
 670:	8d 81       	ldd	r24, Y+5	; 0x05
 672:	28 2f       	mov	r18, r24
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	39 87       	std	Y+9, r19	; 0x09
 678:	28 87       	std	Y+8, r18	; 0x08
 67a:	88 85       	ldd	r24, Y+8	; 0x08
 67c:	99 85       	ldd	r25, Y+9	; 0x09
 67e:	81 30       	cpi	r24, 0x01	; 1
 680:	91 05       	cpc	r25, r1
 682:	e1 f0       	breq	.+56     	; 0x6bc <GetPort+0x7a>
 684:	28 85       	ldd	r18, Y+8	; 0x08
 686:	39 85       	ldd	r19, Y+9	; 0x09
 688:	22 30       	cpi	r18, 0x02	; 2
 68a:	31 05       	cpc	r19, r1
 68c:	2c f4       	brge	.+10     	; 0x698 <GetPort+0x56>
 68e:	88 85       	ldd	r24, Y+8	; 0x08
 690:	99 85       	ldd	r25, Y+9	; 0x09
 692:	00 97       	sbiw	r24, 0x00	; 0
 694:	61 f0       	breq	.+24     	; 0x6ae <GetPort+0x6c>
 696:	26 c0       	rjmp	.+76     	; 0x6e4 <GetPort+0xa2>
 698:	28 85       	ldd	r18, Y+8	; 0x08
 69a:	39 85       	ldd	r19, Y+9	; 0x09
 69c:	22 30       	cpi	r18, 0x02	; 2
 69e:	31 05       	cpc	r19, r1
 6a0:	a1 f0       	breq	.+40     	; 0x6ca <GetPort+0x88>
 6a2:	88 85       	ldd	r24, Y+8	; 0x08
 6a4:	99 85       	ldd	r25, Y+9	; 0x09
 6a6:	83 30       	cpi	r24, 0x03	; 3
 6a8:	91 05       	cpc	r25, r1
 6aa:	b1 f0       	breq	.+44     	; 0x6d8 <GetPort+0x96>
 6ac:	1b c0       	rjmp	.+54     	; 0x6e4 <GetPort+0xa2>
		   {
		   case DIO_PORTA:
			   *copy_pu8_value=PINA;
 6ae:	e9 e3       	ldi	r30, 0x39	; 57
 6b0:	f0 e0       	ldi	r31, 0x00	; 0
 6b2:	80 81       	ld	r24, Z
 6b4:	ee 81       	ldd	r30, Y+6	; 0x06
 6b6:	ff 81       	ldd	r31, Y+7	; 0x07
 6b8:	80 83       	st	Z, r24
 6ba:	14 c0       	rjmp	.+40     	; 0x6e4 <GetPort+0xa2>
			   break;

		       case DIO_PORTB:
		  			   *copy_pu8_value=PINB;
 6bc:	e6 e3       	ldi	r30, 0x36	; 54
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	80 81       	ld	r24, Z
 6c2:	ee 81       	ldd	r30, Y+6	; 0x06
 6c4:	ff 81       	ldd	r31, Y+7	; 0x07
 6c6:	80 83       	st	Z, r24
 6c8:	0d c0       	rjmp	.+26     	; 0x6e4 <GetPort+0xa2>
		  			  break;

		  			   case DIO_PORTC:
		  				   *copy_pu8_value=PINC;
 6ca:	e3 e3       	ldi	r30, 0x33	; 51
 6cc:	f0 e0       	ldi	r31, 0x00	; 0
 6ce:	80 81       	ld	r24, Z
 6d0:	ee 81       	ldd	r30, Y+6	; 0x06
 6d2:	ff 81       	ldd	r31, Y+7	; 0x07
 6d4:	80 83       	st	Z, r24
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <GetPort+0xa2>
		  				   break;

		  				   case DIO_PORTD:
		  					   *copy_pu8_value=PIND;
 6d8:	e0 e3       	ldi	r30, 0x30	; 48
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	ee 81       	ldd	r30, Y+6	; 0x06
 6e0:	ff 81       	ldd	r31, Y+7	; 0x07
 6e2:	80 83       	st	Z, r24
		  					   break;

		   }

			ES_t local_enumError=DIO_OK;
 6e4:	1b 82       	std	Y+3, r1	; 0x03
 6e6:	05 c0       	rjmp	.+10     	; 0x6f2 <GetPort+0xb0>

	   }
	   else
	   {
			ES_t local_enumError=OUT_OF_RANGE;
 6e8:	83 e0       	ldi	r24, 0x03	; 3
 6ea:	8a 83       	std	Y+2, r24	; 0x02
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <GetPort+0xb0>
	   }

}
else
{
	ES_t local_enumError=DIO_NULLPOINTER;
 6ee:	82 e0       	ldi	r24, 0x02	; 2
 6f0:	89 83       	std	Y+1, r24	; 0x01
}

			 return local_enumError;
 6f2:	8c 81       	ldd	r24, Y+4	; 0x04

}
 6f4:	29 96       	adiw	r28, 0x09	; 9
 6f6:	0f b6       	in	r0, 0x3f	; 63
 6f8:	f8 94       	cli
 6fa:	de bf       	out	0x3e, r29	; 62
 6fc:	0f be       	out	0x3f, r0	; 63
 6fe:	cd bf       	out	0x3d, r28	; 61
 700:	cf 91       	pop	r28
 702:	df 91       	pop	r29
 704:	08 95       	ret

00000706 <Setpin_Direction>:

	ES_t Setpin_Direction(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 copy_u8_value)
{
 706:	df 93       	push	r29
 708:	cf 93       	push	r28
 70a:	cd b7       	in	r28, 0x3d	; 61
 70c:	de b7       	in	r29, 0x3e	; 62
 70e:	28 97       	sbiw	r28, 0x08	; 8
 710:	0f b6       	in	r0, 0x3f	; 63
 712:	f8 94       	cli
 714:	de bf       	out	0x3e, r29	; 62
 716:	0f be       	out	0x3f, r0	; 63
 718:	cd bf       	out	0x3d, r28	; 61
 71a:	8c 83       	std	Y+4, r24	; 0x04
 71c:	6d 83       	std	Y+5, r22	; 0x05
 71e:	4e 83       	std	Y+6, r20	; 0x06
		ES_t local_enumError=DIO_NOK;
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	8b 83       	std	Y+3, r24	; 0x03
		if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7&&copy_u8_value<=OUTPUT)
 724:	8c 81       	ldd	r24, Y+4	; 0x04
 726:	84 30       	cpi	r24, 0x04	; 4
 728:	08 f0       	brcs	.+2      	; 0x72c <Setpin_Direction+0x26>
 72a:	d0 c0       	rjmp	.+416    	; 0x8cc <__stack+0x6d>
 72c:	8d 81       	ldd	r24, Y+5	; 0x05
 72e:	88 30       	cpi	r24, 0x08	; 8
 730:	08 f0       	brcs	.+2      	; 0x734 <Setpin_Direction+0x2e>
 732:	cc c0       	rjmp	.+408    	; 0x8cc <__stack+0x6d>
 734:	8e 81       	ldd	r24, Y+6	; 0x06
 736:	82 30       	cpi	r24, 0x02	; 2
 738:	08 f0       	brcs	.+2      	; 0x73c <Setpin_Direction+0x36>
 73a:	c8 c0       	rjmp	.+400    	; 0x8cc <__stack+0x6d>
		{
			switch(copy_u8_PortId)
 73c:	8c 81       	ldd	r24, Y+4	; 0x04
 73e:	28 2f       	mov	r18, r24
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	38 87       	std	Y+8, r19	; 0x08
 744:	2f 83       	std	Y+7, r18	; 0x07
 746:	6f 81       	ldd	r22, Y+7	; 0x07
 748:	78 85       	ldd	r23, Y+8	; 0x08
 74a:	61 30       	cpi	r22, 0x01	; 1
 74c:	71 05       	cpc	r23, r1
 74e:	09 f4       	brne	.+2      	; 0x752 <Setpin_Direction+0x4c>
 750:	41 c0       	rjmp	.+130    	; 0x7d4 <Setpin_Direction+0xce>
 752:	8f 81       	ldd	r24, Y+7	; 0x07
 754:	98 85       	ldd	r25, Y+8	; 0x08
 756:	82 30       	cpi	r24, 0x02	; 2
 758:	91 05       	cpc	r25, r1
 75a:	34 f4       	brge	.+12     	; 0x768 <Setpin_Direction+0x62>
 75c:	2f 81       	ldd	r18, Y+7	; 0x07
 75e:	38 85       	ldd	r19, Y+8	; 0x08
 760:	21 15       	cp	r18, r1
 762:	31 05       	cpc	r19, r1
 764:	71 f0       	breq	.+28     	; 0x782 <Setpin_Direction+0x7c>
 766:	b0 c0       	rjmp	.+352    	; 0x8c8 <__stack+0x69>
 768:	6f 81       	ldd	r22, Y+7	; 0x07
 76a:	78 85       	ldd	r23, Y+8	; 0x08
 76c:	62 30       	cpi	r22, 0x02	; 2
 76e:	71 05       	cpc	r23, r1
 770:	09 f4       	brne	.+2      	; 0x774 <Setpin_Direction+0x6e>
 772:	59 c0       	rjmp	.+178    	; 0x826 <Setpin_Direction+0x120>
 774:	8f 81       	ldd	r24, Y+7	; 0x07
 776:	98 85       	ldd	r25, Y+8	; 0x08
 778:	83 30       	cpi	r24, 0x03	; 3
 77a:	91 05       	cpc	r25, r1
 77c:	09 f4       	brne	.+2      	; 0x780 <Setpin_Direction+0x7a>
 77e:	7c c0       	rjmp	.+248    	; 0x878 <__stack+0x19>
 780:	a3 c0       	rjmp	.+326    	; 0x8c8 <__stack+0x69>
					   {
		 case DIO_PORTA:
			 DDRA &=~(1<<copy_u8_PIN_Id);
 782:	aa e3       	ldi	r26, 0x3A	; 58
 784:	b0 e0       	ldi	r27, 0x00	; 0
 786:	ea e3       	ldi	r30, 0x3A	; 58
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	80 81       	ld	r24, Z
 78c:	48 2f       	mov	r20, r24
 78e:	8d 81       	ldd	r24, Y+5	; 0x05
 790:	28 2f       	mov	r18, r24
 792:	30 e0       	ldi	r19, 0x00	; 0
 794:	81 e0       	ldi	r24, 0x01	; 1
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	02 c0       	rjmp	.+4      	; 0x79e <Setpin_Direction+0x98>
 79a:	88 0f       	add	r24, r24
 79c:	99 1f       	adc	r25, r25
 79e:	2a 95       	dec	r18
 7a0:	e2 f7       	brpl	.-8      	; 0x79a <Setpin_Direction+0x94>
 7a2:	80 95       	com	r24
 7a4:	84 23       	and	r24, r20
 7a6:	8c 93       	st	X, r24
			 DDRA |=(copy_u8_value<<copy_u8_PIN_Id);
 7a8:	aa e3       	ldi	r26, 0x3A	; 58
 7aa:	b0 e0       	ldi	r27, 0x00	; 0
 7ac:	ea e3       	ldi	r30, 0x3A	; 58
 7ae:	f0 e0       	ldi	r31, 0x00	; 0
 7b0:	80 81       	ld	r24, Z
 7b2:	48 2f       	mov	r20, r24
 7b4:	8e 81       	ldd	r24, Y+6	; 0x06
 7b6:	28 2f       	mov	r18, r24
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	8d 81       	ldd	r24, Y+5	; 0x05
 7bc:	88 2f       	mov	r24, r24
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	b9 01       	movw	r22, r18
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <Setpin_Direction+0xc2>
 7c4:	66 0f       	add	r22, r22
 7c6:	77 1f       	adc	r23, r23
 7c8:	8a 95       	dec	r24
 7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <Setpin_Direction+0xbe>
 7cc:	cb 01       	movw	r24, r22
 7ce:	84 2b       	or	r24, r20
 7d0:	8c 93       	st	X, r24
 7d2:	7a c0       	rjmp	.+244    	; 0x8c8 <__stack+0x69>
	 	                break;
	     case DIO_PORTB:
	    	  DDRB &=~(1<<copy_u8_PIN_Id);
 7d4:	a7 e3       	ldi	r26, 0x37	; 55
 7d6:	b0 e0       	ldi	r27, 0x00	; 0
 7d8:	e7 e3       	ldi	r30, 0x37	; 55
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 81       	ld	r24, Z
 7de:	48 2f       	mov	r20, r24
 7e0:	8d 81       	ldd	r24, Y+5	; 0x05
 7e2:	28 2f       	mov	r18, r24
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	81 e0       	ldi	r24, 0x01	; 1
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <Setpin_Direction+0xea>
 7ec:	88 0f       	add	r24, r24
 7ee:	99 1f       	adc	r25, r25
 7f0:	2a 95       	dec	r18
 7f2:	e2 f7       	brpl	.-8      	; 0x7ec <Setpin_Direction+0xe6>
 7f4:	80 95       	com	r24
 7f6:	84 23       	and	r24, r20
 7f8:	8c 93       	st	X, r24
	    				 DDRB |=(copy_u8_value<<copy_u8_PIN_Id);
 7fa:	a7 e3       	ldi	r26, 0x37	; 55
 7fc:	b0 e0       	ldi	r27, 0x00	; 0
 7fe:	e7 e3       	ldi	r30, 0x37	; 55
 800:	f0 e0       	ldi	r31, 0x00	; 0
 802:	80 81       	ld	r24, Z
 804:	48 2f       	mov	r20, r24
 806:	8e 81       	ldd	r24, Y+6	; 0x06
 808:	28 2f       	mov	r18, r24
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	8d 81       	ldd	r24, Y+5	; 0x05
 80e:	88 2f       	mov	r24, r24
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	b9 01       	movw	r22, r18
 814:	02 c0       	rjmp	.+4      	; 0x81a <Setpin_Direction+0x114>
 816:	66 0f       	add	r22, r22
 818:	77 1f       	adc	r23, r23
 81a:	8a 95       	dec	r24
 81c:	e2 f7       	brpl	.-8      	; 0x816 <Setpin_Direction+0x110>
 81e:	cb 01       	movw	r24, r22
 820:	84 2b       	or	r24, r20
 822:	8c 93       	st	X, r24
 824:	51 c0       	rjmp	.+162    	; 0x8c8 <__stack+0x69>
	  	            break;
	     case DIO_PORTC:
	    	 DDRC &=~(1<<copy_u8_PIN_Id);
 826:	a4 e3       	ldi	r26, 0x34	; 52
 828:	b0 e0       	ldi	r27, 0x00	; 0
 82a:	e4 e3       	ldi	r30, 0x34	; 52
 82c:	f0 e0       	ldi	r31, 0x00	; 0
 82e:	80 81       	ld	r24, Z
 830:	48 2f       	mov	r20, r24
 832:	8d 81       	ldd	r24, Y+5	; 0x05
 834:	28 2f       	mov	r18, r24
 836:	30 e0       	ldi	r19, 0x00	; 0
 838:	81 e0       	ldi	r24, 0x01	; 1
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	02 c0       	rjmp	.+4      	; 0x842 <Setpin_Direction+0x13c>
 83e:	88 0f       	add	r24, r24
 840:	99 1f       	adc	r25, r25
 842:	2a 95       	dec	r18
 844:	e2 f7       	brpl	.-8      	; 0x83e <Setpin_Direction+0x138>
 846:	80 95       	com	r24
 848:	84 23       	and	r24, r20
 84a:	8c 93       	st	X, r24
	    				 DDRC |=(copy_u8_value<<copy_u8_PIN_Id);
 84c:	a4 e3       	ldi	r26, 0x34	; 52
 84e:	b0 e0       	ldi	r27, 0x00	; 0
 850:	e4 e3       	ldi	r30, 0x34	; 52
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	80 81       	ld	r24, Z
 856:	48 2f       	mov	r20, r24
 858:	8e 81       	ldd	r24, Y+6	; 0x06
 85a:	28 2f       	mov	r18, r24
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	8d 81       	ldd	r24, Y+5	; 0x05
 860:	88 2f       	mov	r24, r24
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	b9 01       	movw	r22, r18
 866:	02 c0       	rjmp	.+4      	; 0x86c <__stack+0xd>
 868:	66 0f       	add	r22, r22
 86a:	77 1f       	adc	r23, r23
 86c:	8a 95       	dec	r24
 86e:	e2 f7       	brpl	.-8      	; 0x868 <__stack+0x9>
 870:	cb 01       	movw	r24, r22
 872:	84 2b       	or	r24, r20
 874:	8c 93       	st	X, r24
 876:	28 c0       	rjmp	.+80     	; 0x8c8 <__stack+0x69>
	 	 			   break;

	    case DIO_PORTD:
	    	 DDRD &=~(1<<copy_u8_PIN_Id);
 878:	a1 e3       	ldi	r26, 0x31	; 49
 87a:	b0 e0       	ldi	r27, 0x00	; 0
 87c:	e1 e3       	ldi	r30, 0x31	; 49
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	80 81       	ld	r24, Z
 882:	48 2f       	mov	r20, r24
 884:	8d 81       	ldd	r24, Y+5	; 0x05
 886:	28 2f       	mov	r18, r24
 888:	30 e0       	ldi	r19, 0x00	; 0
 88a:	81 e0       	ldi	r24, 0x01	; 1
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <__stack+0x35>
 890:	88 0f       	add	r24, r24
 892:	99 1f       	adc	r25, r25
 894:	2a 95       	dec	r18
 896:	e2 f7       	brpl	.-8      	; 0x890 <__stack+0x31>
 898:	80 95       	com	r24
 89a:	84 23       	and	r24, r20
 89c:	8c 93       	st	X, r24
	    				 DDRD |=(copy_u8_value<<copy_u8_PIN_Id);
 89e:	a1 e3       	ldi	r26, 0x31	; 49
 8a0:	b0 e0       	ldi	r27, 0x00	; 0
 8a2:	e1 e3       	ldi	r30, 0x31	; 49
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	80 81       	ld	r24, Z
 8a8:	48 2f       	mov	r20, r24
 8aa:	8e 81       	ldd	r24, Y+6	; 0x06
 8ac:	28 2f       	mov	r18, r24
 8ae:	30 e0       	ldi	r19, 0x00	; 0
 8b0:	8d 81       	ldd	r24, Y+5	; 0x05
 8b2:	88 2f       	mov	r24, r24
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	b9 01       	movw	r22, r18
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <__stack+0x5f>
 8ba:	66 0f       	add	r22, r22
 8bc:	77 1f       	adc	r23, r23
 8be:	8a 95       	dec	r24
 8c0:	e2 f7       	brpl	.-8      	; 0x8ba <__stack+0x5b>
 8c2:	cb 01       	movw	r24, r22
 8c4:	84 2b       	or	r24, r20
 8c6:	8c 93       	st	X, r24
					   break;

					   }

			ES_t local_enumError=DIO_OK;
 8c8:	1a 82       	std	Y+2, r1	; 0x02
 8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <__stack+0x71>

		}
		else
		{
			ES_t local_enumError=OUT_OF_RANGE;
 8cc:	83 e0       	ldi	r24, 0x03	; 3
 8ce:	89 83       	std	Y+1, r24	; 0x01

		}


			 return local_enumError;
 8d0:	8b 81       	ldd	r24, Y+3	; 0x03

}
 8d2:	28 96       	adiw	r28, 0x08	; 8
 8d4:	0f b6       	in	r0, 0x3f	; 63
 8d6:	f8 94       	cli
 8d8:	de bf       	out	0x3e, r29	; 62
 8da:	0f be       	out	0x3f, r0	; 63
 8dc:	cd bf       	out	0x3d, r28	; 61
 8de:	cf 91       	pop	r28
 8e0:	df 91       	pop	r29
 8e2:	08 95       	ret

000008e4 <Setpin_value>:
	ES_t Setpin_value(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 copy_u8_value)
{
 8e4:	df 93       	push	r29
 8e6:	cf 93       	push	r28
 8e8:	cd b7       	in	r28, 0x3d	; 61
 8ea:	de b7       	in	r29, 0x3e	; 62
 8ec:	28 97       	sbiw	r28, 0x08	; 8
 8ee:	0f b6       	in	r0, 0x3f	; 63
 8f0:	f8 94       	cli
 8f2:	de bf       	out	0x3e, r29	; 62
 8f4:	0f be       	out	0x3f, r0	; 63
 8f6:	cd bf       	out	0x3d, r28	; 61
 8f8:	8c 83       	std	Y+4, r24	; 0x04
 8fa:	6d 83       	std	Y+5, r22	; 0x05
 8fc:	4e 83       	std	Y+6, r20	; 0x06
		ES_t local_enumError=DIO_NOK;
 8fe:	81 e0       	ldi	r24, 0x01	; 1
 900:	8b 83       	std	Y+3, r24	; 0x03
					if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7&&copy_u8_value<=OUTPUT)
 902:	8c 81       	ldd	r24, Y+4	; 0x04
 904:	84 30       	cpi	r24, 0x04	; 4
 906:	08 f0       	brcs	.+2      	; 0x90a <Setpin_value+0x26>
 908:	d0 c0       	rjmp	.+416    	; 0xaaa <Setpin_value+0x1c6>
 90a:	8d 81       	ldd	r24, Y+5	; 0x05
 90c:	88 30       	cpi	r24, 0x08	; 8
 90e:	08 f0       	brcs	.+2      	; 0x912 <Setpin_value+0x2e>
 910:	cc c0       	rjmp	.+408    	; 0xaaa <Setpin_value+0x1c6>
 912:	8e 81       	ldd	r24, Y+6	; 0x06
 914:	82 30       	cpi	r24, 0x02	; 2
 916:	08 f0       	brcs	.+2      	; 0x91a <Setpin_value+0x36>
 918:	c8 c0       	rjmp	.+400    	; 0xaaa <Setpin_value+0x1c6>
					{
						switch(copy_u8_PortId)
 91a:	8c 81       	ldd	r24, Y+4	; 0x04
 91c:	28 2f       	mov	r18, r24
 91e:	30 e0       	ldi	r19, 0x00	; 0
 920:	38 87       	std	Y+8, r19	; 0x08
 922:	2f 83       	std	Y+7, r18	; 0x07
 924:	6f 81       	ldd	r22, Y+7	; 0x07
 926:	78 85       	ldd	r23, Y+8	; 0x08
 928:	61 30       	cpi	r22, 0x01	; 1
 92a:	71 05       	cpc	r23, r1
 92c:	09 f4       	brne	.+2      	; 0x930 <Setpin_value+0x4c>
 92e:	41 c0       	rjmp	.+130    	; 0x9b2 <Setpin_value+0xce>
 930:	8f 81       	ldd	r24, Y+7	; 0x07
 932:	98 85       	ldd	r25, Y+8	; 0x08
 934:	82 30       	cpi	r24, 0x02	; 2
 936:	91 05       	cpc	r25, r1
 938:	34 f4       	brge	.+12     	; 0x946 <Setpin_value+0x62>
 93a:	2f 81       	ldd	r18, Y+7	; 0x07
 93c:	38 85       	ldd	r19, Y+8	; 0x08
 93e:	21 15       	cp	r18, r1
 940:	31 05       	cpc	r19, r1
 942:	71 f0       	breq	.+28     	; 0x960 <Setpin_value+0x7c>
 944:	b0 c0       	rjmp	.+352    	; 0xaa6 <Setpin_value+0x1c2>
 946:	6f 81       	ldd	r22, Y+7	; 0x07
 948:	78 85       	ldd	r23, Y+8	; 0x08
 94a:	62 30       	cpi	r22, 0x02	; 2
 94c:	71 05       	cpc	r23, r1
 94e:	09 f4       	brne	.+2      	; 0x952 <Setpin_value+0x6e>
 950:	59 c0       	rjmp	.+178    	; 0xa04 <Setpin_value+0x120>
 952:	8f 81       	ldd	r24, Y+7	; 0x07
 954:	98 85       	ldd	r25, Y+8	; 0x08
 956:	83 30       	cpi	r24, 0x03	; 3
 958:	91 05       	cpc	r25, r1
 95a:	09 f4       	brne	.+2      	; 0x95e <Setpin_value+0x7a>
 95c:	7c c0       	rjmp	.+248    	; 0xa56 <Setpin_value+0x172>
 95e:	a3 c0       	rjmp	.+326    	; 0xaa6 <Setpin_value+0x1c2>
								   {
					 case DIO_PORTA:
						 PORTA &=~(1<<copy_u8_PIN_Id);
 960:	ab e3       	ldi	r26, 0x3B	; 59
 962:	b0 e0       	ldi	r27, 0x00	; 0
 964:	eb e3       	ldi	r30, 0x3B	; 59
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	80 81       	ld	r24, Z
 96a:	48 2f       	mov	r20, r24
 96c:	8d 81       	ldd	r24, Y+5	; 0x05
 96e:	28 2f       	mov	r18, r24
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	02 c0       	rjmp	.+4      	; 0x97c <Setpin_value+0x98>
 978:	88 0f       	add	r24, r24
 97a:	99 1f       	adc	r25, r25
 97c:	2a 95       	dec	r18
 97e:	e2 f7       	brpl	.-8      	; 0x978 <Setpin_value+0x94>
 980:	80 95       	com	r24
 982:	84 23       	and	r24, r20
 984:	8c 93       	st	X, r24
						 PORTA |=(copy_u8_value<<copy_u8_PIN_Id);
 986:	ab e3       	ldi	r26, 0x3B	; 59
 988:	b0 e0       	ldi	r27, 0x00	; 0
 98a:	eb e3       	ldi	r30, 0x3B	; 59
 98c:	f0 e0       	ldi	r31, 0x00	; 0
 98e:	80 81       	ld	r24, Z
 990:	48 2f       	mov	r20, r24
 992:	8e 81       	ldd	r24, Y+6	; 0x06
 994:	28 2f       	mov	r18, r24
 996:	30 e0       	ldi	r19, 0x00	; 0
 998:	8d 81       	ldd	r24, Y+5	; 0x05
 99a:	88 2f       	mov	r24, r24
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	b9 01       	movw	r22, r18
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <Setpin_value+0xc2>
 9a2:	66 0f       	add	r22, r22
 9a4:	77 1f       	adc	r23, r23
 9a6:	8a 95       	dec	r24
 9a8:	e2 f7       	brpl	.-8      	; 0x9a2 <Setpin_value+0xbe>
 9aa:	cb 01       	movw	r24, r22
 9ac:	84 2b       	or	r24, r20
 9ae:	8c 93       	st	X, r24
 9b0:	7a c0       	rjmp	.+244    	; 0xaa6 <Setpin_value+0x1c2>
				 	                break;
				     case DIO_PORTB:
				    	 PORTB &=~(1<<copy_u8_PIN_Id);
 9b2:	a8 e3       	ldi	r26, 0x38	; 56
 9b4:	b0 e0       	ldi	r27, 0x00	; 0
 9b6:	e8 e3       	ldi	r30, 0x38	; 56
 9b8:	f0 e0       	ldi	r31, 0x00	; 0
 9ba:	80 81       	ld	r24, Z
 9bc:	48 2f       	mov	r20, r24
 9be:	8d 81       	ldd	r24, Y+5	; 0x05
 9c0:	28 2f       	mov	r18, r24
 9c2:	30 e0       	ldi	r19, 0x00	; 0
 9c4:	81 e0       	ldi	r24, 0x01	; 1
 9c6:	90 e0       	ldi	r25, 0x00	; 0
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <Setpin_value+0xea>
 9ca:	88 0f       	add	r24, r24
 9cc:	99 1f       	adc	r25, r25
 9ce:	2a 95       	dec	r18
 9d0:	e2 f7       	brpl	.-8      	; 0x9ca <Setpin_value+0xe6>
 9d2:	80 95       	com	r24
 9d4:	84 23       	and	r24, r20
 9d6:	8c 93       	st	X, r24
				    	 PORTB |=(copy_u8_value<<copy_u8_PIN_Id);
 9d8:	a8 e3       	ldi	r26, 0x38	; 56
 9da:	b0 e0       	ldi	r27, 0x00	; 0
 9dc:	e8 e3       	ldi	r30, 0x38	; 56
 9de:	f0 e0       	ldi	r31, 0x00	; 0
 9e0:	80 81       	ld	r24, Z
 9e2:	48 2f       	mov	r20, r24
 9e4:	8e 81       	ldd	r24, Y+6	; 0x06
 9e6:	28 2f       	mov	r18, r24
 9e8:	30 e0       	ldi	r19, 0x00	; 0
 9ea:	8d 81       	ldd	r24, Y+5	; 0x05
 9ec:	88 2f       	mov	r24, r24
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	b9 01       	movw	r22, r18
 9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <Setpin_value+0x114>
 9f4:	66 0f       	add	r22, r22
 9f6:	77 1f       	adc	r23, r23
 9f8:	8a 95       	dec	r24
 9fa:	e2 f7       	brpl	.-8      	; 0x9f4 <Setpin_value+0x110>
 9fc:	cb 01       	movw	r24, r22
 9fe:	84 2b       	or	r24, r20
 a00:	8c 93       	st	X, r24
 a02:	51 c0       	rjmp	.+162    	; 0xaa6 <Setpin_value+0x1c2>
				  	            break;
				     case DIO_PORTC:
				    	 PORTC &=~(1<<copy_u8_PIN_Id);
 a04:	a5 e3       	ldi	r26, 0x35	; 53
 a06:	b0 e0       	ldi	r27, 0x00	; 0
 a08:	e5 e3       	ldi	r30, 0x35	; 53
 a0a:	f0 e0       	ldi	r31, 0x00	; 0
 a0c:	80 81       	ld	r24, Z
 a0e:	48 2f       	mov	r20, r24
 a10:	8d 81       	ldd	r24, Y+5	; 0x05
 a12:	28 2f       	mov	r18, r24
 a14:	30 e0       	ldi	r19, 0x00	; 0
 a16:	81 e0       	ldi	r24, 0x01	; 1
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	02 c0       	rjmp	.+4      	; 0xa20 <Setpin_value+0x13c>
 a1c:	88 0f       	add	r24, r24
 a1e:	99 1f       	adc	r25, r25
 a20:	2a 95       	dec	r18
 a22:	e2 f7       	brpl	.-8      	; 0xa1c <Setpin_value+0x138>
 a24:	80 95       	com	r24
 a26:	84 23       	and	r24, r20
 a28:	8c 93       	st	X, r24
				    	 PORTC |=(copy_u8_value<<copy_u8_PIN_Id);
 a2a:	a5 e3       	ldi	r26, 0x35	; 53
 a2c:	b0 e0       	ldi	r27, 0x00	; 0
 a2e:	e5 e3       	ldi	r30, 0x35	; 53
 a30:	f0 e0       	ldi	r31, 0x00	; 0
 a32:	80 81       	ld	r24, Z
 a34:	48 2f       	mov	r20, r24
 a36:	8e 81       	ldd	r24, Y+6	; 0x06
 a38:	28 2f       	mov	r18, r24
 a3a:	30 e0       	ldi	r19, 0x00	; 0
 a3c:	8d 81       	ldd	r24, Y+5	; 0x05
 a3e:	88 2f       	mov	r24, r24
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	b9 01       	movw	r22, r18
 a44:	02 c0       	rjmp	.+4      	; 0xa4a <Setpin_value+0x166>
 a46:	66 0f       	add	r22, r22
 a48:	77 1f       	adc	r23, r23
 a4a:	8a 95       	dec	r24
 a4c:	e2 f7       	brpl	.-8      	; 0xa46 <Setpin_value+0x162>
 a4e:	cb 01       	movw	r24, r22
 a50:	84 2b       	or	r24, r20
 a52:	8c 93       	st	X, r24
 a54:	28 c0       	rjmp	.+80     	; 0xaa6 <Setpin_value+0x1c2>
				 	 			   break;

				    case DIO_PORTD:
				    	PORTD &=~(1<<copy_u8_PIN_Id);
 a56:	a2 e3       	ldi	r26, 0x32	; 50
 a58:	b0 e0       	ldi	r27, 0x00	; 0
 a5a:	e2 e3       	ldi	r30, 0x32	; 50
 a5c:	f0 e0       	ldi	r31, 0x00	; 0
 a5e:	80 81       	ld	r24, Z
 a60:	48 2f       	mov	r20, r24
 a62:	8d 81       	ldd	r24, Y+5	; 0x05
 a64:	28 2f       	mov	r18, r24
 a66:	30 e0       	ldi	r19, 0x00	; 0
 a68:	81 e0       	ldi	r24, 0x01	; 1
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	02 c0       	rjmp	.+4      	; 0xa72 <Setpin_value+0x18e>
 a6e:	88 0f       	add	r24, r24
 a70:	99 1f       	adc	r25, r25
 a72:	2a 95       	dec	r18
 a74:	e2 f7       	brpl	.-8      	; 0xa6e <Setpin_value+0x18a>
 a76:	80 95       	com	r24
 a78:	84 23       	and	r24, r20
 a7a:	8c 93       	st	X, r24
				    	PORTD |=(copy_u8_value<<copy_u8_PIN_Id);
 a7c:	a2 e3       	ldi	r26, 0x32	; 50
 a7e:	b0 e0       	ldi	r27, 0x00	; 0
 a80:	e2 e3       	ldi	r30, 0x32	; 50
 a82:	f0 e0       	ldi	r31, 0x00	; 0
 a84:	80 81       	ld	r24, Z
 a86:	48 2f       	mov	r20, r24
 a88:	8e 81       	ldd	r24, Y+6	; 0x06
 a8a:	28 2f       	mov	r18, r24
 a8c:	30 e0       	ldi	r19, 0x00	; 0
 a8e:	8d 81       	ldd	r24, Y+5	; 0x05
 a90:	88 2f       	mov	r24, r24
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	b9 01       	movw	r22, r18
 a96:	02 c0       	rjmp	.+4      	; 0xa9c <Setpin_value+0x1b8>
 a98:	66 0f       	add	r22, r22
 a9a:	77 1f       	adc	r23, r23
 a9c:	8a 95       	dec	r24
 a9e:	e2 f7       	brpl	.-8      	; 0xa98 <Setpin_value+0x1b4>
 aa0:	cb 01       	movw	r24, r22
 aa2:	84 2b       	or	r24, r20
 aa4:	8c 93       	st	X, r24
								   break;

								   }

						ES_t local_enumError=DIO_OK;
 aa6:	1a 82       	std	Y+2, r1	; 0x02
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <Setpin_value+0x1ca>

					}
					else
					{
						ES_t local_enumError=OUT_OF_RANGE;
 aaa:	83 e0       	ldi	r24, 0x03	; 3
 aac:	89 83       	std	Y+1, r24	; 0x01

					}


						 return local_enumError;
 aae:	8b 81       	ldd	r24, Y+3	; 0x03

			}
 ab0:	28 96       	adiw	r28, 0x08	; 8
 ab2:	0f b6       	in	r0, 0x3f	; 63
 ab4:	f8 94       	cli
 ab6:	de bf       	out	0x3e, r29	; 62
 ab8:	0f be       	out	0x3f, r0	; 63
 aba:	cd bf       	out	0x3d, r28	; 61
 abc:	cf 91       	pop	r28
 abe:	df 91       	pop	r29
 ac0:	08 95       	ret

00000ac2 <TogglePIN>:

	ES_t TogglePIN(u8 copy_u8_PortId,u8  copy_u8_PIN_Id)
				{
 ac2:	df 93       	push	r29
 ac4:	cf 93       	push	r28
 ac6:	cd b7       	in	r28, 0x3d	; 61
 ac8:	de b7       	in	r29, 0x3e	; 62
 aca:	27 97       	sbiw	r28, 0x07	; 7
 acc:	0f b6       	in	r0, 0x3f	; 63
 ace:	f8 94       	cli
 ad0:	de bf       	out	0x3e, r29	; 62
 ad2:	0f be       	out	0x3f, r0	; 63
 ad4:	cd bf       	out	0x3d, r28	; 61
 ad6:	8c 83       	std	Y+4, r24	; 0x04
 ad8:	6d 83       	std	Y+5, r22	; 0x05
					ES_t local_enumError=DIO_NOK;
 ada:	81 e0       	ldi	r24, 0x01	; 1
 adc:	8b 83       	std	Y+3, r24	; 0x03

					if(copy_u8_PortId<=DIO_PORTD &&copy_u8_PIN_Id<=DIO_PIN7)
 ade:	8c 81       	ldd	r24, Y+4	; 0x04
 ae0:	84 30       	cpi	r24, 0x04	; 4
 ae2:	08 f0       	brcs	.+2      	; 0xae6 <TogglePIN+0x24>
 ae4:	74 c0       	rjmp	.+232    	; 0xbce <TogglePIN+0x10c>
 ae6:	8d 81       	ldd	r24, Y+5	; 0x05
 ae8:	88 30       	cpi	r24, 0x08	; 8
 aea:	08 f0       	brcs	.+2      	; 0xaee <TogglePIN+0x2c>
 aec:	70 c0       	rjmp	.+224    	; 0xbce <TogglePIN+0x10c>
					{

						 switch(copy_u8_PortId)
 aee:	8c 81       	ldd	r24, Y+4	; 0x04
 af0:	28 2f       	mov	r18, r24
 af2:	30 e0       	ldi	r19, 0x00	; 0
 af4:	3f 83       	std	Y+7, r19	; 0x07
 af6:	2e 83       	std	Y+6, r18	; 0x06
 af8:	8e 81       	ldd	r24, Y+6	; 0x06
 afa:	9f 81       	ldd	r25, Y+7	; 0x07
 afc:	81 30       	cpi	r24, 0x01	; 1
 afe:	91 05       	cpc	r25, r1
 b00:	49 f1       	breq	.+82     	; 0xb54 <TogglePIN+0x92>
 b02:	2e 81       	ldd	r18, Y+6	; 0x06
 b04:	3f 81       	ldd	r19, Y+7	; 0x07
 b06:	22 30       	cpi	r18, 0x02	; 2
 b08:	31 05       	cpc	r19, r1
 b0a:	2c f4       	brge	.+10     	; 0xb16 <TogglePIN+0x54>
 b0c:	8e 81       	ldd	r24, Y+6	; 0x06
 b0e:	9f 81       	ldd	r25, Y+7	; 0x07
 b10:	00 97       	sbiw	r24, 0x00	; 0
 b12:	61 f0       	breq	.+24     	; 0xb2c <TogglePIN+0x6a>
 b14:	5a c0       	rjmp	.+180    	; 0xbca <TogglePIN+0x108>
 b16:	2e 81       	ldd	r18, Y+6	; 0x06
 b18:	3f 81       	ldd	r19, Y+7	; 0x07
 b1a:	22 30       	cpi	r18, 0x02	; 2
 b1c:	31 05       	cpc	r19, r1
 b1e:	71 f1       	breq	.+92     	; 0xb7c <TogglePIN+0xba>
 b20:	8e 81       	ldd	r24, Y+6	; 0x06
 b22:	9f 81       	ldd	r25, Y+7	; 0x07
 b24:	83 30       	cpi	r24, 0x03	; 3
 b26:	91 05       	cpc	r25, r1
 b28:	e9 f1       	breq	.+122    	; 0xba4 <TogglePIN+0xe2>
 b2a:	4f c0       	rjmp	.+158    	; 0xbca <TogglePIN+0x108>
		   	 {
					  case DIO_PORTA:
					 	 PORTA ^=(1<<copy_u8_PIN_Id);
 b2c:	ab e3       	ldi	r26, 0x3B	; 59
 b2e:	b0 e0       	ldi	r27, 0x00	; 0
 b30:	eb e3       	ldi	r30, 0x3B	; 59
 b32:	f0 e0       	ldi	r31, 0x00	; 0
 b34:	80 81       	ld	r24, Z
 b36:	48 2f       	mov	r20, r24
 b38:	8d 81       	ldd	r24, Y+5	; 0x05
 b3a:	28 2f       	mov	r18, r24
 b3c:	30 e0       	ldi	r19, 0x00	; 0
 b3e:	81 e0       	ldi	r24, 0x01	; 1
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	02 2e       	mov	r0, r18
 b44:	02 c0       	rjmp	.+4      	; 0xb4a <TogglePIN+0x88>
 b46:	88 0f       	add	r24, r24
 b48:	99 1f       	adc	r25, r25
 b4a:	0a 94       	dec	r0
 b4c:	e2 f7       	brpl	.-8      	; 0xb46 <TogglePIN+0x84>
 b4e:	84 27       	eor	r24, r20
 b50:	8c 93       	st	X, r24
 b52:	3b c0       	rjmp	.+118    	; 0xbca <TogglePIN+0x108>
					 	 break;

					  case DIO_PORTB:
					 	 PORTB ^=(1<<copy_u8_PIN_Id);
 b54:	a8 e3       	ldi	r26, 0x38	; 56
 b56:	b0 e0       	ldi	r27, 0x00	; 0
 b58:	e8 e3       	ldi	r30, 0x38	; 56
 b5a:	f0 e0       	ldi	r31, 0x00	; 0
 b5c:	80 81       	ld	r24, Z
 b5e:	48 2f       	mov	r20, r24
 b60:	8d 81       	ldd	r24, Y+5	; 0x05
 b62:	28 2f       	mov	r18, r24
 b64:	30 e0       	ldi	r19, 0x00	; 0
 b66:	81 e0       	ldi	r24, 0x01	; 1
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	02 2e       	mov	r0, r18
 b6c:	02 c0       	rjmp	.+4      	; 0xb72 <TogglePIN+0xb0>
 b6e:	88 0f       	add	r24, r24
 b70:	99 1f       	adc	r25, r25
 b72:	0a 94       	dec	r0
 b74:	e2 f7       	brpl	.-8      	; 0xb6e <TogglePIN+0xac>
 b76:	84 27       	eor	r24, r20
 b78:	8c 93       	st	X, r24
 b7a:	27 c0       	rjmp	.+78     	; 0xbca <TogglePIN+0x108>

					     		 break;
					  case DIO_PORTC:
					 	 PORTC ^=(1<<copy_u8_PIN_Id);
 b7c:	a5 e3       	ldi	r26, 0x35	; 53
 b7e:	b0 e0       	ldi	r27, 0x00	; 0
 b80:	e5 e3       	ldi	r30, 0x35	; 53
 b82:	f0 e0       	ldi	r31, 0x00	; 0
 b84:	80 81       	ld	r24, Z
 b86:	48 2f       	mov	r20, r24
 b88:	8d 81       	ldd	r24, Y+5	; 0x05
 b8a:	28 2f       	mov	r18, r24
 b8c:	30 e0       	ldi	r19, 0x00	; 0
 b8e:	81 e0       	ldi	r24, 0x01	; 1
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	02 2e       	mov	r0, r18
 b94:	02 c0       	rjmp	.+4      	; 0xb9a <TogglePIN+0xd8>
 b96:	88 0f       	add	r24, r24
 b98:	99 1f       	adc	r25, r25
 b9a:	0a 94       	dec	r0
 b9c:	e2 f7       	brpl	.-8      	; 0xb96 <TogglePIN+0xd4>
 b9e:	84 27       	eor	r24, r20
 ba0:	8c 93       	st	X, r24
 ba2:	13 c0       	rjmp	.+38     	; 0xbca <TogglePIN+0x108>

					     		 break;
					  case DIO_PORTD:
					 	PORTD ^=(1<<copy_u8_PIN_Id);
 ba4:	a2 e3       	ldi	r26, 0x32	; 50
 ba6:	b0 e0       	ldi	r27, 0x00	; 0
 ba8:	e2 e3       	ldi	r30, 0x32	; 50
 baa:	f0 e0       	ldi	r31, 0x00	; 0
 bac:	80 81       	ld	r24, Z
 bae:	48 2f       	mov	r20, r24
 bb0:	8d 81       	ldd	r24, Y+5	; 0x05
 bb2:	28 2f       	mov	r18, r24
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	81 e0       	ldi	r24, 0x01	; 1
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	02 2e       	mov	r0, r18
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <TogglePIN+0x100>
 bbe:	88 0f       	add	r24, r24
 bc0:	99 1f       	adc	r25, r25
 bc2:	0a 94       	dec	r0
 bc4:	e2 f7       	brpl	.-8      	; 0xbbe <TogglePIN+0xfc>
 bc6:	84 27       	eor	r24, r20
 bc8:	8c 93       	st	X, r24

					     		 break;
	     }

						ES_t local_enumError=DIO_OK;
 bca:	1a 82       	std	Y+2, r1	; 0x02
 bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <TogglePIN+0x110>
					}
					else
					{
				ES_t local_enumError=OUT_OF_RANGE;
 bce:	83 e0       	ldi	r24, 0x03	; 3
 bd0:	89 83       	std	Y+1, r24	; 0x01

				}

					return local_enumError;
 bd2:	8b 81       	ldd	r24, Y+3	; 0x03

}
 bd4:	27 96       	adiw	r28, 0x07	; 7
 bd6:	0f b6       	in	r0, 0x3f	; 63
 bd8:	f8 94       	cli
 bda:	de bf       	out	0x3e, r29	; 62
 bdc:	0f be       	out	0x3f, r0	; 63
 bde:	cd bf       	out	0x3d, r28	; 61
 be0:	cf 91       	pop	r28
 be2:	df 91       	pop	r29
 be4:	08 95       	ret

00000be6 <GetPin>:
	ES_t GetPin(u8 copy_u8_PortId,u8 copy_u8_PIN_Id,u8 *copy_pu8_value)
{
 be6:	df 93       	push	r29
 be8:	cf 93       	push	r28
 bea:	cd b7       	in	r28, 0x3d	; 61
 bec:	de b7       	in	r29, 0x3e	; 62
 bee:	2a 97       	sbiw	r28, 0x0a	; 10
 bf0:	0f b6       	in	r0, 0x3f	; 63
 bf2:	f8 94       	cli
 bf4:	de bf       	out	0x3e, r29	; 62
 bf6:	0f be       	out	0x3f, r0	; 63
 bf8:	cd bf       	out	0x3d, r28	; 61
 bfa:	8d 83       	std	Y+5, r24	; 0x05
 bfc:	6e 83       	std	Y+6, r22	; 0x06
 bfe:	58 87       	std	Y+8, r21	; 0x08
 c00:	4f 83       	std	Y+7, r20	; 0x07
		ES_t local_enumError=DIO_NOK;
 c02:	81 e0       	ldi	r24, 0x01	; 1
 c04:	8c 83       	std	Y+4, r24	; 0x04
          if(copy_pu8_value!=NULL)
 c06:	8f 81       	ldd	r24, Y+7	; 0x07
 c08:	98 85       	ldd	r25, Y+8	; 0x08
 c0a:	00 97       	sbiw	r24, 0x00	; 0
 c0c:	09 f4       	brne	.+2      	; 0xc10 <GetPin+0x2a>
 c0e:	7d c0       	rjmp	.+250    	; 0xd0a <GetPin+0x124>
 {
        	  if(copy_u8_PortId<=DIO_PORTD&&copy_u8_PIN_Id<=DIO_PIN7)
 c10:	8d 81       	ldd	r24, Y+5	; 0x05
 c12:	84 30       	cpi	r24, 0x04	; 4
 c14:	08 f0       	brcs	.+2      	; 0xc18 <GetPin+0x32>
 c16:	76 c0       	rjmp	.+236    	; 0xd04 <GetPin+0x11e>
 c18:	8e 81       	ldd	r24, Y+6	; 0x06
 c1a:	88 30       	cpi	r24, 0x08	; 8
 c1c:	08 f0       	brcs	.+2      	; 0xc20 <GetPin+0x3a>
 c1e:	72 c0       	rjmp	.+228    	; 0xd04 <GetPin+0x11e>
        	  {
        			 switch(copy_u8_PortId)
 c20:	8d 81       	ldd	r24, Y+5	; 0x05
 c22:	28 2f       	mov	r18, r24
 c24:	30 e0       	ldi	r19, 0x00	; 0
 c26:	3a 87       	std	Y+10, r19	; 0x0a
 c28:	29 87       	std	Y+9, r18	; 0x09
 c2a:	49 85       	ldd	r20, Y+9	; 0x09
 c2c:	5a 85       	ldd	r21, Y+10	; 0x0a
 c2e:	41 30       	cpi	r20, 0x01	; 1
 c30:	51 05       	cpc	r21, r1
 c32:	59 f1       	breq	.+86     	; 0xc8a <GetPin+0xa4>
 c34:	89 85       	ldd	r24, Y+9	; 0x09
 c36:	9a 85       	ldd	r25, Y+10	; 0x0a
 c38:	82 30       	cpi	r24, 0x02	; 2
 c3a:	91 05       	cpc	r25, r1
 c3c:	34 f4       	brge	.+12     	; 0xc4a <GetPin+0x64>
 c3e:	29 85       	ldd	r18, Y+9	; 0x09
 c40:	3a 85       	ldd	r19, Y+10	; 0x0a
 c42:	21 15       	cp	r18, r1
 c44:	31 05       	cpc	r19, r1
 c46:	69 f0       	breq	.+26     	; 0xc62 <GetPin+0x7c>
 c48:	5b c0       	rjmp	.+182    	; 0xd00 <GetPin+0x11a>
 c4a:	49 85       	ldd	r20, Y+9	; 0x09
 c4c:	5a 85       	ldd	r21, Y+10	; 0x0a
 c4e:	42 30       	cpi	r20, 0x02	; 2
 c50:	51 05       	cpc	r21, r1
 c52:	79 f1       	breq	.+94     	; 0xcb2 <GetPin+0xcc>
 c54:	89 85       	ldd	r24, Y+9	; 0x09
 c56:	9a 85       	ldd	r25, Y+10	; 0x0a
 c58:	83 30       	cpi	r24, 0x03	; 3
 c5a:	91 05       	cpc	r25, r1
 c5c:	09 f4       	brne	.+2      	; 0xc60 <GetPin+0x7a>
 c5e:	3d c0       	rjmp	.+122    	; 0xcda <GetPin+0xf4>
 c60:	4f c0       	rjmp	.+158    	; 0xd00 <GetPin+0x11a>
        			   	 {
        						  case DIO_PORTA:
        							  *copy_pu8_value=((PINA>>copy_u8_PIN_Id)&1);
 c62:	e9 e3       	ldi	r30, 0x39	; 57
 c64:	f0 e0       	ldi	r31, 0x00	; 0
 c66:	80 81       	ld	r24, Z
 c68:	28 2f       	mov	r18, r24
 c6a:	30 e0       	ldi	r19, 0x00	; 0
 c6c:	8e 81       	ldd	r24, Y+6	; 0x06
 c6e:	88 2f       	mov	r24, r24
 c70:	90 e0       	ldi	r25, 0x00	; 0
 c72:	a9 01       	movw	r20, r18
 c74:	02 c0       	rjmp	.+4      	; 0xc7a <GetPin+0x94>
 c76:	55 95       	asr	r21
 c78:	47 95       	ror	r20
 c7a:	8a 95       	dec	r24
 c7c:	e2 f7       	brpl	.-8      	; 0xc76 <GetPin+0x90>
 c7e:	ca 01       	movw	r24, r20
 c80:	81 70       	andi	r24, 0x01	; 1
 c82:	ef 81       	ldd	r30, Y+7	; 0x07
 c84:	f8 85       	ldd	r31, Y+8	; 0x08
 c86:	80 83       	st	Z, r24
 c88:	3b c0       	rjmp	.+118    	; 0xd00 <GetPin+0x11a>
        						 	 break;

        						  case DIO_PORTB:
        							  *copy_pu8_value=((PINB>>copy_u8_PIN_Id)&1);
 c8a:	e6 e3       	ldi	r30, 0x36	; 54
 c8c:	f0 e0       	ldi	r31, 0x00	; 0
 c8e:	80 81       	ld	r24, Z
 c90:	28 2f       	mov	r18, r24
 c92:	30 e0       	ldi	r19, 0x00	; 0
 c94:	8e 81       	ldd	r24, Y+6	; 0x06
 c96:	88 2f       	mov	r24, r24
 c98:	90 e0       	ldi	r25, 0x00	; 0
 c9a:	a9 01       	movw	r20, r18
 c9c:	02 c0       	rjmp	.+4      	; 0xca2 <GetPin+0xbc>
 c9e:	55 95       	asr	r21
 ca0:	47 95       	ror	r20
 ca2:	8a 95       	dec	r24
 ca4:	e2 f7       	brpl	.-8      	; 0xc9e <GetPin+0xb8>
 ca6:	ca 01       	movw	r24, r20
 ca8:	81 70       	andi	r24, 0x01	; 1
 caa:	ef 81       	ldd	r30, Y+7	; 0x07
 cac:	f8 85       	ldd	r31, Y+8	; 0x08
 cae:	80 83       	st	Z, r24
 cb0:	27 c0       	rjmp	.+78     	; 0xd00 <GetPin+0x11a>

        						     		 break;
        						  case DIO_PORTC:
        							  *copy_pu8_value=((PINC>>copy_u8_PIN_Id)&1);
 cb2:	e3 e3       	ldi	r30, 0x33	; 51
 cb4:	f0 e0       	ldi	r31, 0x00	; 0
 cb6:	80 81       	ld	r24, Z
 cb8:	28 2f       	mov	r18, r24
 cba:	30 e0       	ldi	r19, 0x00	; 0
 cbc:	8e 81       	ldd	r24, Y+6	; 0x06
 cbe:	88 2f       	mov	r24, r24
 cc0:	90 e0       	ldi	r25, 0x00	; 0
 cc2:	a9 01       	movw	r20, r18
 cc4:	02 c0       	rjmp	.+4      	; 0xcca <GetPin+0xe4>
 cc6:	55 95       	asr	r21
 cc8:	47 95       	ror	r20
 cca:	8a 95       	dec	r24
 ccc:	e2 f7       	brpl	.-8      	; 0xcc6 <GetPin+0xe0>
 cce:	ca 01       	movw	r24, r20
 cd0:	81 70       	andi	r24, 0x01	; 1
 cd2:	ef 81       	ldd	r30, Y+7	; 0x07
 cd4:	f8 85       	ldd	r31, Y+8	; 0x08
 cd6:	80 83       	st	Z, r24
 cd8:	13 c0       	rjmp	.+38     	; 0xd00 <GetPin+0x11a>

        						     		 break;
        						  case DIO_PORTD:
        							  *copy_pu8_value=((PIND>>copy_u8_PIN_Id)&1);
 cda:	e0 e3       	ldi	r30, 0x30	; 48
 cdc:	f0 e0       	ldi	r31, 0x00	; 0
 cde:	80 81       	ld	r24, Z
 ce0:	28 2f       	mov	r18, r24
 ce2:	30 e0       	ldi	r19, 0x00	; 0
 ce4:	8e 81       	ldd	r24, Y+6	; 0x06
 ce6:	88 2f       	mov	r24, r24
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	a9 01       	movw	r20, r18
 cec:	02 c0       	rjmp	.+4      	; 0xcf2 <GetPin+0x10c>
 cee:	55 95       	asr	r21
 cf0:	47 95       	ror	r20
 cf2:	8a 95       	dec	r24
 cf4:	e2 f7       	brpl	.-8      	; 0xcee <GetPin+0x108>
 cf6:	ca 01       	movw	r24, r20
 cf8:	81 70       	andi	r24, 0x01	; 1
 cfa:	ef 81       	ldd	r30, Y+7	; 0x07
 cfc:	f8 85       	ldd	r31, Y+8	; 0x08
 cfe:	80 83       	st	Z, r24

        						     		 break;
        		     }


					ES_t local_enumError=DIO_OK;
 d00:	1b 82       	std	Y+3, r1	; 0x03
 d02:	05 c0       	rjmp	.+10     	; 0xd0e <GetPin+0x128>
        	  }
 else
        	  {
    	ES_t local_enumError=OUT_OF_RANGE;
 d04:	83 e0       	ldi	r24, 0x03	; 3
 d06:	8a 83       	std	Y+2, r24	; 0x02
 d08:	02 c0       	rjmp	.+4      	; 0xd0e <GetPin+0x128>

}

else
					{
				ES_t local_enumError=DIO_NULLPOINTER;
 d0a:	82 e0       	ldi	r24, 0x02	; 2
 d0c:	89 83       	std	Y+1, r24	; 0x01

				}


					 return local_enumError;
 d0e:	8c 81       	ldd	r24, Y+4	; 0x04

}
 d10:	2a 96       	adiw	r28, 0x0a	; 10
 d12:	0f b6       	in	r0, 0x3f	; 63
 d14:	f8 94       	cli
 d16:	de bf       	out	0x3e, r29	; 62
 d18:	0f be       	out	0x3f, r0	; 63
 d1a:	cd bf       	out	0x3d, r28	; 61
 d1c:	cf 91       	pop	r28
 d1e:	df 91       	pop	r29
 d20:	08 95       	ret

00000d22 <_exit>:
 d22:	f8 94       	cli

00000d24 <__stop_program>:
 d24:	ff cf       	rjmp	.-2      	; 0xd24 <__stop_program>
